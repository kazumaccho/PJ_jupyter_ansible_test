#! /bin/sh
# Generated by configure.
# Run this file to recreate the current configuration.
# Compiler output produced by configure, useful for debugging
# configure, is in config.log if it exists.

debug=false
ac_cs_recheck=false
ac_cs_silent=false

SHELL=${CONFIG_SHELL-/bin/sh}
export SHELL
## -------------------- ##
## M4sh Initialization. ##
## -------------------- ##

# Be more Bourne compatible
DUALCASE=1; export DUALCASE # for MKS sh
as_nop=:
if test ${ZSH_VERSION+y} && (emulate sh) >/dev/null 2>&1
then :
  emulate sh
  NULLCMD=:
  # Pre-4.2 versions of Zsh do word splitting on ${1+"$@"}, which
  # is contrary to our usage.  Disable this feature.
  alias -g '${1+"$@"}'='"$@"'
  setopt NO_GLOB_SUBST
else $as_nop
  case `(set -o) 2>/dev/null` in #(
  *posix*) :
    set -o posix ;; #(
  *) :
     ;;
esac
fi



# Reset variables that may have inherited troublesome values from
# the environment.

# IFS needs to be set, to space, tab, and newline, in precisely that order.
# (If _AS_PATH_WALK were called with IFS unset, it would have the
# side effect of setting IFS to empty, thus disabling word splitting.)
# Quoting is to prevent editors from complaining about space-tab.
as_nl='
'
export as_nl
IFS=" ""	$as_nl"

PS1='$ '
PS2='> '
PS4='+ '

# Ensure predictable behavior from utilities with locale-dependent output.
LC_ALL=C
export LC_ALL
LANGUAGE=C
export LANGUAGE

# We cannot yet rely on "unset" to work, but we need these variables
# to be unset--not just set to an empty or harmless value--now, to
# avoid bugs in old shells (e.g. pre-3.0 UWIN ksh).  This construct
# also avoids known problems related to "unset" and subshell syntax
# in other old shells (e.g. bash 2.01 and pdksh 5.2.14).
for as_var in BASH_ENV ENV MAIL MAILPATH CDPATH
do eval test \${$as_var+y} \
  && ( (unset $as_var) || exit 1) >/dev/null 2>&1 && unset $as_var || :
done

# Ensure that fds 0, 1, and 2 are open.
if (exec 3>&0) 2>/dev/null; then :; else exec 0</dev/null; fi
if (exec 3>&1) 2>/dev/null; then :; else exec 1>/dev/null; fi
if (exec 3>&2)            ; then :; else exec 2>/dev/null; fi

# The user is always right.
if ${PATH_SEPARATOR+false} :; then
  PATH_SEPARATOR=:
  (PATH='/bin;/bin'; FPATH=$PATH; sh -c :) >/dev/null 2>&1 && {
    (PATH='/bin:/bin'; FPATH=$PATH; sh -c :) >/dev/null 2>&1 ||
      PATH_SEPARATOR=';'
  }
fi


# Find who we are.  Look in the path if we contain no directory separator.
as_myself=
case $0 in #((
  *[\\/]* ) as_myself=$0 ;;
  *) as_save_IFS=$IFS; IFS=$PATH_SEPARATOR
for as_dir in $PATH
do
  IFS=$as_save_IFS
  case $as_dir in #(((
    '') as_dir=./ ;;
    */) ;;
    *) as_dir=$as_dir/ ;;
  esac
    test -r "$as_dir$0" && as_myself=$as_dir$0 && break
  done
IFS=$as_save_IFS

     ;;
esac
# We did not find ourselves, most probably we were run as `sh COMMAND'
# in which case we are not to be found in the path.
if test "x$as_myself" = x; then
  as_myself=$0
fi
if test ! -f "$as_myself"; then
  printf "%s\n" "$as_myself: error: cannot find myself; rerun with an absolute file name" >&2
  exit 1
fi



# as_fn_error STATUS ERROR [LINENO LOG_FD]
# ----------------------------------------
# Output "`basename $0`: error: ERROR" to stderr. If LINENO and LOG_FD are
# provided, also output the error to LOG_FD, referencing LINENO. Then exit the
# script with STATUS, using 1 if that was 0.
as_fn_error ()
{
  as_status=$1; test $as_status -eq 0 && as_status=1
  if test "$4"; then
    as_lineno=${as_lineno-"$3"} as_lineno_stack=as_lineno_stack=$as_lineno_stack
    printf "%s\n" "$as_me:${as_lineno-$LINENO}: error: $2" >&$4
  fi
  printf "%s\n" "$as_me: error: $2" >&2
  as_fn_exit $as_status
} # as_fn_error



# as_fn_set_status STATUS
# -----------------------
# Set $? to STATUS, without forking.
as_fn_set_status ()
{
  return $1
} # as_fn_set_status

# as_fn_exit STATUS
# -----------------
# Exit the shell with STATUS, even in a "trap 0" or "set -e" context.
as_fn_exit ()
{
  set +e
  as_fn_set_status $1
  exit $1
} # as_fn_exit

# as_fn_unset VAR
# ---------------
# Portably unset VAR.
as_fn_unset ()
{
  { eval $1=; unset $1;}
}
as_unset=as_fn_unset

# as_fn_append VAR VALUE
# ----------------------
# Append the text in VALUE to the end of the definition contained in VAR. Take
# advantage of any shell optimizations that allow amortized linear growth over
# repeated appends, instead of the typical quadratic growth present in naive
# implementations.
if (eval "as_var=1; as_var+=2; test x\$as_var = x12") 2>/dev/null
then :
  eval 'as_fn_append ()
  {
    eval $1+=\$2
  }'
else $as_nop
  as_fn_append ()
  {
    eval $1=\$$1\$2
  }
fi # as_fn_append

# as_fn_arith ARG...
# ------------------
# Perform arithmetic evaluation on the ARGs, and store the result in the
# global $as_val. Take advantage of shells that can avoid forks. The arguments
# must be portable across $(()) and expr.
if (eval "test \$(( 1 + 1 )) = 2") 2>/dev/null
then :
  eval 'as_fn_arith ()
  {
    as_val=$(( $* ))
  }'
else $as_nop
  as_fn_arith ()
  {
    as_val=`expr "$@" || test $? -eq 1`
  }
fi # as_fn_arith


if expr a : '\(a\)' >/dev/null 2>&1 &&
   test "X`expr 00001 : '.*\(...\)'`" = X001; then
  as_expr=expr
else
  as_expr=false
fi

if (basename -- /) >/dev/null 2>&1 && test "X`basename -- / 2>&1`" = "X/"; then
  as_basename=basename
else
  as_basename=false
fi

if (as_dir=`dirname -- /` && test "X$as_dir" = X/) >/dev/null 2>&1; then
  as_dirname=dirname
else
  as_dirname=false
fi

as_me=`$as_basename -- "$0" ||
$as_expr X/"$0" : '.*/\([^/][^/]*\)/*$' \| \
	 X"$0" : 'X\(//\)$' \| \
	 X"$0" : 'X\(/\)' \| . 2>/dev/null ||
printf "%s\n" X/"$0" |
    sed '/^.*\/\([^/][^/]*\)\/*$/{
	    s//\1/
	    q
	  }
	  /^X\/\(\/\/\)$/{
	    s//\1/
	    q
	  }
	  /^X\/\(\/\).*/{
	    s//\1/
	    q
	  }
	  s/.*/./; q'`

# Avoid depending upon Character Ranges.
as_cr_letters='abcdefghijklmnopqrstuvwxyz'
as_cr_LETTERS='ABCDEFGHIJKLMNOPQRSTUVWXYZ'
as_cr_Letters=$as_cr_letters$as_cr_LETTERS
as_cr_digits='0123456789'
as_cr_alnum=$as_cr_Letters$as_cr_digits


# Determine whether it's possible to make 'echo' print without a newline.
# These variables are no longer used directly by Autoconf, but are AC_SUBSTed
# for compatibility with existing Makefiles.
ECHO_C= ECHO_N= ECHO_T=
case `echo -n x` in #(((((
-n*)
  case `echo 'xy\c'` in
  *c*) ECHO_T='	';;	# ECHO_T is single tab character.
  xy)  ECHO_C='\c';;
  *)   echo `echo ksh88 bug on AIX 6.1` > /dev/null
       ECHO_T='	';;
  esac;;
*)
  ECHO_N='-n';;
esac

# For backward compatibility with old third-party macros, we provide
# the shell variables $as_echo and $as_echo_n.  New code should use
# AS_ECHO(["message"]) and AS_ECHO_N(["message"]), respectively.
as_echo='printf %s\n'
as_echo_n='printf %s'

rm -f conf$$ conf$$.exe conf$$.file
if test -d conf$$.dir; then
  rm -f conf$$.dir/conf$$.file
else
  rm -f conf$$.dir
  mkdir conf$$.dir 2>/dev/null
fi
if (echo >conf$$.file) 2>/dev/null; then
  if ln -s conf$$.file conf$$ 2>/dev/null; then
    as_ln_s='ln -s'
    # ... but there are two gotchas:
    # 1) On MSYS, both `ln -s file dir' and `ln file dir' fail.
    # 2) DJGPP < 2.04 has no symlinks; `ln -s' creates a wrapper executable.
    # In both cases, we have to default to `cp -pR'.
    ln -s conf$$.file conf$$.dir 2>/dev/null && test ! -f conf$$.exe ||
      as_ln_s='cp -pR'
  elif ln conf$$.file conf$$ 2>/dev/null; then
    as_ln_s=ln
  else
    as_ln_s='cp -pR'
  fi
else
  as_ln_s='cp -pR'
fi
rm -f conf$$ conf$$.exe conf$$.dir/conf$$.file conf$$.file
rmdir conf$$.dir 2>/dev/null


# as_fn_mkdir_p
# -------------
# Create "$as_dir" as a directory, including parents if necessary.
as_fn_mkdir_p ()
{

  case $as_dir in #(
  -*) as_dir=./$as_dir;;
  esac
  test -d "$as_dir" || eval $as_mkdir_p || {
    as_dirs=
    while :; do
      case $as_dir in #(
      *\'*) as_qdir=`printf "%s\n" "$as_dir" | sed "s/'/'\\\\\\\\''/g"`;; #'(
      *) as_qdir=$as_dir;;
      esac
      as_dirs="'$as_qdir' $as_dirs"
      as_dir=`$as_dirname -- "$as_dir" ||
$as_expr X"$as_dir" : 'X\(.*[^/]\)//*[^/][^/]*/*$' \| \
	 X"$as_dir" : 'X\(//\)[^/]' \| \
	 X"$as_dir" : 'X\(//\)$' \| \
	 X"$as_dir" : 'X\(/\)' \| . 2>/dev/null ||
printf "%s\n" X"$as_dir" |
    sed '/^X\(.*[^/]\)\/\/*[^/][^/]*\/*$/{
	    s//\1/
	    q
	  }
	  /^X\(\/\/\)[^/].*/{
	    s//\1/
	    q
	  }
	  /^X\(\/\/\)$/{
	    s//\1/
	    q
	  }
	  /^X\(\/\).*/{
	    s//\1/
	    q
	  }
	  s/.*/./; q'`
      test -d "$as_dir" && break
    done
    test -z "$as_dirs" || eval "mkdir $as_dirs"
  } || test -d "$as_dir" || as_fn_error $? "cannot create directory $as_dir"


} # as_fn_mkdir_p
if mkdir -p . 2>/dev/null; then
  as_mkdir_p='mkdir -p "$as_dir"'
else
  test -d ./-p && rmdir ./-p
  as_mkdir_p=false
fi


# as_fn_executable_p FILE
# -----------------------
# Test if FILE is an executable regular file.
as_fn_executable_p ()
{
  test -f "$1" && test -x "$1"
} # as_fn_executable_p
as_test_x='test -x'
as_executable_p=as_fn_executable_p

# Sed expression to map a string onto a valid CPP name.
as_tr_cpp="eval sed 'y%*$as_cr_letters%P$as_cr_LETTERS%;s%[^_$as_cr_alnum]%_%g'"

# Sed expression to map a string onto a valid variable name.
as_tr_sh="eval sed 'y%*+%pp%;s%[^_$as_cr_alnum]%_%g'"


exec 6>&1
## ----------------------------------- ##
## Main body of $CONFIG_STATUS script. ##
## ----------------------------------- ##
# Save the log message, to keep $0 and so on meaningful, and to
# report actual input values of CONFIG_FILES etc. instead of their
# values after options handling.
ac_log="
This file was extended by Open MPI $as_me 5.0.5, which was
generated by GNU Autoconf 2.71.  Invocation command line was

  CONFIG_FILES    = $CONFIG_FILES
  CONFIG_HEADERS  = $CONFIG_HEADERS
  CONFIG_LINKS    = $CONFIG_LINKS
  CONFIG_COMMANDS = $CONFIG_COMMANDS
  $ $0 $@

on `(hostname || uname -n) 2>/dev/null | sed 1q`
"

# Files that config.status was made for.
config_files=" ompi/include/ompi/version.h oshmem/include/oshmem/version.h opal/include/opal/version.h ompi/mpi/java/Makefile ompi/mpi/java/java/Makefile ompi/mpi/java/c/Makefile ompi/mpi/fortran/configure-fortran-output.h opal/mca/common/Makefile opal/mca/common/ofi/Makefile opal/mca/common/sm/Makefile opal/mca/common/ucx/Makefile opal/mca/accelerator/Makefile opal/mca/accelerator/null/Makefile opal/mca/accelerator/cuda/Makefile opal/mca/accelerator/rocm/Makefile opal/mca/allocator/Makefile opal/mca/allocator/basic/Makefile opal/mca/allocator/bucket/Makefile opal/mca/backtrace/Makefile opal/mca/backtrace/execinfo/Makefile opal/mca/backtrace/printstack/Makefile opal/mca/backtrace/none/Makefile opal/mca/btl/Makefile opal/mca/btl/self/Makefile opal/mca/btl/ofi/Makefile opal/mca/btl/portals4/Makefile opal/mca/btl/sm/Makefile opal/mca/btl/smcuda/Makefile opal/mca/btl/tcp/Makefile opal/mca/btl/uct/Makefile opal/mca/btl/ugni/Makefile opal/mca/btl/usnic/Makefile opal/mca/dl/Makefile opal/mca/dl/dlopen/Makefile opal/mca/dl/libltdl/Makefile opal/mca/hwloc/Makefile opal/mca/if/Makefile opal/mca/if/bsdx_ipv4/Makefile opal/mca/if/bsdx_ipv6/Makefile opal/mca/if/linux_ipv6/Makefile opal/mca/if/posix_ipv4/Makefile opal/mca/if/solaris_ipv6/Makefile opal/mca/installdirs/Makefile opal/mca/installdirs/env/Makefile opal/mca/installdirs/config/Makefile opal/mca/installdirs/config/install_dirs.h opal/mca/memchecker/Makefile opal/mca/memchecker/valgrind/Makefile opal/mca/memcpy/Makefile opal/mca/memory/Makefile opal/mca/memory/patcher/Makefile opal/mca/memory/malloc_solaris/Makefile opal/mca/mpool/Makefile opal/mca/mpool/hugepage/Makefile opal/mca/mpool/memkind/Makefile opal/mca/patcher/Makefile opal/mca/patcher/overwrite/Makefile opal/mca/pmix/Makefile opal/mca/rcache/Makefile opal/mca/rcache/grdma/Makefile opal/mca/rcache/gpusm/Makefile opal/mca/rcache/rgpusm/Makefile opal/mca/rcache/udreg/Makefile opal/mca/reachable/Makefile opal/mca/reachable/weighted/Makefile opal/mca/reachable/netlink/Makefile opal/mca/shmem/Makefile opal/mca/shmem/mmap/Makefile opal/mca/shmem/posix/Makefile opal/mca/shmem/sysv/Makefile opal/mca/smsc/Makefile opal/mca/smsc/cma/Makefile opal/mca/smsc/knem/Makefile opal/mca/smsc/xpmem/Makefile opal/mca/threads/Makefile opal/mca/threads/argobots/Makefile opal/mca/threads/pthreads/Makefile opal/mca/threads/qthreads/Makefile opal/mca/timer/Makefile opal/mca/timer/altix/Makefile opal/mca/timer/darwin/Makefile opal/mca/timer/linux/Makefile opal/mca/timer/solaris/Makefile ompi/mca/common/Makefile ompi/mca/common/monitoring/Makefile ompi/mca/common/ompio/Makefile ompi/mca/bml/Makefile ompi/mca/bml/r2/Makefile ompi/mca/coll/Makefile ompi/mca/coll/adapt/Makefile ompi/mca/coll/basic/Makefile ompi/mca/coll/han/Makefile ompi/mca/coll/inter/Makefile ompi/mca/coll/libnbc/Makefile ompi/mca/coll/self/Makefile ompi/mca/coll/sync/Makefile ompi/mca/coll/tuned/Makefile ompi/mca/coll/cuda/Makefile ompi/mca/coll/ftagree/Makefile ompi/mca/coll/hcoll/Makefile ompi/mca/coll/monitoring/Makefile ompi/mca/coll/portals4/Makefile ompi/mca/coll/sm/Makefile ompi/mca/coll/ucc/Makefile ompi/mca/fbtl/Makefile ompi/mca/fbtl/ime/Makefile ompi/mca/fbtl/posix/Makefile ompi/mca/fbtl/pvfs2/Makefile ompi/mca/fcoll/Makefile ompi/mca/fcoll/dynamic/Makefile ompi/mca/fcoll/dynamic_gen2/Makefile ompi/mca/fcoll/individual/Makefile ompi/mca/fcoll/vulcan/Makefile ompi/mca/fs/Makefile ompi/mca/fs/gpfs/Makefile ompi/mca/fs/ime/Makefile ompi/mca/fs/lustre/Makefile ompi/mca/fs/pvfs2/Makefile ompi/mca/fs/ufs/Makefile ompi/mca/hook/Makefile ompi/mca/hook/comm_method/Makefile ompi/mca/io/Makefile ompi/mca/io/ompio/Makefile ompi/mca/io/romio341/Makefile ompi/mca/mtl/Makefile ompi/mca/mtl/ofi/Makefile ompi/mca/mtl/portals4/Makefile ompi/mca/mtl/psm2/Makefile ompi/mca/op/Makefile ompi/mca/op/aarch64/Makefile ompi/mca/op/avx/Makefile ompi/mca/osc/Makefile ompi/mca/osc/sm/Makefile ompi/mca/osc/monitoring/Makefile ompi/mca/osc/portals4/Makefile ompi/mca/osc/rdma/Makefile ompi/mca/osc/ucx/Makefile ompi/mca/part/Makefile ompi/mca/part/persist/Makefile ompi/mca/pml/Makefile ompi/mca/pml/cm/Makefile ompi/mca/pml/monitoring/Makefile ompi/mca/pml/ob1/Makefile ompi/mca/pml/ucx/Makefile ompi/mca/pml/v/Makefile ompi/mca/sharedfp/Makefile ompi/mca/sharedfp/individual/Makefile ompi/mca/sharedfp/lockedfile/Makefile ompi/mca/sharedfp/sm/Makefile ompi/mca/topo/Makefile ompi/mca/topo/basic/Makefile 3rd-party/treematch/Makefile ompi/mca/topo/treematch/Makefile ompi/mca/vprotocol/Makefile ompi/mca/vprotocol/pessimist/Makefile oshmem/mca/atomic/Makefile oshmem/mca/atomic/basic/Makefile oshmem/mca/atomic/ucx/Makefile oshmem/mca/memheap/Makefile oshmem/mca/memheap/buddy/Makefile oshmem/mca/memheap/ptmalloc/Makefile oshmem/mca/scoll/Makefile oshmem/mca/scoll/basic/Makefile oshmem/mca/scoll/mpi/Makefile oshmem/mca/scoll/ucc/Makefile oshmem/mca/spml/Makefile oshmem/mca/spml/ucx/Makefile oshmem/mca/sshmem/Makefile oshmem/mca/sshmem/mmap/Makefile oshmem/mca/sshmem/sysv/Makefile oshmem/mca/sshmem/ucx/Makefile ompi/mpiext/affinity/Makefile ompi/mpiext/affinity/c/Makefile ompi/mpiext/cuda/Makefile ompi/mpiext/cuda/c/Makefile ompi/mpiext/ftmpi/Makefile ompi/mpiext/ftmpi/c/Makefile ompi/mpiext/ftmpi/c/profile/Makefile ompi/mpiext/ftmpi/mpif-h/Makefile ompi/mpiext/ftmpi/use-mpi/Makefile ompi/mpiext/ftmpi/use-mpi-f08/Makefile ompi/mpiext/rocm/Makefile ompi/mpiext/rocm/c/Makefile ompi/mpiext/shortfloat/Makefile ompi/mpiext/shortfloat/c/Makefile ompi/mpiext/shortfloat/mpif-h/Makefile ompi/mpiext/shortfloat/use-mpi/Makefile ompi/mpiext/shortfloat/use-mpi-f08/Makefile ompi/mpiext/shortfloat/c/mpiext_shortfloat_c.h ompi/mpiext/shortfloat/mpif-h/mpiext_shortfloat_mpifh.h ompi/mpiext/shortfloat/use-mpi-f08/mpiext_shortfloat_usempif08.h Makefile docs/Makefile config/Makefile contrib/Makefile contrib/dist/mofed/debian/changelog contrib/dist/mofed/debian/control contrib/dist/mofed/debian/copyright:LICENSE 3rd-party/Makefile test/Makefile test/event/Makefile test/asm/Makefile test/datatype/Makefile test/class/Makefile test/mpool/Makefile test/support/Makefile test/threads/Makefile test/util/Makefile test/monitoring/Makefile test/spc/Makefile contrib/dist/mofed/debian/rules contrib/dist/mofed/compile_debian_mlnx_example opal/Makefile opal/etc/Makefile opal/include/Makefile opal/datatype/Makefile opal/util/Makefile opal/util/keyval/Makefile opal/mca/base/Makefile opal/tools/wrappers/Makefile opal/tools/wrappers/opalcc-wrapper-data.txt opal/tools/wrappers/opal.pc ompi/Makefile ompi/etc/Makefile ompi/include/Makefile ompi/include/mpif.h ompi/include/mpif-config.h ompi/datatype/Makefile ompi/debuggers/Makefile ompi/mpi/c/Makefile ompi/mpi/fortran/base/Makefile ompi/mpi/fortran/mpif-h/Makefile ompi/mpi/fortran/mpif-h/profile/Makefile ompi/mpi/fortran/use-mpi/Makefile ompi/mpi/fortran/use-mpi/mpi-types.F90 ompi/mpi/fortran/use-mpi-tkr/Makefile ompi/mpi/fortran/use-mpi-tkr/fortran_sizes.h ompi/mpi/fortran/use-mpi-tkr/fortran_kinds.sh ompi/mpi/fortran/use-mpi-ignore-tkr/Makefile ompi/mpi/fortran/use-mpi-ignore-tkr/mpi-ignore-tkr-interfaces.h ompi/mpi/fortran/use-mpi-ignore-tkr/mpi-ignore-tkr-file-interfaces.h ompi/mpi/fortran/use-mpi-ignore-tkr/mpi-ignore-tkr-removed-interfaces.h ompi/mpi/fortran/use-mpi-f08/Makefile ompi/mpi/fortran/use-mpi-f08/base/Makefile ompi/mpi/fortran/use-mpi-f08/profile/Makefile ompi/mpi/fortran/use-mpi-f08/bindings/Makefile ompi/mpi/fortran/use-mpi-f08/mod/Makefile ompi/mpi/fortran/use-mpi-f08/mod/mpi-f08-interfaces.h ompi/mpi/fortran/mpiext-use-mpi/Makefile ompi/mpi/fortran/mpiext-use-mpi-f08/Makefile ompi/mpi/tool/Makefile ompi/tools/ompi_info/Makefile ompi/tools/wrappers/Makefile ompi/tools/wrappers/mpicc-wrapper-data.txt ompi/tools/wrappers/mpic++-wrapper-data.txt ompi/tools/wrappers/mpifort-wrapper-data.txt ompi/tools/wrappers/ompi.pc ompi/tools/wrappers/ompi-c.pc ompi/tools/wrappers/ompi-cxx.pc ompi/tools/wrappers/ompi-fort.pc ompi/tools/wrappers/mpijavac.pl ompi/tools/mpisync/Makefile ompi/tools/mpirun/Makefile oshmem/Makefile oshmem/include/Makefile oshmem/shmem/c/Makefile oshmem/shmem/fortran/Makefile oshmem/tools/oshmem_info/Makefile oshmem/tools/wrappers/Makefile oshmem/tools/wrappers/shmemcc-wrapper-data.txt oshmem/tools/wrappers/shmemc++-wrapper-data.txt oshmem/tools/wrappers/shmemfort-wrapper-data.txt oshmem/tools/wrappers/oshmem.pc oshmem/tools/wrappers/oshmem-c.pc oshmem/tools/wrappers/oshmem-cxx.pc oshmem/tools/wrappers/oshmem-fort.pc"
config_headers=" opal/include/opal_config.h ompi/include/mpi.h oshmem/include/shmem.h ompi/mpiext/cuda/c/mpiext_cuda_c.h ompi/mpiext/rocm/c/mpiext_rocm_c.h"
config_links=" test/monitoring/profile2mat.pl:ompi/mca/common/monitoring/profile2mat.pl test/monitoring/aggregate_profile.pl:ompi/mca/common/monitoring/aggregate_profile.pl"
config_commands=" depfiles ompi/mca/osc/monitoring/osc_monitoring_template_gen.h libtool"

ac_cs_usage="\
\`$as_me' instantiates files and other configuration actions
from templates according to the current configuration.  Unless the files
and actions are specified as TAGs, all are instantiated by default.

Usage: $0 [OPTION]... [TAG]...

  -h, --help       print this help, then exit
  -V, --version    print version number and configuration settings, then exit
      --config     print configuration, then exit
  -q, --quiet, --silent
                   do not print progress messages
  -d, --debug      don't remove temporary files
      --recheck    update $as_me by reconfiguring in the same conditions
      --file=FILE[:TEMPLATE]
                   instantiate the configuration file FILE
      --header=FILE[:TEMPLATE]
                   instantiate the configuration header FILE

Configuration files:
$config_files

Configuration headers:
$config_headers

Configuration links:
$config_links

Configuration commands:
$config_commands

Report bugs to <https://www.open-mpi.org/community/help/>."

ac_cs_config='--prefix=/usr/openmpi-5.0.5 --with-libevent=/opt/libevent/release --with-hwloc=/opt/hwloc/release --with-pmix=/opt/pmix/release --with-slurm PKG_CONFIG_PATH=:/usr/lib64/pkgconfig:/usr/share/pkgconfig'
ac_cs_version="\
Open MPI config.status 5.0.5
configured by ./configure, generated by GNU Autoconf 2.71,
  with options \"$ac_cs_config\"

Copyright (C) 2021 Free Software Foundation, Inc.
This config.status script is free software; the Free Software Foundation
gives unlimited permission to copy, distribute and modify it."

ac_pwd='/root/rpmbuild/BUILD/openmpi-5.0.5'
srcdir='.'
INSTALL='/usr/bin/install -c'
MKDIR_P='/usr/bin/mkdir -p'
AWK='gawk'
test -n "$AWK" || AWK=awk
# The default lists apply if the user does not specify any file.
ac_need_defaults=:
while test $# != 0
do
  case $1 in
  --*=?*)
    ac_option=`expr "X$1" : 'X\([^=]*\)='`
    ac_optarg=`expr "X$1" : 'X[^=]*=\(.*\)'`
    ac_shift=:
    ;;
  --*=)
    ac_option=`expr "X$1" : 'X\([^=]*\)='`
    ac_optarg=
    ac_shift=:
    ;;
  *)
    ac_option=$1
    ac_optarg=$2
    ac_shift=shift
    ;;
  esac

  case $ac_option in
  # Handling of the options.
  -recheck | --recheck | --rechec | --reche | --rech | --rec | --re | --r)
    ac_cs_recheck=: ;;
  --version | --versio | --versi | --vers | --ver | --ve | --v | -V )
    printf "%s\n" "$ac_cs_version"; exit ;;
  --config | --confi | --conf | --con | --co | --c )
    printf "%s\n" "$ac_cs_config"; exit ;;
  --debug | --debu | --deb | --de | --d | -d )
    debug=: ;;
  --file | --fil | --fi | --f )
    $ac_shift
    case $ac_optarg in
    *\'*) ac_optarg=`printf "%s\n" "$ac_optarg" | sed "s/'/'\\\\\\\\''/g"` ;;
    '') as_fn_error $? "missing file argument" ;;
    esac
    as_fn_append CONFIG_FILES " '$ac_optarg'"
    ac_need_defaults=false;;
  --header | --heade | --head | --hea )
    $ac_shift
    case $ac_optarg in
    *\'*) ac_optarg=`printf "%s\n" "$ac_optarg" | sed "s/'/'\\\\\\\\''/g"` ;;
    esac
    as_fn_append CONFIG_HEADERS " '$ac_optarg'"
    ac_need_defaults=false;;
  --he | --h)
    # Conflict between --help and --header
    as_fn_error $? "ambiguous option: \`$1'
Try \`$0 --help' for more information.";;
  --help | --hel | -h )
    printf "%s\n" "$ac_cs_usage"; exit ;;
  -q | -quiet | --quiet | --quie | --qui | --qu | --q \
  | -silent | --silent | --silen | --sile | --sil | --si | --s)
    ac_cs_silent=: ;;

  # This is an error.
  -*) as_fn_error $? "unrecognized option: \`$1'
Try \`$0 --help' for more information." ;;

  *) as_fn_append ac_config_targets " $1"
     ac_need_defaults=false ;;

  esac
  shift
done

ac_configure_extra_args=

if $ac_cs_silent; then
  exec 6>/dev/null
  ac_configure_extra_args="$ac_configure_extra_args --silent"
fi

if $ac_cs_recheck; then
  set X /bin/sh './configure'  '--prefix=/usr/openmpi-5.0.5' '--with-libevent=/opt/libevent/release' '--with-hwloc=/opt/hwloc/release' '--with-pmix=/opt/pmix/release' '--with-slurm' 'PKG_CONFIG_PATH=:/usr/lib64/pkgconfig:/usr/share/pkgconfig' $ac_configure_extra_args --no-create --no-recursion
  shift
  \printf "%s\n" "running CONFIG_SHELL=/bin/sh $*" >&6
  CONFIG_SHELL='/bin/sh'
  export CONFIG_SHELL
  exec "$@"
fi

exec 5>>config.log
{
  echo
  sed 'h;s/./-/g;s/^.../## /;s/...$/ ##/;p;x;p;x' <<_ASBOX
## Running $as_me. ##
_ASBOX
  printf "%s\n" "$ac_log"
} >&5

#
# INIT-COMMANDS
#
AMDEP_TRUE="" MAKE="make"


# The HP-UX ksh and POSIX shell print the target directory to stdout
# if CDPATH is set.
(unset CDPATH) >/dev/null 2>&1 && unset CDPATH

sed_quote_subst='s/\(["`$\\]\)/\\\1/g'
double_quote_subst='s/\(["`\\]\)/\\\1/g'
delay_variable_subst='s/\\\\\\\\\\\$/\\\\\\$/g'
enable_shared='yes'
enable_static='no'
NM='/usr/bin/nm -B'
macro_version='2.4.6'
macro_revision='2.4.6'
pic_mode='default'
enable_fast_install='yes'
shared_archive_member_spec=''
SHELL='/bin/sh'
ECHO='printf %s\n'
PATH_SEPARATOR=':'
host_alias=''
host='x86_64-pc-linux-gnu'
host_os='linux-gnu'
build_alias=''
build='x86_64-pc-linux-gnu'
build_os='linux-gnu'
SED='/usr/bin/sed'
Xsed='/usr/bin/sed -e 1s/^X//'
GREP='/usr/bin/grep'
EGREP='/usr/bin/grep -E'
FGREP='/usr/bin/grep -F'
LD='/usr/bin/ld -m elf_x86_64'
LN_S='ln -s'
max_cmd_len='1572864'
ac_objext='o'
exeext=''
lt_unset='unset'
lt_SP2NL='tr \040 \012'
lt_NL2SP='tr \015\012 \040\040'
lt_cv_to_host_file_cmd='func_convert_file_noop'
lt_cv_to_tool_file_cmd='func_convert_file_noop'
reload_flag=' -r'
reload_cmds='$LD$reload_flag -o $output$reload_objs'
OBJDUMP='objdump'
deplibs_check_method='pass_all'
file_magic_cmd='$MAGIC_CMD'
file_magic_glob=''
want_nocaseglob='no'
DLLTOOL='false'
sharedlib_from_linklib_cmd='printf %s\n'
AR='ar'
AR_FLAGS='cru'
archiver_list_spec='@'
STRIP='strip'
RANLIB='ranlib'
old_postinstall_cmds='chmod 644 $oldlib~$RANLIB $tool_oldlib'
old_postuninstall_cmds=''
old_archive_cmds='$AR $AR_FLAGS $oldlib$oldobjs~$RANLIB $tool_oldlib'
lock_old_archive_extraction='no'
CC='gcc'
CFLAGS='-O3 -DNDEBUG  -finline-functions -mcx16'
compiler='gfortran'
GCC='yes'
lt_cv_sys_global_symbol_pipe='sed -n -e '\''s/^.*[	 ]\([ABCDGIRSTW][ABCDGIRSTW]*\)[	 ][	 ]*\([_A-Za-z][_A-Za-z0-9]*\)$/\1 \2 \2/p'\'' | sed '\''/ __gnu_lto/d'\'''
lt_cv_sys_global_symbol_to_cdecl='sed -n -e '\''s/^T .* \(.*\)$/extern int \1();/p'\'' -e '\''s/^[ABCDGIRSTW][ABCDGIRSTW]* .* \(.*\)$/extern char \1;/p'\'''
lt_cv_sys_global_symbol_to_import=''
lt_cv_sys_global_symbol_to_c_name_address='sed -n -e '\''s/^: \(.*\) .*$/  {"\1", (void *) 0},/p'\'' -e '\''s/^[ABCDGIRSTW][ABCDGIRSTW]* .* \(.*\)$/  {"\1", (void *) \&\1},/p'\'''
lt_cv_sys_global_symbol_to_c_name_address_lib_prefix='sed -n -e '\''s/^: \(.*\) .*$/  {"\1", (void *) 0},/p'\'' -e '\''s/^[ABCDGIRSTW][ABCDGIRSTW]* .* \(lib.*\)$/  {"\1", (void *) \&\1},/p'\'' -e '\''s/^[ABCDGIRSTW][ABCDGIRSTW]* .* \(.*\)$/  {"lib\1", (void *) \&\1},/p'\'''
lt_cv_nm_interface='BSD nm'
nm_file_list_spec='@'
lt_sysroot=''
lt_cv_truncate_bin='/usr/bin/dd bs=4096 count=1'
objdir='.libs'
MAGIC_CMD='file'
lt_prog_compiler_no_builtin_flag=' -fno-builtin'
lt_prog_compiler_pic=' -fPIC -DPIC'
lt_prog_compiler_wl='-Wl,'
lt_prog_compiler_static=''
lt_cv_prog_compiler_c_o='yes'
need_locks='no'
MANIFEST_TOOL=':'
DSYMUTIL=''
NMEDIT=''
LIPO=''
OTOOL=''
OTOOL64=''
libext='a'
shrext_cmds='.so'
extract_expsyms_cmds=''
archive_cmds_need_lc='no'
enable_shared_with_static_runtimes='no'
export_dynamic_flag_spec='$wl--export-dynamic'
whole_archive_flag_spec='$wl--whole-archive$convenience $wl--no-whole-archive'
compiler_needs_object='no'
old_archive_from_new_cmds=''
old_archive_from_expsyms_cmds=''
archive_cmds='$CC -shared $pic_flag $libobjs $deplibs $compiler_flags $wl-soname $wl$soname -o $lib'
archive_expsym_cmds='echo "{ global:" > $output_objdir/$libname.ver~
            cat $export_symbols | sed -e "s/\(.*\)/\1;/" >> $output_objdir/$libname.ver~
            echo "local: *; };" >> $output_objdir/$libname.ver~
            $CC -shared $pic_flag $libobjs $deplibs $compiler_flags $wl-soname $wl$soname $wl-version-script $wl$output_objdir/$libname.ver -o $lib'
module_cmds=''
module_expsym_cmds=''
with_gnu_ld='yes'
allow_undefined_flag=''
no_undefined_flag=''
hardcode_libdir_flag_spec='$wl-rpath $wl$libdir'
hardcode_libdir_separator=''
hardcode_direct='no'
hardcode_direct_absolute='no'
hardcode_minus_L='no'
hardcode_shlibpath_var='unsupported'
hardcode_automatic='no'
inherit_rpath='no'
link_all_deplibs='unknown'
always_export_symbols='no'
export_symbols_cmds='$NM $libobjs $convenience | $global_symbol_pipe | $SED '\''s/.* //'\'' | sort | uniq > $export_symbols'
exclude_expsyms='_GLOBAL_OFFSET_TABLE_|_GLOBAL__F[ID]_.*'
include_expsyms=''
prelink_cmds=''
postlink_cmds=''
file_list_spec=''
variables_saved_for_relink='PATH LD_LIBRARY_PATH LD_RUN_PATH GCC_EXEC_PREFIX COMPILER_PATH LIBRARY_PATH'
need_lib_prefix='no'
need_version='no'
version_type='linux'
runpath_var='LD_RUN_PATH'
shlibpath_var='LD_LIBRARY_PATH'
shlibpath_overrides_runpath='no'
libname_spec='lib$name'
library_names_spec='$libname$release$shared_ext$versuffix $libname$release$shared_ext$major $libname$shared_ext'
soname_spec='$libname$release$shared_ext$major'
install_override_mode=''
postinstall_cmds=''
postuninstall_cmds=''
finish_cmds='PATH="\$PATH:/sbin" ldconfig -n $libdir'
finish_eval=''
hardcode_into_libs='yes'
sys_lib_search_path_spec='/usr/lib/gcc/x86_64-redhat-linux/8 /usr/lib64 /lib64 /usr/lib /lib '
configure_time_dlsearch_path='/lib /usr/lib /usr/lib64/dyninst           '
configure_time_lt_sys_library_path=''
hardcode_action='immediate'
enable_dlopen='unknown'
enable_dlopen_self='unknown'
enable_dlopen_self_static='unknown'
old_striplib='strip --strip-debug'
striplib='strip --strip-unneeded'
compiler_lib_search_dirs=''
predep_objects=''
postdep_objects=''
predeps=''
postdeps=''
compiler_lib_search_path=''
LD_CXX='/usr/bin/ld -m elf_x86_64'
LD_FC='/usr/bin/ld -m elf_x86_64'
reload_flag_CXX=' -r'
reload_flag_FC=' -r'
reload_cmds_CXX='$LD$reload_flag -o $output$reload_objs'
reload_cmds_FC='$LD$reload_flag -o $output$reload_objs'
old_archive_cmds_CXX='$AR $AR_FLAGS $oldlib$oldobjs~$RANLIB $tool_oldlib'
old_archive_cmds_FC='$AR $AR_FLAGS $oldlib$oldobjs~$RANLIB $tool_oldlib'
compiler_CXX='g++'
compiler_FC='gfortran'
GCC_CXX='yes'
GCC_FC='yes'
lt_prog_compiler_no_builtin_flag_CXX=' -fno-builtin'
lt_prog_compiler_no_builtin_flag_FC=''
lt_prog_compiler_pic_CXX=' -fPIC -DPIC'
lt_prog_compiler_pic_FC=' -fPIC'
lt_prog_compiler_wl_CXX='-Wl,'
lt_prog_compiler_wl_FC='-Wl,'
lt_prog_compiler_static_CXX=''
lt_prog_compiler_static_FC=''
lt_cv_prog_compiler_c_o_CXX='yes'
lt_cv_prog_compiler_c_o_FC='yes'
archive_cmds_need_lc_CXX='no'
archive_cmds_need_lc_FC='no'
enable_shared_with_static_runtimes_CXX='no'
enable_shared_with_static_runtimes_FC='no'
export_dynamic_flag_spec_CXX='$wl--export-dynamic'
export_dynamic_flag_spec_FC='$wl--export-dynamic'
whole_archive_flag_spec_CXX='$wl--whole-archive$convenience $wl--no-whole-archive'
whole_archive_flag_spec_FC='$wl--whole-archive$convenience $wl--no-whole-archive'
compiler_needs_object_CXX='no'
compiler_needs_object_FC='no'
old_archive_from_new_cmds_CXX=''
old_archive_from_new_cmds_FC=''
old_archive_from_expsyms_cmds_CXX=''
old_archive_from_expsyms_cmds_FC=''
archive_cmds_CXX='$CC $pic_flag -shared -nostdlib $predep_objects $libobjs $deplibs $postdep_objects $compiler_flags $wl-soname $wl$soname -o $lib'
archive_cmds_FC='$CC -shared $pic_flag $libobjs $deplibs $compiler_flags $wl-soname $wl$soname -o $lib'
archive_expsym_cmds_CXX='$CC $pic_flag -shared -nostdlib $predep_objects $libobjs $deplibs $postdep_objects $compiler_flags $wl-soname $wl$soname $wl-retain-symbols-file $wl$export_symbols -o $lib'
archive_expsym_cmds_FC='echo "{ global:" > $output_objdir/$libname.ver~
            cat $export_symbols | sed -e "s/\(.*\)/\1;/" >> $output_objdir/$libname.ver~
            echo "local: *; };" >> $output_objdir/$libname.ver~
            $CC -shared $pic_flag $libobjs $deplibs $compiler_flags $wl-soname $wl$soname $wl-version-script $wl$output_objdir/$libname.ver -o $lib'
module_cmds_CXX=''
module_cmds_FC=''
module_expsym_cmds_CXX=''
module_expsym_cmds_FC=''
with_gnu_ld_CXX='yes'
with_gnu_ld_FC='yes'
allow_undefined_flag_CXX=''
allow_undefined_flag_FC=''
no_undefined_flag_CXX=''
no_undefined_flag_FC=''
hardcode_libdir_flag_spec_CXX='$wl-rpath $wl$libdir'
hardcode_libdir_flag_spec_FC='$wl-rpath $wl$libdir'
hardcode_libdir_separator_CXX=''
hardcode_libdir_separator_FC=''
hardcode_direct_CXX='no'
hardcode_direct_FC='no'
hardcode_direct_absolute_CXX='no'
hardcode_direct_absolute_FC='no'
hardcode_minus_L_CXX='no'
hardcode_minus_L_FC='no'
hardcode_shlibpath_var_CXX='unsupported'
hardcode_shlibpath_var_FC='unsupported'
hardcode_automatic_CXX='no'
hardcode_automatic_FC='no'
inherit_rpath_CXX='no'
inherit_rpath_FC='no'
link_all_deplibs_CXX='unknown'
link_all_deplibs_FC='unknown'
always_export_symbols_CXX='no'
always_export_symbols_FC='no'
export_symbols_cmds_CXX='$NM $libobjs $convenience | $global_symbol_pipe | $SED '\''s/.* //'\'' | sort | uniq > $export_symbols'
export_symbols_cmds_FC='$NM $libobjs $convenience | $global_symbol_pipe | $SED '\''s/.* //'\'' | sort | uniq > $export_symbols'
exclude_expsyms_CXX='_GLOBAL_OFFSET_TABLE_|_GLOBAL__F[ID]_.*'
exclude_expsyms_FC='_GLOBAL_OFFSET_TABLE_|_GLOBAL__F[ID]_.*'
include_expsyms_CXX=''
include_expsyms_FC=''
prelink_cmds_CXX=''
prelink_cmds_FC=''
postlink_cmds_CXX=''
postlink_cmds_FC=''
file_list_spec_CXX=''
file_list_spec_FC=''
hardcode_action_CXX='immediate'
hardcode_action_FC='immediate'
compiler_lib_search_dirs_CXX='/usr/lib/gcc/x86_64-redhat-linux/8 /usr/lib/gcc/x86_64-redhat-linux/8/../../../../lib64 /lib/../lib64 /usr/lib/../lib64 /usr/lib/gcc/x86_64-redhat-linux/8/../../..'
compiler_lib_search_dirs_FC='/usr/lib/gcc/x86_64-redhat-linux/8 /usr/lib/gcc/x86_64-redhat-linux/8/../../../../lib64 /lib/../lib64 /usr/lib/../lib64 /usr/lib/gcc/x86_64-redhat-linux/8/../../..'
predep_objects_CXX='/usr/lib/gcc/x86_64-redhat-linux/8/../../../../lib64/crti.o /usr/lib/gcc/x86_64-redhat-linux/8/crtbeginS.o'
predep_objects_FC='/usr/lib/gcc/x86_64-redhat-linux/8/../../../../lib64/crti.o /usr/lib/gcc/x86_64-redhat-linux/8/crtbeginS.o'
postdep_objects_CXX='/usr/lib/gcc/x86_64-redhat-linux/8/crtendS.o /usr/lib/gcc/x86_64-redhat-linux/8/../../../../lib64/crtn.o'
postdep_objects_FC='/usr/lib/gcc/x86_64-redhat-linux/8/crtendS.o /usr/lib/gcc/x86_64-redhat-linux/8/../../../../lib64/crtn.o'
predeps_CXX=''
predeps_FC=''
postdeps_CXX='-lstdc++ -lm -lgcc_s -lc -lgcc_s'
postdeps_FC='-lgfortran -lm -lgcc_s -lquadmath -lm -lgcc_s -lc -lgcc_s'
compiler_lib_search_path_CXX='-L/usr/lib/gcc/x86_64-redhat-linux/8 -L/usr/lib/gcc/x86_64-redhat-linux/8/../../../../lib64 -L/lib/../lib64 -L/usr/lib/../lib64 -L/usr/lib/gcc/x86_64-redhat-linux/8/../../..'
compiler_lib_search_path_FC='-L/usr/lib/gcc/x86_64-redhat-linux/8 -L/usr/lib/gcc/x86_64-redhat-linux/8/../../../../lib64 -L/lib/../lib64 -L/usr/lib/../lib64 -L/usr/lib/gcc/x86_64-redhat-linux/8/../../..'

LTCC='gcc'
LTCFLAGS='-O3 -DNDEBUG  -finline-functions -mcx16'
compiler='gcc'

# A function that is used when there is no print builtin or printf.
func_fallback_echo ()
{
  eval 'cat <<_LTECHO_EOF
$1
_LTECHO_EOF'
}

# Quote evaled strings.
for var in NM SHELL ECHO PATH_SEPARATOR SED GREP EGREP FGREP LD LN_S lt_SP2NL lt_NL2SP reload_flag OBJDUMP deplibs_check_method file_magic_cmd file_magic_glob want_nocaseglob DLLTOOL sharedlib_from_linklib_cmd AR AR_FLAGS archiver_list_spec STRIP RANLIB CC CFLAGS compiler lt_cv_sys_global_symbol_pipe lt_cv_sys_global_symbol_to_cdecl lt_cv_sys_global_symbol_to_import lt_cv_sys_global_symbol_to_c_name_address lt_cv_sys_global_symbol_to_c_name_address_lib_prefix lt_cv_nm_interface nm_file_list_spec lt_cv_truncate_bin lt_prog_compiler_no_builtin_flag lt_prog_compiler_pic lt_prog_compiler_wl lt_prog_compiler_static lt_cv_prog_compiler_c_o need_locks MANIFEST_TOOL DSYMUTIL NMEDIT LIPO OTOOL OTOOL64 shrext_cmds export_dynamic_flag_spec whole_archive_flag_spec compiler_needs_object with_gnu_ld allow_undefined_flag no_undefined_flag hardcode_libdir_flag_spec hardcode_libdir_separator exclude_expsyms include_expsyms file_list_spec variables_saved_for_relink libname_spec library_names_spec soname_spec install_override_mode finish_eval old_striplib striplib compiler_lib_search_dirs predep_objects postdep_objects predeps postdeps compiler_lib_search_path LD_CXX LD_FC reload_flag_CXX reload_flag_FC compiler_CXX compiler_FC lt_prog_compiler_no_builtin_flag_CXX lt_prog_compiler_no_builtin_flag_FC lt_prog_compiler_pic_CXX lt_prog_compiler_pic_FC lt_prog_compiler_wl_CXX lt_prog_compiler_wl_FC lt_prog_compiler_static_CXX lt_prog_compiler_static_FC lt_cv_prog_compiler_c_o_CXX lt_cv_prog_compiler_c_o_FC export_dynamic_flag_spec_CXX export_dynamic_flag_spec_FC whole_archive_flag_spec_CXX whole_archive_flag_spec_FC compiler_needs_object_CXX compiler_needs_object_FC with_gnu_ld_CXX with_gnu_ld_FC allow_undefined_flag_CXX allow_undefined_flag_FC no_undefined_flag_CXX no_undefined_flag_FC hardcode_libdir_flag_spec_CXX hardcode_libdir_flag_spec_FC hardcode_libdir_separator_CXX hardcode_libdir_separator_FC exclude_expsyms_CXX exclude_expsyms_FC include_expsyms_CXX include_expsyms_FC file_list_spec_CXX file_list_spec_FC compiler_lib_search_dirs_CXX compiler_lib_search_dirs_FC predep_objects_CXX predep_objects_FC postdep_objects_CXX postdep_objects_FC predeps_CXX predeps_FC postdeps_CXX postdeps_FC compiler_lib_search_path_CXX compiler_lib_search_path_FC; do
    case `eval \\$ECHO \\""\\$$var"\\"` in
    *[\\\`\"\$]*)
      eval "lt_$var=\\\"\`\$ECHO \"\$$var\" | \$SED \"\$sed_quote_subst\"\`\\\"" ## exclude from sc_prohibit_nested_quotes
      ;;
    *)
      eval "lt_$var=\\\"\$$var\\\""
      ;;
    esac
done

# Double-quote double-evaled strings.
for var in reload_cmds old_postinstall_cmds old_postuninstall_cmds old_archive_cmds extract_expsyms_cmds old_archive_from_new_cmds old_archive_from_expsyms_cmds archive_cmds archive_expsym_cmds module_cmds module_expsym_cmds export_symbols_cmds prelink_cmds postlink_cmds postinstall_cmds postuninstall_cmds finish_cmds sys_lib_search_path_spec configure_time_dlsearch_path configure_time_lt_sys_library_path reload_cmds_CXX reload_cmds_FC old_archive_cmds_CXX old_archive_cmds_FC old_archive_from_new_cmds_CXX old_archive_from_new_cmds_FC old_archive_from_expsyms_cmds_CXX old_archive_from_expsyms_cmds_FC archive_cmds_CXX archive_cmds_FC archive_expsym_cmds_CXX archive_expsym_cmds_FC module_cmds_CXX module_cmds_FC module_expsym_cmds_CXX module_expsym_cmds_FC export_symbols_cmds_CXX export_symbols_cmds_FC prelink_cmds_CXX prelink_cmds_FC postlink_cmds_CXX postlink_cmds_FC; do
    case `eval \\$ECHO \\""\\$$var"\\"` in
    *[\\\`\"\$]*)
      eval "lt_$var=\\\"\`\$ECHO \"\$$var\" | \$SED -e \"\$double_quote_subst\" -e \"\$sed_quote_subst\" -e \"\$delay_variable_subst\"\`\\\"" ## exclude from sc_prohibit_nested_quotes
      ;;
    *)
      eval "lt_$var=\\\"\$$var\\\""
      ;;
    esac
done

ac_aux_dir='./config/'

# See if we are running on zsh, and set the options that allow our
# commands through without removal of \ escapes INIT.
if test -n "${ZSH_VERSION+set}"; then
   setopt NO_GLOB_SUBST
fi


    PACKAGE='openmpi'
    VERSION='5.0.5'
    RM='rm -f'
    ofile='libtool'





ac_aux_dir='./config/'




# Handling of arguments.
for ac_config_target in $ac_config_targets
do
  case $ac_config_target in
    "ompi/include/ompi/version.h") CONFIG_FILES="$CONFIG_FILES ompi/include/ompi/version.h" ;;
    "oshmem/include/oshmem/version.h") CONFIG_FILES="$CONFIG_FILES oshmem/include/oshmem/version.h" ;;
    "opal/include/opal/version.h") CONFIG_FILES="$CONFIG_FILES opal/include/opal/version.h" ;;
    "opal/include/opal_config.h") CONFIG_HEADERS="$CONFIG_HEADERS opal/include/opal_config.h" ;;
    "ompi/include/mpi.h") CONFIG_HEADERS="$CONFIG_HEADERS ompi/include/mpi.h" ;;
    "oshmem/include/shmem.h") CONFIG_HEADERS="$CONFIG_HEADERS oshmem/include/shmem.h" ;;
    "depfiles") CONFIG_COMMANDS="$CONFIG_COMMANDS depfiles" ;;
    "ompi/mpi/java/Makefile") CONFIG_FILES="$CONFIG_FILES ompi/mpi/java/Makefile" ;;
    "ompi/mpi/java/java/Makefile") CONFIG_FILES="$CONFIG_FILES ompi/mpi/java/java/Makefile" ;;
    "ompi/mpi/java/c/Makefile") CONFIG_FILES="$CONFIG_FILES ompi/mpi/java/c/Makefile" ;;
    "ompi/mpi/fortran/configure-fortran-output.h") CONFIG_FILES="$CONFIG_FILES ompi/mpi/fortran/configure-fortran-output.h" ;;
    "opal/mca/common/Makefile") CONFIG_FILES="$CONFIG_FILES opal/mca/common/Makefile" ;;
    "opal/mca/common/ofi/Makefile") CONFIG_FILES="$CONFIG_FILES opal/mca/common/ofi/Makefile" ;;
    "opal/mca/common/sm/Makefile") CONFIG_FILES="$CONFIG_FILES opal/mca/common/sm/Makefile" ;;
    "opal/mca/common/ucx/Makefile") CONFIG_FILES="$CONFIG_FILES opal/mca/common/ucx/Makefile" ;;
    "opal/mca/accelerator/Makefile") CONFIG_FILES="$CONFIG_FILES opal/mca/accelerator/Makefile" ;;
    "opal/mca/accelerator/null/Makefile") CONFIG_FILES="$CONFIG_FILES opal/mca/accelerator/null/Makefile" ;;
    "opal/mca/accelerator/cuda/Makefile") CONFIG_FILES="$CONFIG_FILES opal/mca/accelerator/cuda/Makefile" ;;
    "opal/mca/accelerator/rocm/Makefile") CONFIG_FILES="$CONFIG_FILES opal/mca/accelerator/rocm/Makefile" ;;
    "opal/mca/allocator/Makefile") CONFIG_FILES="$CONFIG_FILES opal/mca/allocator/Makefile" ;;
    "opal/mca/allocator/basic/Makefile") CONFIG_FILES="$CONFIG_FILES opal/mca/allocator/basic/Makefile" ;;
    "opal/mca/allocator/bucket/Makefile") CONFIG_FILES="$CONFIG_FILES opal/mca/allocator/bucket/Makefile" ;;
    "opal/mca/backtrace/Makefile") CONFIG_FILES="$CONFIG_FILES opal/mca/backtrace/Makefile" ;;
    "opal/mca/backtrace/execinfo/Makefile") CONFIG_FILES="$CONFIG_FILES opal/mca/backtrace/execinfo/Makefile" ;;
    "opal/mca/backtrace/printstack/Makefile") CONFIG_FILES="$CONFIG_FILES opal/mca/backtrace/printstack/Makefile" ;;
    "opal/mca/backtrace/none/Makefile") CONFIG_FILES="$CONFIG_FILES opal/mca/backtrace/none/Makefile" ;;
    "opal/mca/btl/Makefile") CONFIG_FILES="$CONFIG_FILES opal/mca/btl/Makefile" ;;
    "opal/mca/btl/self/Makefile") CONFIG_FILES="$CONFIG_FILES opal/mca/btl/self/Makefile" ;;
    "opal/mca/btl/ofi/Makefile") CONFIG_FILES="$CONFIG_FILES opal/mca/btl/ofi/Makefile" ;;
    "opal/mca/btl/portals4/Makefile") CONFIG_FILES="$CONFIG_FILES opal/mca/btl/portals4/Makefile" ;;
    "opal/mca/btl/sm/Makefile") CONFIG_FILES="$CONFIG_FILES opal/mca/btl/sm/Makefile" ;;
    "opal/mca/btl/smcuda/Makefile") CONFIG_FILES="$CONFIG_FILES opal/mca/btl/smcuda/Makefile" ;;
    "opal/mca/btl/tcp/Makefile") CONFIG_FILES="$CONFIG_FILES opal/mca/btl/tcp/Makefile" ;;
    "opal/mca/btl/uct/Makefile") CONFIG_FILES="$CONFIG_FILES opal/mca/btl/uct/Makefile" ;;
    "opal/mca/btl/ugni/Makefile") CONFIG_FILES="$CONFIG_FILES opal/mca/btl/ugni/Makefile" ;;
    "opal/mca/btl/usnic/Makefile") CONFIG_FILES="$CONFIG_FILES opal/mca/btl/usnic/Makefile" ;;
    "opal/mca/dl/Makefile") CONFIG_FILES="$CONFIG_FILES opal/mca/dl/Makefile" ;;
    "opal/mca/dl/dlopen/Makefile") CONFIG_FILES="$CONFIG_FILES opal/mca/dl/dlopen/Makefile" ;;
    "opal/mca/dl/libltdl/Makefile") CONFIG_FILES="$CONFIG_FILES opal/mca/dl/libltdl/Makefile" ;;
    "opal/mca/hwloc/Makefile") CONFIG_FILES="$CONFIG_FILES opal/mca/hwloc/Makefile" ;;
    "opal/mca/if/Makefile") CONFIG_FILES="$CONFIG_FILES opal/mca/if/Makefile" ;;
    "opal/mca/if/bsdx_ipv4/Makefile") CONFIG_FILES="$CONFIG_FILES opal/mca/if/bsdx_ipv4/Makefile" ;;
    "opal/mca/if/bsdx_ipv6/Makefile") CONFIG_FILES="$CONFIG_FILES opal/mca/if/bsdx_ipv6/Makefile" ;;
    "opal/mca/if/linux_ipv6/Makefile") CONFIG_FILES="$CONFIG_FILES opal/mca/if/linux_ipv6/Makefile" ;;
    "opal/mca/if/posix_ipv4/Makefile") CONFIG_FILES="$CONFIG_FILES opal/mca/if/posix_ipv4/Makefile" ;;
    "opal/mca/if/solaris_ipv6/Makefile") CONFIG_FILES="$CONFIG_FILES opal/mca/if/solaris_ipv6/Makefile" ;;
    "opal/mca/installdirs/Makefile") CONFIG_FILES="$CONFIG_FILES opal/mca/installdirs/Makefile" ;;
    "opal/mca/installdirs/env/Makefile") CONFIG_FILES="$CONFIG_FILES opal/mca/installdirs/env/Makefile" ;;
    "opal/mca/installdirs/config/Makefile") CONFIG_FILES="$CONFIG_FILES opal/mca/installdirs/config/Makefile" ;;
    "opal/mca/installdirs/config/install_dirs.h") CONFIG_FILES="$CONFIG_FILES opal/mca/installdirs/config/install_dirs.h" ;;
    "opal/mca/memchecker/Makefile") CONFIG_FILES="$CONFIG_FILES opal/mca/memchecker/Makefile" ;;
    "opal/mca/memchecker/valgrind/Makefile") CONFIG_FILES="$CONFIG_FILES opal/mca/memchecker/valgrind/Makefile" ;;
    "opal/mca/memcpy/Makefile") CONFIG_FILES="$CONFIG_FILES opal/mca/memcpy/Makefile" ;;
    "opal/mca/memory/Makefile") CONFIG_FILES="$CONFIG_FILES opal/mca/memory/Makefile" ;;
    "opal/mca/memory/patcher/Makefile") CONFIG_FILES="$CONFIG_FILES opal/mca/memory/patcher/Makefile" ;;
    "opal/mca/memory/malloc_solaris/Makefile") CONFIG_FILES="$CONFIG_FILES opal/mca/memory/malloc_solaris/Makefile" ;;
    "opal/mca/mpool/Makefile") CONFIG_FILES="$CONFIG_FILES opal/mca/mpool/Makefile" ;;
    "opal/mca/mpool/hugepage/Makefile") CONFIG_FILES="$CONFIG_FILES opal/mca/mpool/hugepage/Makefile" ;;
    "opal/mca/mpool/memkind/Makefile") CONFIG_FILES="$CONFIG_FILES opal/mca/mpool/memkind/Makefile" ;;
    "opal/mca/patcher/Makefile") CONFIG_FILES="$CONFIG_FILES opal/mca/patcher/Makefile" ;;
    "opal/mca/patcher/overwrite/Makefile") CONFIG_FILES="$CONFIG_FILES opal/mca/patcher/overwrite/Makefile" ;;
    "opal/mca/pmix/Makefile") CONFIG_FILES="$CONFIG_FILES opal/mca/pmix/Makefile" ;;
    "opal/mca/rcache/Makefile") CONFIG_FILES="$CONFIG_FILES opal/mca/rcache/Makefile" ;;
    "opal/mca/rcache/grdma/Makefile") CONFIG_FILES="$CONFIG_FILES opal/mca/rcache/grdma/Makefile" ;;
    "opal/mca/rcache/gpusm/Makefile") CONFIG_FILES="$CONFIG_FILES opal/mca/rcache/gpusm/Makefile" ;;
    "opal/mca/rcache/rgpusm/Makefile") CONFIG_FILES="$CONFIG_FILES opal/mca/rcache/rgpusm/Makefile" ;;
    "opal/mca/rcache/udreg/Makefile") CONFIG_FILES="$CONFIG_FILES opal/mca/rcache/udreg/Makefile" ;;
    "opal/mca/reachable/Makefile") CONFIG_FILES="$CONFIG_FILES opal/mca/reachable/Makefile" ;;
    "opal/mca/reachable/weighted/Makefile") CONFIG_FILES="$CONFIG_FILES opal/mca/reachable/weighted/Makefile" ;;
    "opal/mca/reachable/netlink/Makefile") CONFIG_FILES="$CONFIG_FILES opal/mca/reachable/netlink/Makefile" ;;
    "opal/mca/shmem/Makefile") CONFIG_FILES="$CONFIG_FILES opal/mca/shmem/Makefile" ;;
    "opal/mca/shmem/mmap/Makefile") CONFIG_FILES="$CONFIG_FILES opal/mca/shmem/mmap/Makefile" ;;
    "opal/mca/shmem/posix/Makefile") CONFIG_FILES="$CONFIG_FILES opal/mca/shmem/posix/Makefile" ;;
    "opal/mca/shmem/sysv/Makefile") CONFIG_FILES="$CONFIG_FILES opal/mca/shmem/sysv/Makefile" ;;
    "opal/mca/smsc/Makefile") CONFIG_FILES="$CONFIG_FILES opal/mca/smsc/Makefile" ;;
    "opal/mca/smsc/cma/Makefile") CONFIG_FILES="$CONFIG_FILES opal/mca/smsc/cma/Makefile" ;;
    "opal/mca/smsc/knem/Makefile") CONFIG_FILES="$CONFIG_FILES opal/mca/smsc/knem/Makefile" ;;
    "opal/mca/smsc/xpmem/Makefile") CONFIG_FILES="$CONFIG_FILES opal/mca/smsc/xpmem/Makefile" ;;
    "opal/mca/threads/Makefile") CONFIG_FILES="$CONFIG_FILES opal/mca/threads/Makefile" ;;
    "opal/mca/threads/argobots/Makefile") CONFIG_FILES="$CONFIG_FILES opal/mca/threads/argobots/Makefile" ;;
    "opal/mca/threads/pthreads/Makefile") CONFIG_FILES="$CONFIG_FILES opal/mca/threads/pthreads/Makefile" ;;
    "opal/mca/threads/qthreads/Makefile") CONFIG_FILES="$CONFIG_FILES opal/mca/threads/qthreads/Makefile" ;;
    "opal/mca/timer/Makefile") CONFIG_FILES="$CONFIG_FILES opal/mca/timer/Makefile" ;;
    "opal/mca/timer/altix/Makefile") CONFIG_FILES="$CONFIG_FILES opal/mca/timer/altix/Makefile" ;;
    "opal/mca/timer/darwin/Makefile") CONFIG_FILES="$CONFIG_FILES opal/mca/timer/darwin/Makefile" ;;
    "opal/mca/timer/linux/Makefile") CONFIG_FILES="$CONFIG_FILES opal/mca/timer/linux/Makefile" ;;
    "opal/mca/timer/solaris/Makefile") CONFIG_FILES="$CONFIG_FILES opal/mca/timer/solaris/Makefile" ;;
    "ompi/mca/common/Makefile") CONFIG_FILES="$CONFIG_FILES ompi/mca/common/Makefile" ;;
    "ompi/mca/common/monitoring/Makefile") CONFIG_FILES="$CONFIG_FILES ompi/mca/common/monitoring/Makefile" ;;
    "test/monitoring/profile2mat.pl") CONFIG_LINKS="$CONFIG_LINKS test/monitoring/profile2mat.pl:ompi/mca/common/monitoring/profile2mat.pl" ;;
    "test/monitoring/aggregate_profile.pl") CONFIG_LINKS="$CONFIG_LINKS test/monitoring/aggregate_profile.pl:ompi/mca/common/monitoring/aggregate_profile.pl" ;;
    "ompi/mca/common/ompio/Makefile") CONFIG_FILES="$CONFIG_FILES ompi/mca/common/ompio/Makefile" ;;
    "ompi/mca/bml/Makefile") CONFIG_FILES="$CONFIG_FILES ompi/mca/bml/Makefile" ;;
    "ompi/mca/bml/r2/Makefile") CONFIG_FILES="$CONFIG_FILES ompi/mca/bml/r2/Makefile" ;;
    "ompi/mca/coll/Makefile") CONFIG_FILES="$CONFIG_FILES ompi/mca/coll/Makefile" ;;
    "ompi/mca/coll/adapt/Makefile") CONFIG_FILES="$CONFIG_FILES ompi/mca/coll/adapt/Makefile" ;;
    "ompi/mca/coll/basic/Makefile") CONFIG_FILES="$CONFIG_FILES ompi/mca/coll/basic/Makefile" ;;
    "ompi/mca/coll/han/Makefile") CONFIG_FILES="$CONFIG_FILES ompi/mca/coll/han/Makefile" ;;
    "ompi/mca/coll/inter/Makefile") CONFIG_FILES="$CONFIG_FILES ompi/mca/coll/inter/Makefile" ;;
    "ompi/mca/coll/libnbc/Makefile") CONFIG_FILES="$CONFIG_FILES ompi/mca/coll/libnbc/Makefile" ;;
    "ompi/mca/coll/self/Makefile") CONFIG_FILES="$CONFIG_FILES ompi/mca/coll/self/Makefile" ;;
    "ompi/mca/coll/sync/Makefile") CONFIG_FILES="$CONFIG_FILES ompi/mca/coll/sync/Makefile" ;;
    "ompi/mca/coll/tuned/Makefile") CONFIG_FILES="$CONFIG_FILES ompi/mca/coll/tuned/Makefile" ;;
    "ompi/mca/coll/cuda/Makefile") CONFIG_FILES="$CONFIG_FILES ompi/mca/coll/cuda/Makefile" ;;
    "ompi/mca/coll/ftagree/Makefile") CONFIG_FILES="$CONFIG_FILES ompi/mca/coll/ftagree/Makefile" ;;
    "ompi/mca/coll/hcoll/Makefile") CONFIG_FILES="$CONFIG_FILES ompi/mca/coll/hcoll/Makefile" ;;
    "ompi/mca/coll/monitoring/Makefile") CONFIG_FILES="$CONFIG_FILES ompi/mca/coll/monitoring/Makefile" ;;
    "ompi/mca/coll/portals4/Makefile") CONFIG_FILES="$CONFIG_FILES ompi/mca/coll/portals4/Makefile" ;;
    "ompi/mca/coll/sm/Makefile") CONFIG_FILES="$CONFIG_FILES ompi/mca/coll/sm/Makefile" ;;
    "ompi/mca/coll/ucc/Makefile") CONFIG_FILES="$CONFIG_FILES ompi/mca/coll/ucc/Makefile" ;;
    "ompi/mca/fbtl/Makefile") CONFIG_FILES="$CONFIG_FILES ompi/mca/fbtl/Makefile" ;;
    "ompi/mca/fbtl/ime/Makefile") CONFIG_FILES="$CONFIG_FILES ompi/mca/fbtl/ime/Makefile" ;;
    "ompi/mca/fbtl/posix/Makefile") CONFIG_FILES="$CONFIG_FILES ompi/mca/fbtl/posix/Makefile" ;;
    "ompi/mca/fbtl/pvfs2/Makefile") CONFIG_FILES="$CONFIG_FILES ompi/mca/fbtl/pvfs2/Makefile" ;;
    "ompi/mca/fcoll/Makefile") CONFIG_FILES="$CONFIG_FILES ompi/mca/fcoll/Makefile" ;;
    "ompi/mca/fcoll/dynamic/Makefile") CONFIG_FILES="$CONFIG_FILES ompi/mca/fcoll/dynamic/Makefile" ;;
    "ompi/mca/fcoll/dynamic_gen2/Makefile") CONFIG_FILES="$CONFIG_FILES ompi/mca/fcoll/dynamic_gen2/Makefile" ;;
    "ompi/mca/fcoll/individual/Makefile") CONFIG_FILES="$CONFIG_FILES ompi/mca/fcoll/individual/Makefile" ;;
    "ompi/mca/fcoll/vulcan/Makefile") CONFIG_FILES="$CONFIG_FILES ompi/mca/fcoll/vulcan/Makefile" ;;
    "ompi/mca/fs/Makefile") CONFIG_FILES="$CONFIG_FILES ompi/mca/fs/Makefile" ;;
    "ompi/mca/fs/gpfs/Makefile") CONFIG_FILES="$CONFIG_FILES ompi/mca/fs/gpfs/Makefile" ;;
    "ompi/mca/fs/ime/Makefile") CONFIG_FILES="$CONFIG_FILES ompi/mca/fs/ime/Makefile" ;;
    "ompi/mca/fs/lustre/Makefile") CONFIG_FILES="$CONFIG_FILES ompi/mca/fs/lustre/Makefile" ;;
    "ompi/mca/fs/pvfs2/Makefile") CONFIG_FILES="$CONFIG_FILES ompi/mca/fs/pvfs2/Makefile" ;;
    "ompi/mca/fs/ufs/Makefile") CONFIG_FILES="$CONFIG_FILES ompi/mca/fs/ufs/Makefile" ;;
    "ompi/mca/hook/Makefile") CONFIG_FILES="$CONFIG_FILES ompi/mca/hook/Makefile" ;;
    "ompi/mca/hook/comm_method/Makefile") CONFIG_FILES="$CONFIG_FILES ompi/mca/hook/comm_method/Makefile" ;;
    "ompi/mca/io/Makefile") CONFIG_FILES="$CONFIG_FILES ompi/mca/io/Makefile" ;;
    "ompi/mca/io/ompio/Makefile") CONFIG_FILES="$CONFIG_FILES ompi/mca/io/ompio/Makefile" ;;
    "ompi/mca/io/romio341/Makefile") CONFIG_FILES="$CONFIG_FILES ompi/mca/io/romio341/Makefile" ;;
    "ompi/mca/mtl/Makefile") CONFIG_FILES="$CONFIG_FILES ompi/mca/mtl/Makefile" ;;
    "ompi/mca/mtl/ofi/Makefile") CONFIG_FILES="$CONFIG_FILES ompi/mca/mtl/ofi/Makefile" ;;
    "ompi/mca/mtl/portals4/Makefile") CONFIG_FILES="$CONFIG_FILES ompi/mca/mtl/portals4/Makefile" ;;
    "ompi/mca/mtl/psm2/Makefile") CONFIG_FILES="$CONFIG_FILES ompi/mca/mtl/psm2/Makefile" ;;
    "ompi/mca/op/Makefile") CONFIG_FILES="$CONFIG_FILES ompi/mca/op/Makefile" ;;
    "ompi/mca/op/aarch64/Makefile") CONFIG_FILES="$CONFIG_FILES ompi/mca/op/aarch64/Makefile" ;;
    "ompi/mca/op/avx/Makefile") CONFIG_FILES="$CONFIG_FILES ompi/mca/op/avx/Makefile" ;;
    "ompi/mca/osc/Makefile") CONFIG_FILES="$CONFIG_FILES ompi/mca/osc/Makefile" ;;
    "ompi/mca/osc/sm/Makefile") CONFIG_FILES="$CONFIG_FILES ompi/mca/osc/sm/Makefile" ;;
    "ompi/mca/osc/monitoring/Makefile") CONFIG_FILES="$CONFIG_FILES ompi/mca/osc/monitoring/Makefile" ;;
    "ompi/mca/osc/monitoring/osc_monitoring_template_gen.h") CONFIG_COMMANDS="$CONFIG_COMMANDS ompi/mca/osc/monitoring/osc_monitoring_template_gen.h" ;;
    "ompi/mca/osc/portals4/Makefile") CONFIG_FILES="$CONFIG_FILES ompi/mca/osc/portals4/Makefile" ;;
    "ompi/mca/osc/rdma/Makefile") CONFIG_FILES="$CONFIG_FILES ompi/mca/osc/rdma/Makefile" ;;
    "ompi/mca/osc/ucx/Makefile") CONFIG_FILES="$CONFIG_FILES ompi/mca/osc/ucx/Makefile" ;;
    "ompi/mca/part/Makefile") CONFIG_FILES="$CONFIG_FILES ompi/mca/part/Makefile" ;;
    "ompi/mca/part/persist/Makefile") CONFIG_FILES="$CONFIG_FILES ompi/mca/part/persist/Makefile" ;;
    "ompi/mca/pml/Makefile") CONFIG_FILES="$CONFIG_FILES ompi/mca/pml/Makefile" ;;
    "ompi/mca/pml/cm/Makefile") CONFIG_FILES="$CONFIG_FILES ompi/mca/pml/cm/Makefile" ;;
    "ompi/mca/pml/monitoring/Makefile") CONFIG_FILES="$CONFIG_FILES ompi/mca/pml/monitoring/Makefile" ;;
    "ompi/mca/pml/ob1/Makefile") CONFIG_FILES="$CONFIG_FILES ompi/mca/pml/ob1/Makefile" ;;
    "ompi/mca/pml/ucx/Makefile") CONFIG_FILES="$CONFIG_FILES ompi/mca/pml/ucx/Makefile" ;;
    "ompi/mca/pml/v/Makefile") CONFIG_FILES="$CONFIG_FILES ompi/mca/pml/v/Makefile" ;;
    "ompi/mca/sharedfp/Makefile") CONFIG_FILES="$CONFIG_FILES ompi/mca/sharedfp/Makefile" ;;
    "ompi/mca/sharedfp/individual/Makefile") CONFIG_FILES="$CONFIG_FILES ompi/mca/sharedfp/individual/Makefile" ;;
    "ompi/mca/sharedfp/lockedfile/Makefile") CONFIG_FILES="$CONFIG_FILES ompi/mca/sharedfp/lockedfile/Makefile" ;;
    "ompi/mca/sharedfp/sm/Makefile") CONFIG_FILES="$CONFIG_FILES ompi/mca/sharedfp/sm/Makefile" ;;
    "ompi/mca/topo/Makefile") CONFIG_FILES="$CONFIG_FILES ompi/mca/topo/Makefile" ;;
    "ompi/mca/topo/basic/Makefile") CONFIG_FILES="$CONFIG_FILES ompi/mca/topo/basic/Makefile" ;;
    "3rd-party/treematch/Makefile") CONFIG_FILES="$CONFIG_FILES 3rd-party/treematch/Makefile" ;;
    "ompi/mca/topo/treematch/Makefile") CONFIG_FILES="$CONFIG_FILES ompi/mca/topo/treematch/Makefile" ;;
    "ompi/mca/vprotocol/Makefile") CONFIG_FILES="$CONFIG_FILES ompi/mca/vprotocol/Makefile" ;;
    "ompi/mca/vprotocol/pessimist/Makefile") CONFIG_FILES="$CONFIG_FILES ompi/mca/vprotocol/pessimist/Makefile" ;;
    "oshmem/mca/atomic/Makefile") CONFIG_FILES="$CONFIG_FILES oshmem/mca/atomic/Makefile" ;;
    "oshmem/mca/atomic/basic/Makefile") CONFIG_FILES="$CONFIG_FILES oshmem/mca/atomic/basic/Makefile" ;;
    "oshmem/mca/atomic/ucx/Makefile") CONFIG_FILES="$CONFIG_FILES oshmem/mca/atomic/ucx/Makefile" ;;
    "oshmem/mca/memheap/Makefile") CONFIG_FILES="$CONFIG_FILES oshmem/mca/memheap/Makefile" ;;
    "oshmem/mca/memheap/buddy/Makefile") CONFIG_FILES="$CONFIG_FILES oshmem/mca/memheap/buddy/Makefile" ;;
    "oshmem/mca/memheap/ptmalloc/Makefile") CONFIG_FILES="$CONFIG_FILES oshmem/mca/memheap/ptmalloc/Makefile" ;;
    "oshmem/mca/scoll/Makefile") CONFIG_FILES="$CONFIG_FILES oshmem/mca/scoll/Makefile" ;;
    "oshmem/mca/scoll/basic/Makefile") CONFIG_FILES="$CONFIG_FILES oshmem/mca/scoll/basic/Makefile" ;;
    "oshmem/mca/scoll/mpi/Makefile") CONFIG_FILES="$CONFIG_FILES oshmem/mca/scoll/mpi/Makefile" ;;
    "oshmem/mca/scoll/ucc/Makefile") CONFIG_FILES="$CONFIG_FILES oshmem/mca/scoll/ucc/Makefile" ;;
    "oshmem/mca/spml/Makefile") CONFIG_FILES="$CONFIG_FILES oshmem/mca/spml/Makefile" ;;
    "oshmem/mca/spml/ucx/Makefile") CONFIG_FILES="$CONFIG_FILES oshmem/mca/spml/ucx/Makefile" ;;
    "oshmem/mca/sshmem/Makefile") CONFIG_FILES="$CONFIG_FILES oshmem/mca/sshmem/Makefile" ;;
    "oshmem/mca/sshmem/mmap/Makefile") CONFIG_FILES="$CONFIG_FILES oshmem/mca/sshmem/mmap/Makefile" ;;
    "oshmem/mca/sshmem/sysv/Makefile") CONFIG_FILES="$CONFIG_FILES oshmem/mca/sshmem/sysv/Makefile" ;;
    "oshmem/mca/sshmem/ucx/Makefile") CONFIG_FILES="$CONFIG_FILES oshmem/mca/sshmem/ucx/Makefile" ;;
    "ompi/mpiext/affinity/Makefile") CONFIG_FILES="$CONFIG_FILES ompi/mpiext/affinity/Makefile" ;;
    "ompi/mpiext/affinity/c/Makefile") CONFIG_FILES="$CONFIG_FILES ompi/mpiext/affinity/c/Makefile" ;;
    "ompi/mpiext/cuda/Makefile") CONFIG_FILES="$CONFIG_FILES ompi/mpiext/cuda/Makefile" ;;
    "ompi/mpiext/cuda/c/Makefile") CONFIG_FILES="$CONFIG_FILES ompi/mpiext/cuda/c/Makefile" ;;
    "ompi/mpiext/cuda/c/mpiext_cuda_c.h") CONFIG_HEADERS="$CONFIG_HEADERS ompi/mpiext/cuda/c/mpiext_cuda_c.h" ;;
    "ompi/mpiext/ftmpi/Makefile") CONFIG_FILES="$CONFIG_FILES ompi/mpiext/ftmpi/Makefile" ;;
    "ompi/mpiext/ftmpi/c/Makefile") CONFIG_FILES="$CONFIG_FILES ompi/mpiext/ftmpi/c/Makefile" ;;
    "ompi/mpiext/ftmpi/c/profile/Makefile") CONFIG_FILES="$CONFIG_FILES ompi/mpiext/ftmpi/c/profile/Makefile" ;;
    "ompi/mpiext/ftmpi/mpif-h/Makefile") CONFIG_FILES="$CONFIG_FILES ompi/mpiext/ftmpi/mpif-h/Makefile" ;;
    "ompi/mpiext/ftmpi/use-mpi/Makefile") CONFIG_FILES="$CONFIG_FILES ompi/mpiext/ftmpi/use-mpi/Makefile" ;;
    "ompi/mpiext/ftmpi/use-mpi-f08/Makefile") CONFIG_FILES="$CONFIG_FILES ompi/mpiext/ftmpi/use-mpi-f08/Makefile" ;;
    "ompi/mpiext/rocm/Makefile") CONFIG_FILES="$CONFIG_FILES ompi/mpiext/rocm/Makefile" ;;
    "ompi/mpiext/rocm/c/Makefile") CONFIG_FILES="$CONFIG_FILES ompi/mpiext/rocm/c/Makefile" ;;
    "ompi/mpiext/rocm/c/mpiext_rocm_c.h") CONFIG_HEADERS="$CONFIG_HEADERS ompi/mpiext/rocm/c/mpiext_rocm_c.h" ;;
    "ompi/mpiext/shortfloat/Makefile") CONFIG_FILES="$CONFIG_FILES ompi/mpiext/shortfloat/Makefile" ;;
    "ompi/mpiext/shortfloat/c/Makefile") CONFIG_FILES="$CONFIG_FILES ompi/mpiext/shortfloat/c/Makefile" ;;
    "ompi/mpiext/shortfloat/mpif-h/Makefile") CONFIG_FILES="$CONFIG_FILES ompi/mpiext/shortfloat/mpif-h/Makefile" ;;
    "ompi/mpiext/shortfloat/use-mpi/Makefile") CONFIG_FILES="$CONFIG_FILES ompi/mpiext/shortfloat/use-mpi/Makefile" ;;
    "ompi/mpiext/shortfloat/use-mpi-f08/Makefile") CONFIG_FILES="$CONFIG_FILES ompi/mpiext/shortfloat/use-mpi-f08/Makefile" ;;
    "ompi/mpiext/shortfloat/c/mpiext_shortfloat_c.h") CONFIG_FILES="$CONFIG_FILES ompi/mpiext/shortfloat/c/mpiext_shortfloat_c.h" ;;
    "ompi/mpiext/shortfloat/mpif-h/mpiext_shortfloat_mpifh.h") CONFIG_FILES="$CONFIG_FILES ompi/mpiext/shortfloat/mpif-h/mpiext_shortfloat_mpifh.h" ;;
    "ompi/mpiext/shortfloat/use-mpi-f08/mpiext_shortfloat_usempif08.h") CONFIG_FILES="$CONFIG_FILES ompi/mpiext/shortfloat/use-mpi-f08/mpiext_shortfloat_usempif08.h" ;;
    "libtool") CONFIG_COMMANDS="$CONFIG_COMMANDS libtool" ;;
    "ompi/tools/wrappers/ompi_wrapper_script") CONFIG_FILES="$CONFIG_FILES ompi/tools/wrappers/ompi_wrapper_script" ;;
    "Makefile") CONFIG_FILES="$CONFIG_FILES Makefile" ;;
    "docs/Makefile") CONFIG_FILES="$CONFIG_FILES docs/Makefile" ;;
    "config/Makefile") CONFIG_FILES="$CONFIG_FILES config/Makefile" ;;
    "contrib/Makefile") CONFIG_FILES="$CONFIG_FILES contrib/Makefile" ;;
    "contrib/dist/mofed/debian/changelog") CONFIG_FILES="$CONFIG_FILES contrib/dist/mofed/debian/changelog" ;;
    "contrib/dist/mofed/debian/control") CONFIG_FILES="$CONFIG_FILES contrib/dist/mofed/debian/control" ;;
    "contrib/dist/mofed/debian/copyright") CONFIG_FILES="$CONFIG_FILES contrib/dist/mofed/debian/copyright:LICENSE" ;;
    "3rd-party/Makefile") CONFIG_FILES="$CONFIG_FILES 3rd-party/Makefile" ;;
    "test/Makefile") CONFIG_FILES="$CONFIG_FILES test/Makefile" ;;
    "test/event/Makefile") CONFIG_FILES="$CONFIG_FILES test/event/Makefile" ;;
    "test/asm/Makefile") CONFIG_FILES="$CONFIG_FILES test/asm/Makefile" ;;
    "test/datatype/Makefile") CONFIG_FILES="$CONFIG_FILES test/datatype/Makefile" ;;
    "test/class/Makefile") CONFIG_FILES="$CONFIG_FILES test/class/Makefile" ;;
    "test/mpool/Makefile") CONFIG_FILES="$CONFIG_FILES test/mpool/Makefile" ;;
    "test/support/Makefile") CONFIG_FILES="$CONFIG_FILES test/support/Makefile" ;;
    "test/threads/Makefile") CONFIG_FILES="$CONFIG_FILES test/threads/Makefile" ;;
    "test/util/Makefile") CONFIG_FILES="$CONFIG_FILES test/util/Makefile" ;;
    "test/monitoring/Makefile") CONFIG_FILES="$CONFIG_FILES test/monitoring/Makefile" ;;
    "test/spc/Makefile") CONFIG_FILES="$CONFIG_FILES test/spc/Makefile" ;;
    "contrib/dist/mofed/debian/rules") CONFIG_FILES="$CONFIG_FILES contrib/dist/mofed/debian/rules" ;;
    "contrib/dist/mofed/compile_debian_mlnx_example") CONFIG_FILES="$CONFIG_FILES contrib/dist/mofed/compile_debian_mlnx_example" ;;
    "opal/Makefile") CONFIG_FILES="$CONFIG_FILES opal/Makefile" ;;
    "opal/etc/Makefile") CONFIG_FILES="$CONFIG_FILES opal/etc/Makefile" ;;
    "opal/include/Makefile") CONFIG_FILES="$CONFIG_FILES opal/include/Makefile" ;;
    "opal/datatype/Makefile") CONFIG_FILES="$CONFIG_FILES opal/datatype/Makefile" ;;
    "opal/util/Makefile") CONFIG_FILES="$CONFIG_FILES opal/util/Makefile" ;;
    "opal/util/keyval/Makefile") CONFIG_FILES="$CONFIG_FILES opal/util/keyval/Makefile" ;;
    "opal/mca/base/Makefile") CONFIG_FILES="$CONFIG_FILES opal/mca/base/Makefile" ;;
    "opal/tools/wrappers/Makefile") CONFIG_FILES="$CONFIG_FILES opal/tools/wrappers/Makefile" ;;
    "opal/tools/wrappers/opalcc-wrapper-data.txt") CONFIG_FILES="$CONFIG_FILES opal/tools/wrappers/opalcc-wrapper-data.txt" ;;
    "opal/tools/wrappers/opal.pc") CONFIG_FILES="$CONFIG_FILES opal/tools/wrappers/opal.pc" ;;
    "ompi/Makefile") CONFIG_FILES="$CONFIG_FILES ompi/Makefile" ;;
    "ompi/etc/Makefile") CONFIG_FILES="$CONFIG_FILES ompi/etc/Makefile" ;;
    "ompi/include/Makefile") CONFIG_FILES="$CONFIG_FILES ompi/include/Makefile" ;;
    "ompi/include/mpif.h") CONFIG_FILES="$CONFIG_FILES ompi/include/mpif.h" ;;
    "ompi/include/mpif-config.h") CONFIG_FILES="$CONFIG_FILES ompi/include/mpif-config.h" ;;
    "ompi/datatype/Makefile") CONFIG_FILES="$CONFIG_FILES ompi/datatype/Makefile" ;;
    "ompi/debuggers/Makefile") CONFIG_FILES="$CONFIG_FILES ompi/debuggers/Makefile" ;;
    "ompi/mpi/c/Makefile") CONFIG_FILES="$CONFIG_FILES ompi/mpi/c/Makefile" ;;
    "ompi/mpi/fortran/base/Makefile") CONFIG_FILES="$CONFIG_FILES ompi/mpi/fortran/base/Makefile" ;;
    "ompi/mpi/fortran/mpif-h/Makefile") CONFIG_FILES="$CONFIG_FILES ompi/mpi/fortran/mpif-h/Makefile" ;;
    "ompi/mpi/fortran/mpif-h/profile/Makefile") CONFIG_FILES="$CONFIG_FILES ompi/mpi/fortran/mpif-h/profile/Makefile" ;;
    "ompi/mpi/fortran/use-mpi/Makefile") CONFIG_FILES="$CONFIG_FILES ompi/mpi/fortran/use-mpi/Makefile" ;;
    "ompi/mpi/fortran/use-mpi/mpi-types.F90") CONFIG_FILES="$CONFIG_FILES ompi/mpi/fortran/use-mpi/mpi-types.F90" ;;
    "ompi/mpi/fortran/use-mpi-tkr/Makefile") CONFIG_FILES="$CONFIG_FILES ompi/mpi/fortran/use-mpi-tkr/Makefile" ;;
    "ompi/mpi/fortran/use-mpi-tkr/fortran_sizes.h") CONFIG_FILES="$CONFIG_FILES ompi/mpi/fortran/use-mpi-tkr/fortran_sizes.h" ;;
    "ompi/mpi/fortran/use-mpi-tkr/fortran_kinds.sh") CONFIG_FILES="$CONFIG_FILES ompi/mpi/fortran/use-mpi-tkr/fortran_kinds.sh" ;;
    "ompi/mpi/fortran/use-mpi-ignore-tkr/Makefile") CONFIG_FILES="$CONFIG_FILES ompi/mpi/fortran/use-mpi-ignore-tkr/Makefile" ;;
    "ompi/mpi/fortran/use-mpi-ignore-tkr/mpi-ignore-tkr-interfaces.h") CONFIG_FILES="$CONFIG_FILES ompi/mpi/fortran/use-mpi-ignore-tkr/mpi-ignore-tkr-interfaces.h" ;;
    "ompi/mpi/fortran/use-mpi-ignore-tkr/mpi-ignore-tkr-file-interfaces.h") CONFIG_FILES="$CONFIG_FILES ompi/mpi/fortran/use-mpi-ignore-tkr/mpi-ignore-tkr-file-interfaces.h" ;;
    "ompi/mpi/fortran/use-mpi-ignore-tkr/mpi-ignore-tkr-removed-interfaces.h") CONFIG_FILES="$CONFIG_FILES ompi/mpi/fortran/use-mpi-ignore-tkr/mpi-ignore-tkr-removed-interfaces.h" ;;
    "ompi/mpi/fortran/use-mpi-f08/Makefile") CONFIG_FILES="$CONFIG_FILES ompi/mpi/fortran/use-mpi-f08/Makefile" ;;
    "ompi/mpi/fortran/use-mpi-f08/base/Makefile") CONFIG_FILES="$CONFIG_FILES ompi/mpi/fortran/use-mpi-f08/base/Makefile" ;;
    "ompi/mpi/fortran/use-mpi-f08/profile/Makefile") CONFIG_FILES="$CONFIG_FILES ompi/mpi/fortran/use-mpi-f08/profile/Makefile" ;;
    "ompi/mpi/fortran/use-mpi-f08/bindings/Makefile") CONFIG_FILES="$CONFIG_FILES ompi/mpi/fortran/use-mpi-f08/bindings/Makefile" ;;
    "ompi/mpi/fortran/use-mpi-f08/mod/Makefile") CONFIG_FILES="$CONFIG_FILES ompi/mpi/fortran/use-mpi-f08/mod/Makefile" ;;
    "ompi/mpi/fortran/use-mpi-f08/mod/mpi-f08-interfaces.h") CONFIG_FILES="$CONFIG_FILES ompi/mpi/fortran/use-mpi-f08/mod/mpi-f08-interfaces.h" ;;
    "ompi/mpi/fortran/mpiext-use-mpi/Makefile") CONFIG_FILES="$CONFIG_FILES ompi/mpi/fortran/mpiext-use-mpi/Makefile" ;;
    "ompi/mpi/fortran/mpiext-use-mpi-f08/Makefile") CONFIG_FILES="$CONFIG_FILES ompi/mpi/fortran/mpiext-use-mpi-f08/Makefile" ;;
    "ompi/mpi/tool/Makefile") CONFIG_FILES="$CONFIG_FILES ompi/mpi/tool/Makefile" ;;
    "ompi/tools/ompi_info/Makefile") CONFIG_FILES="$CONFIG_FILES ompi/tools/ompi_info/Makefile" ;;
    "ompi/tools/wrappers/Makefile") CONFIG_FILES="$CONFIG_FILES ompi/tools/wrappers/Makefile" ;;
    "ompi/tools/wrappers/mpicc-wrapper-data.txt") CONFIG_FILES="$CONFIG_FILES ompi/tools/wrappers/mpicc-wrapper-data.txt" ;;
    "ompi/tools/wrappers/mpic++-wrapper-data.txt") CONFIG_FILES="$CONFIG_FILES ompi/tools/wrappers/mpic++-wrapper-data.txt" ;;
    "ompi/tools/wrappers/mpifort-wrapper-data.txt") CONFIG_FILES="$CONFIG_FILES ompi/tools/wrappers/mpifort-wrapper-data.txt" ;;
    "ompi/tools/wrappers/ompi.pc") CONFIG_FILES="$CONFIG_FILES ompi/tools/wrappers/ompi.pc" ;;
    "ompi/tools/wrappers/ompi-c.pc") CONFIG_FILES="$CONFIG_FILES ompi/tools/wrappers/ompi-c.pc" ;;
    "ompi/tools/wrappers/ompi-cxx.pc") CONFIG_FILES="$CONFIG_FILES ompi/tools/wrappers/ompi-cxx.pc" ;;
    "ompi/tools/wrappers/ompi-fort.pc") CONFIG_FILES="$CONFIG_FILES ompi/tools/wrappers/ompi-fort.pc" ;;
    "ompi/tools/wrappers/mpijavac.pl") CONFIG_FILES="$CONFIG_FILES ompi/tools/wrappers/mpijavac.pl" ;;
    "ompi/tools/mpisync/Makefile") CONFIG_FILES="$CONFIG_FILES ompi/tools/mpisync/Makefile" ;;
    "ompi/tools/mpirun/Makefile") CONFIG_FILES="$CONFIG_FILES ompi/tools/mpirun/Makefile" ;;
    "oshmem/Makefile") CONFIG_FILES="$CONFIG_FILES oshmem/Makefile" ;;
    "oshmem/include/Makefile") CONFIG_FILES="$CONFIG_FILES oshmem/include/Makefile" ;;
    "oshmem/shmem/c/Makefile") CONFIG_FILES="$CONFIG_FILES oshmem/shmem/c/Makefile" ;;
    "oshmem/shmem/fortran/Makefile") CONFIG_FILES="$CONFIG_FILES oshmem/shmem/fortran/Makefile" ;;
    "oshmem/tools/oshmem_info/Makefile") CONFIG_FILES="$CONFIG_FILES oshmem/tools/oshmem_info/Makefile" ;;
    "oshmem/tools/wrappers/Makefile") CONFIG_FILES="$CONFIG_FILES oshmem/tools/wrappers/Makefile" ;;
    "oshmem/tools/wrappers/shmemcc-wrapper-data.txt") CONFIG_FILES="$CONFIG_FILES oshmem/tools/wrappers/shmemcc-wrapper-data.txt" ;;
    "oshmem/tools/wrappers/shmemc++-wrapper-data.txt") CONFIG_FILES="$CONFIG_FILES oshmem/tools/wrappers/shmemc++-wrapper-data.txt" ;;
    "oshmem/tools/wrappers/shmemfort-wrapper-data.txt") CONFIG_FILES="$CONFIG_FILES oshmem/tools/wrappers/shmemfort-wrapper-data.txt" ;;
    "oshmem/tools/wrappers/oshmem.pc") CONFIG_FILES="$CONFIG_FILES oshmem/tools/wrappers/oshmem.pc" ;;
    "oshmem/tools/wrappers/oshmem-c.pc") CONFIG_FILES="$CONFIG_FILES oshmem/tools/wrappers/oshmem-c.pc" ;;
    "oshmem/tools/wrappers/oshmem-cxx.pc") CONFIG_FILES="$CONFIG_FILES oshmem/tools/wrappers/oshmem-cxx.pc" ;;
    "oshmem/tools/wrappers/oshmem-fort.pc") CONFIG_FILES="$CONFIG_FILES oshmem/tools/wrappers/oshmem-fort.pc" ;;

  *) as_fn_error $? "invalid argument: \`$ac_config_target'" "$LINENO" 5;;
  esac
done


# If the user did not use the arguments to specify the items to instantiate,
# then the envvar interface is used.  Set only those that are not.
# We use the long form for the default assignment because of an extremely
# bizarre bug on SunOS 4.1.3.
if $ac_need_defaults; then
  test ${CONFIG_FILES+y} || CONFIG_FILES=$config_files
  test ${CONFIG_HEADERS+y} || CONFIG_HEADERS=$config_headers
  test ${CONFIG_LINKS+y} || CONFIG_LINKS=$config_links
  test ${CONFIG_COMMANDS+y} || CONFIG_COMMANDS=$config_commands
fi

# Have a temporary directory for convenience.  Make it in the build tree
# simply because there is no reason against having it here, and in addition,
# creating and moving files from /tmp can sometimes cause problems.
# Hook for its removal unless debugging.
# Note that there is a small window in which the directory will not be cleaned:
# after its creation but before its name has been assigned to `$tmp'.
$debug ||
{
  tmp= ac_tmp=
  trap 'exit_status=$?
  : "${ac_tmp:=$tmp}"
  { test ! -d "$ac_tmp" || rm -fr "$ac_tmp"; } && exit $exit_status
' 0
  trap 'as_fn_exit 1' 1 2 13 15
}
# Create a (secure) tmp directory for tmp files.

{
  tmp=`(umask 077 && mktemp -d "./confXXXXXX") 2>/dev/null` &&
  test -d "$tmp"
}  ||
{
  tmp=./conf$$-$RANDOM
  (umask 077 && mkdir "$tmp")
} || as_fn_error $? "cannot create a temporary directory in ." "$LINENO" 5
ac_tmp=$tmp

# Set up the scripts for CONFIG_FILES section.
# No need to generate them if there are no CONFIG_FILES.
# This happens for instance with `./config.status config.h'.
if test -n "$CONFIG_FILES"; then


ac_cr=`echo X | tr X '\015'`
# On cygwin, bash can eat \r inside `` if the user requested igncr.
# But we know of no other shell where ac_cr would be empty at this
# point, so we can use a bashism as a fallback.
if test "x$ac_cr" = x; then
  eval ac_cr=\$\'\\r\'
fi
ac_cs_awk_cr=`$AWK 'BEGIN { print "a\rb" }' </dev/null 2>/dev/null`
if test "$ac_cs_awk_cr" = "a${ac_cr}b"; then
  ac_cs_awk_cr='\\r'
else
  ac_cs_awk_cr=$ac_cr
fi

echo 'BEGIN {' >"$ac_tmp/subs1.awk" &&
cat >>"$ac_tmp/subs1.awk" <<\_ACAWK &&
S["am__EXEEXT_FALSE"]=""
S["am__EXEEXT_TRUE"]="#"
S["LTLIBOBJS"]=""
S["LIBOBJS"]=""
S["OPAL_MAKEDIST_DISABLE"]=" Sphinx/Documentation PMIX"
S["oshmemincludedir"]="${includedir}/openmpi"
S["oshmemlibdir"]="${libdir}/openmpi"
S["oshmemdatadir"]="${datadir}/openmpi"
S["ompiincludedir"]="${includedir}/openmpi"
S["ompilibdir"]="${libdir}/openmpi"
S["ompidatadir"]="${datadir}/openmpi"
S["opalincludedir"]="${includedir}/openmpi"
S["opallibdir"]="${libdir}/openmpi"
S["opaldatadir"]="${datadir}/openmpi"
S["PROJECT_OSHMEM_FALSE"]=""
S["PROJECT_OSHMEM_TRUE"]="#"
S["PROJECT_OMPI_FALSE"]="#"
S["PROJECT_OMPI_TRUE"]=""
S["OSHMEM_PC_MODULES_PRIVATE"]=""
S["OSHMEM_PC_MODULES"]=""
S["OSHMEM_PC_FC_LIBS_PRIVATE"]="-L${libdir} -Wl,-rpath -Wl,${libdir}"
S["OSHMEM_PC_FC_LIBS"]="-L${libdir} -Wl,-rpath -Wl,${libdir} -Wl,--enable-new-dtags -loshmem -lmpi_mpifh -loshmem -lmpi"
S["OSHMEM_PC_FC_CFLAGS"]=""
S["OSHMEM_PC_LIBS_PRIVATE"]=""
S["OSHMEM_PC_LIBS"]="-L${libdir} -Wl,-rpath -Wl,${libdir} -Wl,--enable-new-dtags -loshmem -lmpi"
S["OSHMEM_PC_CFLAGS"]="-I${includedir} -pthread -I${exec_prefix}/lib"
S["OSHMEM_WRAPPER_FORTRAN_REQUIRED_FILE"]=""
S["OSHMEM_WRAPPER_CXX_REQUIRED_FILE"]=""
S["OSHMEM_WRAPPER_FC_LIBS_STATIC"]=""
S["OSHMEM_WRAPPER_FC_LIBS"]="-loshmem -lmpi_mpifh -loshmem -lmpi"
S["OSHMEM_WRAPPER_FC_LDFLAGS_STATIC"]="-L${libdir}  -Wl,-rpath -Wl,${libdir}"
S["OSHMEM_WRAPPER_FC_LDFLAGS"]="-L${libdir}  -Wl,-rpath -Wl,${libdir} -Wl,--enable-new-dtags"
S["OSHMEM_WRAPPER_LIBS_STATIC"]=""
S["OSHMEM_WRAPPER_LIBS"]="-loshmem -lmpi"
S["OSHMEM_WRAPPER_LDFLAGS_STATIC"]=" "
S["OSHMEM_WRAPPER_LDFLAGS"]="-L${libdir}  -Wl,-rpath -Wl,${libdir} -Wl,--enable-new-dtags"
S["OSHMEM_WRAPPER_FCFLAGS_PREFIX"]=""
S["OSHMEM_WRAPPER_FCFLAGS"]="-I${includedir} -pthread  -I${exec_prefix}/lib"
S["OSHMEM_WRAPPER_CXXFLAGS_PREFIX"]=""
S["OSHMEM_WRAPPER_CXXFLAGS"]="-pthread "
S["OSHMEM_WRAPPER_CFLAGS_PREFIX"]=""
S["OSHMEM_WRAPPER_CFLAGS"]="-pthread "
S["OSHMEM_WRAPPER_CPPFLAGS"]="-I${includedir}"
S["OMPI_PC_MODULES_PRIVATE"]=""
S["OMPI_PC_MODULES"]=""
S["OMPI_PC_FC_LIBS_PRIVATE"]="-L${libdir} -Wl,-rpath -Wl,${libdir}"
S["OMPI_PC_FC_LIBS"]="-L${libdir} -Wl,-rpath -Wl,${libdir} -Wl,--enable-new-dtags -lmpi_usempif08 -lmpi_usempi_ignore_tkr -lmpi_mpifh -lmpi"
S["OMPI_PC_FC_CFLAGS"]="-I${includedir} -pthread -I${exec_prefix}/lib"
S["OMPI_PC_LIBS_PRIVATE"]=""
S["OMPI_PC_LIBS"]="-L${libdir} -Wl,-rpath -Wl,${libdir} -Wl,--enable-new-dtags -lmpi"
S["OMPI_PC_CFLAGS"]="-I${includedir} -pthread"
S["OMPI_WRAPPER_LIBDIR"]="/usr/openmpi-5.0.5/lib"
S["OMPI_WRAPPER_INCLUDEDIR"]="/usr/openmpi-5.0.5/include"
S["OMPI_WRAPPER_FORTRAN_REQUIRED_FILE"]=""
S["OMPI_WRAPPER_CXX_REQUIRED_FILE"]=""
S["OMPI_WRAPPER_FC_LIBS_STATIC"]=""
S["OMPI_WRAPPER_FC_LIBS"]="-lmpi_usempif08 -lmpi_usempi_ignore_tkr -lmpi_mpifh -lmpi"
S["OMPI_WRAPPER_FC_LDFLAGS_STATIC"]="-L${libdir}  -Wl,-rpath -Wl,${libdir}"
S["OMPI_WRAPPER_FC_LDFLAGS"]="-L${libdir}  -Wl,-rpath -Wl,${libdir} -Wl,--enable-new-dtags"
S["OMPI_WRAPPER_LIBS_STATIC"]=""
S["OMPI_WRAPPER_LIBS"]="-lmpi"
S["OMPI_WRAPPER_LDFLAGS_STATIC"]=" "
S["OMPI_WRAPPER_LDFLAGS"]="-L${libdir}  -Wl,-rpath -Wl,${libdir} -Wl,--enable-new-dtags"
S["OMPI_WRAPPER_FCFLAGS_PREFIX"]=""
S["OMPI_WRAPPER_FCFLAGS"]="-I${includedir} -pthread  -I${exec_prefix}/lib"
S["OMPI_WRAPPER_CXXFLAGS_PREFIX"]=""
S["OMPI_WRAPPER_CXXFLAGS"]="-pthread "
S["OMPI_WRAPPER_CFLAGS_PREFIX"]=""
S["OMPI_WRAPPER_CFLAGS"]="-pthread "
S["OMPI_WRAPPER_CPPFLAGS"]="-I${includedir}"
S["OPAL_WRAPPER_LIBS_STATIC"]=""
S["OPAL_WRAPPER_LIBS"]="-lopen-pal"
S["OPAL_WRAPPER_LDFLAGS_STATIC"]=" "
S["OPAL_WRAPPER_LDFLAGS"]="-L${libdir}  -Wl,-rpath -Wl,${libdir} -Wl,--enable-new-dtags"
S["OPAL_WRAPPER_CXXFLAGS_PREFIX"]=""
S["OPAL_WRAPPER_CXXFLAGS"]="-pthread "
S["OPAL_WRAPPER_CFLAGS_PREFIX"]=""
S["OPAL_WRAPPER_CFLAGS"]="-pthread "
S["OPAL_WRAPPER_CPPFLAGS"]="-I${includedir}"
S["AMCA_PARAM_SETS_DIR"]="$(opaldatadir)/amca-param-sets"
S["OMPI_LIBMPI_EXTRA_LDFLAGS"]=""
S["OMPI_LIBMPI_EXTRA_LIBS"]=""
S["FFLAGS"]=""
S["MPIR_UNWIND_CFLAGS"]="-fasynchronous-unwind-tables"
S["DEBUGGER_CFLAGS"]="-g"
S["CFLAGS_WITHOUT_OPTFLAGS"]=" -DNDEBUG -mcx16"
S["OPAL_DYN_LIB_SUFFIX"]="so"
S["OPAL_DYN_LIB_PREFIX"]="lib"
S["LT_SYS_LIBRARY_PATH"]=""
S["OTOOL64"]=""
S["OTOOL"]=""
S["LIPO"]=""
S["NMEDIT"]=""
S["DSYMUTIL"]=""
S["MANIFEST_TOOL"]=":"
S["RANLIB"]="ranlib"
S["ac_ct_AR"]="ar"
S["AR"]="ar"
S["DLLTOOL"]="false"
S["OBJDUMP"]="objdump"
S["LD"]="/usr/bin/ld -m elf_x86_64"
S["FGREP"]="/usr/bin/grep -F"
S["LIBTOOL"]="$(SHELL) $(top_builddir)/libtool"
S["OMPI_MPIEXT_USEMPIF08_LIBS"]=" $(top_builddir)/ompi/mpiext/ftmpi/use-mpi-f08/libmpiext_ftmpi_usempif08.la"
S["OMPI_MPIEXT_USEMPIF08_DIRS"]=" mpiext/ftmpi/use-mpi-f08"
S["OMPI_MPIEXT_USEMPI_LIBS"]=" $(top_builddir)/ompi/mpiext/ftmpi/use-mpi/libmpiext_ftmpi_usempi.la"
S["OMPI_MPIEXT_USEMPI_DIRS"]=" mpiext/ftmpi/use-mpi"
S["OMPI_MPIEXT_MPIFH_LIBS"]=" $(top_builddir)/ompi/mpiext/ftmpi/mpif-h/libmpiext_ftmpi_mpifh.la"
S["OMPI_MPIEXT_MPIFH_DIRS"]=" mpiext/ftmpi/mpif-h"
S["OMPI_MPIEXT_C_LIBS"]=" $(top_builddir)/ompi/mpiext/affinity/c/libmpiext_affinity_c.la $(top_builddir)/ompi/mpiext/cuda/c/libmpiext_cuda_c.la $(top_builddir)/ompi/mpiext/f"\
"tmpi/c/libmpiext_ftmpi_c.la $(top_builddir)/ompi/mpiext/rocm/c/libmpiext_rocm_c.la"
S["OMPI_MPIEXT_C_DIRS"]=" mpiext/affinity/c mpiext/cuda/c mpiext/ftmpi/c mpiext/rocm/c"
S["OMPI_MPIEXT_ALL_SUBDIRS"]=" mpiext/affinity mpiext/cuda mpiext/ftmpi mpiext/rocm mpiext/shortfloat"
S["OMPI_MPIX_C_FLOAT16_FORTRAN_COMMENT_OUT"]="!"
S["OMPI_MPIX_SHORT_FLOAT_IS_C_FLOAT16"]="0"
S["OMPI_BUILD_FORTRAN_USEMPI_OR_USEMPIF08_EXT_FALSE"]="#"
S["OMPI_BUILD_FORTRAN_USEMPI_OR_USEMPIF08_EXT_TRUE"]=""
S["OMPI_BUILD_FORTRAN_USEMPIF08_EXT_FALSE"]="#"
S["OMPI_BUILD_FORTRAN_USEMPIF08_EXT_TRUE"]=""
S["OMPI_BUILD_FORTRAN_USEMPI_EXT_FALSE"]="#"
S["OMPI_BUILD_FORTRAN_USEMPI_EXT_TRUE"]=""
S["MCA_PROJECT_DIST_SUBDIRS"]=" opal ompi oshmem"
S["MCA_PROJECT_SUBDIRS"]=" opal ompi "
S["MCA_oshmem_FRAMEWORK_CORE_LIBS"]=""
S["MCA_oshmem_FRAMEWORK_LIBS"]=" mca/atomic/libmca_atomic.la $(MCA_oshmem_atomic_STATIC_LTLIBS) mca/memheap/libmca_memheap.la $(MCA_oshmem_memheap_STATIC_LTLIBS) mca/scoll/libmca_s"\
"coll.la $(MCA_oshmem_scoll_STATIC_LTLIBS) mca/spml/libmca_spml.la $(MCA_oshmem_spml_STATIC_LTLIBS) mca/sshmem/libmca_sshmem.la $(MCA_oshmem_sshmem_S"\
"TATIC_LTLIBS)"
S["MCA_oshmem_FRAMEWORK_COMPONENT_STATIC_SUBDIRS"]=" $(MCA_oshmem_atomic_STATIC_SUBDIRS) $(MCA_oshmem_memheap_STATIC_SUBDIRS) $(MCA_oshmem_scoll_STATIC_SUBDIRS) $(MCA_oshmem_spml_STATIC_SUBDIRS) $(MCA"\
"_oshmem_sshmem_STATIC_SUBDIRS)"
S["MCA_oshmem_FRAMEWORK_COMPONENT_DSO_SUBDIRS"]=" $(MCA_oshmem_atomic_DSO_SUBDIRS) $(MCA_oshmem_memheap_DSO_SUBDIRS) $(MCA_oshmem_scoll_DSO_SUBDIRS) $(MCA_oshmem_spml_DSO_SUBDIRS) $(MCA_oshmem_sshm"\
"em_DSO_SUBDIRS)"
S["MCA_oshmem_FRAMEWORK_COMPONENT_ALL_SUBDIRS"]=" $(MCA_oshmem_atomic_ALL_SUBDIRS) $(MCA_oshmem_memheap_ALL_SUBDIRS) $(MCA_oshmem_scoll_ALL_SUBDIRS) $(MCA_oshmem_spml_ALL_SUBDIRS) $(MCA_oshmem_sshm"\
"em_ALL_SUBDIRS)"
S["MCA_oshmem_FRAMEWORKS_SUBDIRS"]=" mca/atomic mca/memheap mca/scoll mca/spml mca/sshmem"
S["MCA_oshmem_FRAMEWORKS"]=" atomic memheap scoll spml sshmem"
S["MCA_oshmem_sshmem_DSO_SUBDIRS"]=""
S["MCA_oshmem_sshmem_STATIC_SUBDIRS"]=" mca/sshmem/mmap mca/sshmem/sysv"
S["MCA_oshmem_sshmem_ALL_SUBDIRS"]=" mca/sshmem/mmap mca/sshmem/sysv mca/sshmem/ucx"
S["MCA_oshmem_sshmem_STATIC_LTLIBS"]="mca/sshmem/sysv/libmca_sshmem_sysv.la mca/sshmem/mmap/libmca_sshmem_mmap.la "
S["MCA_oshmem_sshmem_DSO_COMPONENTS"]=""
S["MCA_oshmem_sshmem_STATIC_COMPONENTS"]=" mmap sysv"
S["MCA_oshmem_sshmem_ALL_COMPONENTS"]=" mmap sysv ucx"
S["MCA_BUILD_oshmem_sshmem_ucx_DSO_FALSE"]=""
S["MCA_BUILD_oshmem_sshmem_ucx_DSO_TRUE"]="#"
S["sshmem_ucx_LIBS"]=""
S["sshmem_ucx_LDFLAGS"]=""
S["sshmem_ucx_CPPFLAGS"]=""
S["MCA_BUILD_oshmem_sshmem_sysv_DSO_FALSE"]=""
S["MCA_BUILD_oshmem_sshmem_sysv_DSO_TRUE"]="#"
S["MCA_BUILD_oshmem_sshmem_mmap_DSO_FALSE"]=""
S["MCA_BUILD_oshmem_sshmem_mmap_DSO_TRUE"]="#"
S["MCA_oshmem_spml_DIRECT_CALL_HEADER"]=""
S["MCA_oshmem_spml_DSO_SUBDIRS"]=""
S["MCA_oshmem_spml_STATIC_SUBDIRS"]=""
S["MCA_oshmem_spml_ALL_SUBDIRS"]=" mca/spml/ucx"
S["MCA_oshmem_spml_STATIC_LTLIBS"]=""
S["MCA_oshmem_spml_DSO_COMPONENTS"]=""
S["MCA_oshmem_spml_STATIC_COMPONENTS"]=""
S["MCA_oshmem_spml_ALL_COMPONENTS"]=" ucx"
S["MCA_BUILD_oshmem_spml_ucx_DSO_FALSE"]=""
S["MCA_BUILD_oshmem_spml_ucx_DSO_TRUE"]="#"
S["spml_ucx_LIBS"]=""
S["spml_ucx_LDFLAGS"]=""
S["spml_ucx_CPPFLAGS"]=""
S["MCA_oshmem_scoll_DSO_SUBDIRS"]=""
S["MCA_oshmem_scoll_STATIC_SUBDIRS"]=" mca/scoll/basic mca/scoll/mpi"
S["MCA_oshmem_scoll_ALL_SUBDIRS"]=" mca/scoll/basic mca/scoll/mpi mca/scoll/ucc"
S["MCA_oshmem_scoll_STATIC_LTLIBS"]="mca/scoll/mpi/libmca_scoll_mpi.la mca/scoll/basic/libmca_scoll_basic.la "
S["MCA_oshmem_scoll_DSO_COMPONENTS"]=""
S["MCA_oshmem_scoll_STATIC_COMPONENTS"]=" basic mpi"
S["MCA_oshmem_scoll_ALL_COMPONENTS"]=" basic mpi ucc"
S["MCA_BUILD_oshmem_scoll_ucc_DSO_FALSE"]=""
S["MCA_BUILD_oshmem_scoll_ucc_DSO_TRUE"]="#"
S["scoll_ucc_LIBS"]=""
S["scoll_ucc_LDFLAGS"]=""
S["scoll_ucc_CPPFLAGS"]=""
S["MCA_BUILD_oshmem_scoll_mpi_DSO_FALSE"]=""
S["MCA_BUILD_oshmem_scoll_mpi_DSO_TRUE"]="#"
S["MCA_BUILD_oshmem_scoll_basic_DSO_FALSE"]=""
S["MCA_BUILD_oshmem_scoll_basic_DSO_TRUE"]="#"
S["MCA_oshmem_memheap_DIRECT_CALL_HEADER"]=""
S["MCA_oshmem_memheap_DSO_SUBDIRS"]=""
S["MCA_oshmem_memheap_STATIC_SUBDIRS"]=" mca/memheap/buddy mca/memheap/ptmalloc"
S["MCA_oshmem_memheap_ALL_SUBDIRS"]=" mca/memheap/buddy mca/memheap/ptmalloc"
S["MCA_oshmem_memheap_STATIC_LTLIBS"]="mca/memheap/ptmalloc/libmca_memheap_ptmalloc.la mca/memheap/buddy/libmca_memheap_buddy.la "
S["MCA_oshmem_memheap_DSO_COMPONENTS"]=""
S["MCA_oshmem_memheap_STATIC_COMPONENTS"]=" buddy ptmalloc"
S["MCA_oshmem_memheap_ALL_COMPONENTS"]=" buddy ptmalloc"
S["MCA_BUILD_oshmem_memheap_ptmalloc_DSO_FALSE"]=""
S["MCA_BUILD_oshmem_memheap_ptmalloc_DSO_TRUE"]="#"
S["MCA_BUILD_oshmem_memheap_buddy_DSO_FALSE"]=""
S["MCA_BUILD_oshmem_memheap_buddy_DSO_TRUE"]="#"
S["MCA_oshmem_atomic_DSO_SUBDIRS"]=""
S["MCA_oshmem_atomic_STATIC_SUBDIRS"]=" mca/atomic/basic"
S["MCA_oshmem_atomic_ALL_SUBDIRS"]=" mca/atomic/basic mca/atomic/ucx"
S["MCA_oshmem_atomic_STATIC_LTLIBS"]="mca/atomic/basic/libmca_atomic_basic.la "
S["MCA_oshmem_atomic_DSO_COMPONENTS"]=""
S["MCA_oshmem_atomic_STATIC_COMPONENTS"]=" basic"
S["MCA_oshmem_atomic_ALL_COMPONENTS"]=" basic ucx"
S["MCA_BUILD_oshmem_atomic_ucx_DSO_FALSE"]=""
S["MCA_BUILD_oshmem_atomic_ucx_DSO_TRUE"]="#"
S["atomic_ucx_LIBS"]=""
S["atomic_ucx_LDFLAGS"]=""
S["atomic_ucx_CPPFLAGS"]=""
S["MCA_BUILD_oshmem_atomic_basic_DSO_FALSE"]=""
S["MCA_BUILD_oshmem_atomic_basic_DSO_TRUE"]="#"
S["MCA_ompi_FRAMEWORK_CORE_LIBS"]=""
S["MCA_ompi_FRAMEWORK_LIBS"]="  $(MCA_ompi_common_STATIC_LTLIBS) mca/bml/libmca_bml.la $(MCA_ompi_bml_STATIC_LTLIBS) mca/coll/libmca_coll.la $(MCA_ompi_coll_STATIC_LTLIBS) mca/fb"\
"tl/libmca_fbtl.la $(MCA_ompi_fbtl_STATIC_LTLIBS) mca/fcoll/libmca_fcoll.la $(MCA_ompi_fcoll_STATIC_LTLIBS) mca/fs/libmca_fs.la $(MCA_ompi_fs_STATIC_"\
"LTLIBS) mca/hook/libmca_hook.la $(MCA_ompi_hook_STATIC_LTLIBS) mca/io/libmca_io.la $(MCA_ompi_io_STATIC_LTLIBS) mca/mtl/libmca_mtl.la $(MCA_ompi_mtl"\
"_STATIC_LTLIBS) mca/op/libmca_op.la $(MCA_ompi_op_STATIC_LTLIBS) mca/osc/libmca_osc.la $(MCA_ompi_osc_STATIC_LTLIBS) mca/part/libmca_part.la $(MCA_o"\
"mpi_part_STATIC_LTLIBS) mca/pml/libmca_pml.la $(MCA_ompi_pml_STATIC_LTLIBS) mca/sharedfp/libmca_sharedfp.la $(MCA_ompi_sharedfp_STATIC_LTLIBS) mca/t"\
"opo/libmca_topo.la $(MCA_ompi_topo_STATIC_LTLIBS) mca/vprotocol/libmca_vprotocol.la $(MCA_ompi_vprotocol_STATIC_LTLIBS)"
S["MCA_ompi_FRAMEWORK_COMPONENT_STATIC_SUBDIRS"]="$(MCA_ompi_common_STATIC_SUBDIRS)  $(MCA_ompi_bml_STATIC_SUBDIRS) $(MCA_ompi_coll_STATIC_SUBDIRS) $(MCA_ompi_fbtl_STATIC_SUBDIRS) $(MCA_ompi_fcoll_S"\
"TATIC_SUBDIRS) $(MCA_ompi_fs_STATIC_SUBDIRS) $(MCA_ompi_hook_STATIC_SUBDIRS) $(MCA_ompi_io_STATIC_SUBDIRS) $(MCA_ompi_mtl_STATIC_SUBDIRS) $(MCA_ompi"\
"_op_STATIC_SUBDIRS) $(MCA_ompi_osc_STATIC_SUBDIRS) $(MCA_ompi_part_STATIC_SUBDIRS) $(MCA_ompi_pml_STATIC_SUBDIRS) $(MCA_ompi_sharedfp_STATIC_SUBDIRS"\
") $(MCA_ompi_topo_STATIC_SUBDIRS) $(MCA_ompi_vprotocol_STATIC_SUBDIRS)"
S["MCA_ompi_FRAMEWORK_COMPONENT_DSO_SUBDIRS"]="$(MCA_ompi_common_DSO_SUBDIRS)  $(MCA_ompi_bml_DSO_SUBDIRS) $(MCA_ompi_coll_DSO_SUBDIRS) $(MCA_ompi_fbtl_DSO_SUBDIRS) $(MCA_ompi_fcoll_DSO_SUBDIRS) "\
"$(MCA_ompi_fs_DSO_SUBDIRS) $(MCA_ompi_hook_DSO_SUBDIRS) $(MCA_ompi_io_DSO_SUBDIRS) $(MCA_ompi_mtl_DSO_SUBDIRS) $(MCA_ompi_op_DSO_SUBDIRS) $(MCA_ompi"\
"_osc_DSO_SUBDIRS) $(MCA_ompi_part_DSO_SUBDIRS) $(MCA_ompi_pml_DSO_SUBDIRS) $(MCA_ompi_sharedfp_DSO_SUBDIRS) $(MCA_ompi_topo_DSO_SUBDIRS) $(MCA_ompi_"\
"vprotocol_DSO_SUBDIRS)"
S["MCA_ompi_FRAMEWORK_COMPONENT_ALL_SUBDIRS"]="$(MCA_ompi_common_ALL_SUBDIRS)  $(MCA_ompi_bml_ALL_SUBDIRS) $(MCA_ompi_coll_ALL_SUBDIRS) $(MCA_ompi_fbtl_ALL_SUBDIRS) $(MCA_ompi_fcoll_ALL_SUBDIRS) "\
"$(MCA_ompi_fs_ALL_SUBDIRS) $(MCA_ompi_hook_ALL_SUBDIRS) $(MCA_ompi_io_ALL_SUBDIRS) $(MCA_ompi_mtl_ALL_SUBDIRS) $(MCA_ompi_op_ALL_SUBDIRS) $(MCA_ompi"\
"_osc_ALL_SUBDIRS) $(MCA_ompi_part_ALL_SUBDIRS) $(MCA_ompi_pml_ALL_SUBDIRS) $(MCA_ompi_sharedfp_ALL_SUBDIRS) $(MCA_ompi_topo_ALL_SUBDIRS) $(MCA_ompi_"\
"vprotocol_ALL_SUBDIRS)"
S["MCA_ompi_FRAMEWORKS_SUBDIRS"]="mca/common  mca/bml mca/coll mca/fbtl mca/fcoll mca/fs mca/hook mca/io mca/mtl mca/op mca/osc mca/part mca/pml mca/sharedfp mca/topo mca/vprotocol"
S["MCA_ompi_FRAMEWORKS"]="common  bml coll fbtl fcoll fs hook io mtl op osc part pml sharedfp topo vprotocol"
S["MCA_ompi_vprotocol_DSO_SUBDIRS"]=""
S["MCA_ompi_vprotocol_STATIC_SUBDIRS"]=" mca/vprotocol/pessimist"
S["MCA_ompi_vprotocol_ALL_SUBDIRS"]=" mca/vprotocol/pessimist"
S["MCA_ompi_vprotocol_STATIC_LTLIBS"]="mca/vprotocol/pessimist/libmca_vprotocol_pessimist.la "
S["MCA_ompi_vprotocol_DSO_COMPONENTS"]=""
S["MCA_ompi_vprotocol_STATIC_COMPONENTS"]=" pessimist"
S["MCA_ompi_vprotocol_ALL_COMPONENTS"]=" pessimist"
S["MCA_BUILD_ompi_vprotocol_pessimist_DSO_FALSE"]=""
S["MCA_BUILD_ompi_vprotocol_pessimist_DSO_TRUE"]="#"
S["MCA_ompi_topo_DSO_SUBDIRS"]=""
S["MCA_ompi_topo_STATIC_SUBDIRS"]=" mca/topo/basic mca/topo/treematch"
S["MCA_ompi_topo_ALL_SUBDIRS"]=" mca/topo/basic mca/topo/treematch"
S["MCA_ompi_topo_STATIC_LTLIBS"]="mca/topo/treematch/libmca_topo_treematch.la mca/topo/basic/libmca_topo_basic.la "
S["MCA_ompi_topo_DSO_COMPONENTS"]=""
S["MCA_ompi_topo_STATIC_COMPONENTS"]=" basic treematch"
S["MCA_ompi_topo_ALL_COMPONENTS"]=" basic treematch"
S["MCA_BUILD_ompi_topo_treematch_DSO_FALSE"]=""
S["MCA_BUILD_ompi_topo_treematch_DSO_TRUE"]="#"
S["topo_treematch_LIBS"]="/root/rpmbuild/BUILD/openmpi-5.0.5/3rd-party/treematch/libtreematch.la"
S["topo_treematch_LDFLAGS"]=""
S["topo_treematch_CPPFLAGS"]="-I/root/rpmbuild/BUILD/openmpi-5.0.5/3rd-party/treematch"
S["MCA_BUILD_ompi_topo_basic_DSO_FALSE"]=""
S["MCA_BUILD_ompi_topo_basic_DSO_TRUE"]="#"
S["MCA_ompi_sharedfp_DSO_SUBDIRS"]=""
S["MCA_ompi_sharedfp_STATIC_SUBDIRS"]=" mca/sharedfp/individual mca/sharedfp/lockedfile mca/sharedfp/sm"
S["MCA_ompi_sharedfp_ALL_SUBDIRS"]=" mca/sharedfp/individual mca/sharedfp/lockedfile mca/sharedfp/sm"
S["MCA_ompi_sharedfp_STATIC_LTLIBS"]="mca/sharedfp/sm/libmca_sharedfp_sm.la mca/sharedfp/lockedfile/libmca_sharedfp_lockedfile.la mca/sharedfp/individual/libmca_sharedfp_individual.la "
S["MCA_ompi_sharedfp_DSO_COMPONENTS"]=""
S["MCA_ompi_sharedfp_STATIC_COMPONENTS"]=" individual lockedfile sm"
S["MCA_ompi_sharedfp_ALL_COMPONENTS"]=" individual lockedfile sm"
S["MCA_BUILD_ompi_sharedfp_sm_DSO_FALSE"]=""
S["MCA_BUILD_ompi_sharedfp_sm_DSO_TRUE"]="#"
S["MCA_BUILD_ompi_sharedfp_lockedfile_DSO_FALSE"]=""
S["MCA_BUILD_ompi_sharedfp_lockedfile_DSO_TRUE"]="#"
S["MCA_BUILD_ompi_sharedfp_individual_DSO_FALSE"]=""
S["MCA_BUILD_ompi_sharedfp_individual_DSO_TRUE"]="#"
S["MCA_ompi_pml_DIRECT_CALL_HEADER"]=""
S["MCA_ompi_pml_DSO_SUBDIRS"]=""
S["MCA_ompi_pml_STATIC_SUBDIRS"]=" mca/pml/cm mca/pml/monitoring mca/pml/ob1 mca/pml/v"
S["MCA_ompi_pml_ALL_SUBDIRS"]=" mca/pml/cm mca/pml/monitoring mca/pml/ob1 mca/pml/ucx mca/pml/v"
S["MCA_ompi_pml_STATIC_LTLIBS"]="mca/pml/v/libmca_pml_v.la mca/pml/ob1/libmca_pml_ob1.la mca/pml/monitoring/libmca_pml_monitoring.la mca/pml/cm/libmca_pml_cm.la "
S["MCA_ompi_pml_DSO_COMPONENTS"]=""
S["MCA_ompi_pml_STATIC_COMPONENTS"]=" cm monitoring ob1 v"
S["MCA_ompi_pml_ALL_COMPONENTS"]=" cm monitoring ob1 ucx v"
S["MCA_BUILD_ompi_pml_v_DSO_FALSE"]=""
S["MCA_BUILD_ompi_pml_v_DSO_TRUE"]="#"
S["MCA_BUILD_ompi_pml_ucx_DSO_FALSE"]=""
S["MCA_BUILD_ompi_pml_ucx_DSO_TRUE"]="#"
S["pml_ucx_LIBS"]=""
S["pml_ucx_LDFLAGS"]=""
S["pml_ucx_CPPFLAGS"]=""
S["MCA_BUILD_ompi_pml_ob1_DSO_FALSE"]=""
S["MCA_BUILD_ompi_pml_ob1_DSO_TRUE"]="#"
S["MCA_BUILD_ompi_pml_monitoring_DSO_FALSE"]=""
S["MCA_BUILD_ompi_pml_monitoring_DSO_TRUE"]="#"
S["MCA_BUILD_ompi_pml_cm_DSO_FALSE"]=""
S["MCA_BUILD_ompi_pml_cm_DSO_TRUE"]="#"
S["MCA_ompi_part_DIRECT_CALL_HEADER"]=""
S["MCA_ompi_part_DSO_SUBDIRS"]=""
S["MCA_ompi_part_STATIC_SUBDIRS"]=" mca/part/persist"
S["MCA_ompi_part_ALL_SUBDIRS"]=" mca/part/persist"
S["MCA_ompi_part_STATIC_LTLIBS"]="mca/part/persist/libmca_part_persist.la "
S["MCA_ompi_part_DSO_COMPONENTS"]=""
S["MCA_ompi_part_STATIC_COMPONENTS"]=" persist"
S["MCA_ompi_part_ALL_COMPONENTS"]=" persist"
S["MCA_BUILD_ompi_part_persist_DSO_FALSE"]=""
S["MCA_BUILD_ompi_part_persist_DSO_TRUE"]="#"
S["MCA_ompi_osc_DSO_SUBDIRS"]=""
S["MCA_ompi_osc_STATIC_SUBDIRS"]=" mca/osc/sm mca/osc/monitoring mca/osc/rdma"
S["MCA_ompi_osc_ALL_SUBDIRS"]=" mca/osc/sm mca/osc/monitoring mca/osc/portals4 mca/osc/rdma mca/osc/ucx"
S["MCA_ompi_osc_STATIC_LTLIBS"]="mca/osc/rdma/libmca_osc_rdma.la mca/osc/monitoring/libmca_osc_monitoring.la mca/osc/sm/libmca_osc_sm.la "
S["MCA_ompi_osc_DSO_COMPONENTS"]=""
S["MCA_ompi_osc_STATIC_COMPONENTS"]=" sm monitoring rdma"
S["MCA_ompi_osc_ALL_COMPONENTS"]=" sm monitoring portals4 rdma ucx"
S["MCA_BUILD_ompi_osc_ucx_DSO_FALSE"]=""
S["MCA_BUILD_ompi_osc_ucx_DSO_TRUE"]="#"
S["osc_ucx_LIBS"]=""
S["osc_ucx_LDFLAGS"]=""
S["osc_ucx_CPPFLAGS"]=""
S["MCA_BUILD_ompi_osc_rdma_DSO_FALSE"]=""
S["MCA_BUILD_ompi_osc_rdma_DSO_TRUE"]="#"
S["MCA_BUILD_ompi_osc_portals4_DSO_FALSE"]=""
S["MCA_BUILD_ompi_osc_portals4_DSO_TRUE"]="#"
S["osc_portals4_LIBS"]=""
S["osc_portals4_LDFLAGS"]=""
S["osc_portals4_CPPFLAGS"]=""
S["MCA_BUILD_ompi_osc_monitoring_DSO_FALSE"]=""
S["MCA_BUILD_ompi_osc_monitoring_DSO_TRUE"]="#"
S["MCA_BUILD_ompi_osc_sm_DSO_FALSE"]=""
S["MCA_BUILD_ompi_osc_sm_DSO_TRUE"]="#"
S["MCA_ompi_op_DSO_SUBDIRS"]=""
S["MCA_ompi_op_STATIC_SUBDIRS"]=" mca/op/avx"
S["MCA_ompi_op_ALL_SUBDIRS"]=" mca/op/aarch64 mca/op/avx"
S["MCA_ompi_op_STATIC_LTLIBS"]="mca/op/avx/libmca_op_avx.la "
S["MCA_ompi_op_DSO_COMPONENTS"]=""
S["MCA_ompi_op_STATIC_COMPONENTS"]=" avx"
S["MCA_ompi_op_ALL_COMPONENTS"]=" aarch64 avx"
S["MCA_BUILD_ompi_op_avx_DSO_FALSE"]=""
S["MCA_BUILD_ompi_op_avx_DSO_TRUE"]="#"
S["MCA_BUILD_OP_AVX_FLAGS"]="-mavx"
S["MCA_BUILD_OP_AVX2_FLAGS"]="-mavx2"
S["MCA_BUILD_OP_AVX512_FLAGS"]="-mavx512f -mavx512bw -mavx512vl -mavx512dq"
S["MCA_BUILD_ompi_op_has_sse3_support_FALSE"]="#"
S["MCA_BUILD_ompi_op_has_sse3_support_TRUE"]=""
S["MCA_BUILD_ompi_op_has_sse41_support_FALSE"]="#"
S["MCA_BUILD_ompi_op_has_sse41_support_TRUE"]=""
S["MCA_BUILD_ompi_op_has_avx_support_FALSE"]="#"
S["MCA_BUILD_ompi_op_has_avx_support_TRUE"]=""
S["MCA_BUILD_ompi_op_has_avx2_support_FALSE"]="#"
S["MCA_BUILD_ompi_op_has_avx2_support_TRUE"]=""
S["MCA_BUILD_ompi_op_has_avx512_support_FALSE"]="#"
S["MCA_BUILD_ompi_op_has_avx512_support_TRUE"]=""
S["MCA_BUILD_ompi_op_aarch64_DSO_FALSE"]=""
S["MCA_BUILD_ompi_op_aarch64_DSO_TRUE"]="#"
S["MCA_BUILD_ompi_op_has_sve_support"]=""
S["MCA_BUILD_ompi_op_has_neon_fp_support"]=""
S["MCA_BUILD_ompi_op_has_neon_support"]=""
S["MCA_BUILD_ompi_op_has_sve_support_FALSE"]=""
S["MCA_BUILD_ompi_op_has_sve_support_TRUE"]="#"
S["MCA_BUILD_ompi_op_has_neon_fp_support_FALSE"]=""
S["MCA_BUILD_ompi_op_has_neon_fp_support_TRUE"]="#"
S["MCA_BUILD_ompi_op_has_neon_support_FALSE"]=""
S["MCA_BUILD_ompi_op_has_neon_support_TRUE"]="#"
S["MCA_ompi_mtl_DIRECT_CALL_HEADER"]=""
S["MCA_ompi_mtl_DSO_SUBDIRS"]=""
S["MCA_ompi_mtl_STATIC_SUBDIRS"]=""
S["MCA_ompi_mtl_ALL_SUBDIRS"]=" mca/mtl/ofi mca/mtl/portals4 mca/mtl/psm2"
S["MCA_ompi_mtl_STATIC_LTLIBS"]=""
S["MCA_ompi_mtl_DSO_COMPONENTS"]=""
S["MCA_ompi_mtl_STATIC_COMPONENTS"]=""
S["MCA_ompi_mtl_ALL_COMPONENTS"]=" ofi portals4 psm2"
S["MCA_BUILD_ompi_mtl_psm2_DSO_FALSE"]=""
S["MCA_BUILD_ompi_mtl_psm2_DSO_TRUE"]="#"
S["mtl_psm2_LIBS"]=""
S["mtl_psm2_LDFLAGS"]=""
S["mtl_psm2_CPPFLAGS"]=""
S["MCA_BUILD_ompi_mtl_portals4_DSO_FALSE"]=""
S["MCA_BUILD_ompi_mtl_portals4_DSO_TRUE"]="#"
S["mtl_portals4_LIBS"]=""
S["mtl_portals4_LDFLAGS"]=""
S["mtl_portals4_CPPFLAGS"]=""
S["OMPI_MTL_PORTALS4_FLOW_CONTROL_FALSE"]="#"
S["OMPI_MTL_PORTALS4_FLOW_CONTROL_TRUE"]=""
S["MCA_BUILD_ompi_mtl_ofi_DSO_FALSE"]=""
S["MCA_BUILD_ompi_mtl_ofi_DSO_TRUE"]="#"
S["mtl_ofi_LIBS"]=""
S["mtl_ofi_LDFLAGS"]=""
S["mtl_ofi_CPPFLAGS"]=""
S["MCA_ompi_io_DSO_SUBDIRS"]=""
S["MCA_ompi_io_STATIC_SUBDIRS"]=" mca/io/ompio mca/io/romio341"
S["MCA_ompi_io_ALL_SUBDIRS"]=" mca/io/ompio mca/io/romio341"
S["MCA_ompi_io_STATIC_LTLIBS"]="mca/io/romio341/libmca_io_romio341.la mca/io/ompio/libmca_io_ompio.la "
S["MCA_ompi_io_DSO_COMPONENTS"]=""
S["MCA_ompi_io_STATIC_COMPONENTS"]=" ompio romio341"
S["MCA_ompi_io_ALL_COMPONENTS"]=" ompio romio341"
S["MCA_BUILD_ompi_io_romio341_DSO_FALSE"]=""
S["MCA_BUILD_ompi_io_romio341_DSO_TRUE"]="#"
S["MCA_io_romio341_SHOULD_BUILD_FALSE"]="#"
S["MCA_io_romio341_SHOULD_BUILD_TRUE"]=""
S["MCA_BUILD_ompi_io_ompio_DSO_FALSE"]=""
S["MCA_BUILD_ompi_io_ompio_DSO_TRUE"]="#"
S["MCA_ompi_hook_DSO_SUBDIRS"]=""
S["MCA_ompi_hook_STATIC_SUBDIRS"]=" mca/hook/comm_method"
S["MCA_ompi_hook_ALL_SUBDIRS"]=" mca/hook/comm_method"
S["MCA_ompi_hook_STATIC_LTLIBS"]="mca/hook/comm_method/libmca_hook_comm_method.la "
S["MCA_ompi_hook_DSO_COMPONENTS"]=""
S["MCA_ompi_hook_STATIC_COMPONENTS"]=" comm_method"
S["MCA_ompi_hook_ALL_COMPONENTS"]=" comm_method"
S["MCA_BUILD_ompi_hook_comm_method_DSO_FALSE"]=""
S["MCA_BUILD_ompi_hook_comm_method_DSO_TRUE"]="#"
S["MCA_ompi_fs_DSO_SUBDIRS"]=""
S["MCA_ompi_fs_STATIC_SUBDIRS"]=" mca/fs/ufs"
S["MCA_ompi_fs_ALL_SUBDIRS"]=" mca/fs/gpfs mca/fs/ime mca/fs/lustre mca/fs/pvfs2 mca/fs/ufs"
S["MCA_ompi_fs_STATIC_LTLIBS"]="mca/fs/ufs/libmca_fs_ufs.la "
S["MCA_ompi_fs_DSO_COMPONENTS"]=""
S["MCA_ompi_fs_STATIC_COMPONENTS"]=" ufs"
S["MCA_ompi_fs_ALL_COMPONENTS"]=" gpfs ime lustre pvfs2 ufs"
S["MCA_BUILD_ompi_fs_ufs_DSO_FALSE"]=""
S["MCA_BUILD_ompi_fs_ufs_DSO_TRUE"]="#"
S["MCA_BUILD_ompi_fs_pvfs2_DSO_FALSE"]=""
S["MCA_BUILD_ompi_fs_pvfs2_DSO_TRUE"]="#"
S["fs_pvfs2_LIBS"]=""
S["fs_pvfs2_LDFLAGS"]=""
S["fs_pvfs2_CPPFLAGS"]=""
S["MCA_BUILD_ompi_fs_lustre_DSO_FALSE"]=""
S["MCA_BUILD_ompi_fs_lustre_DSO_TRUE"]="#"
S["fs_lustre_LIBS"]=""
S["fs_lustre_LDFLAGS"]=""
S["fs_lustre_CPPFLAGS"]=""
S["MCA_BUILD_ompi_fs_ime_DSO_FALSE"]=""
S["MCA_BUILD_ompi_fs_ime_DSO_TRUE"]="#"
S["fs_ime_LIBS"]=""
S["fs_ime_LDFLAGS"]=""
S["fs_ime_CPPFLAGS"]=""
S["MCA_BUILD_ompi_fs_gpfs_DSO_FALSE"]=""
S["MCA_BUILD_ompi_fs_gpfs_DSO_TRUE"]="#"
S["fs_gpfs_LIBS"]=""
S["fs_gpfs_LDFLAGS"]=""
S["fs_gpfs_CPPFLAGS"]=""
S["MCA_ompi_fcoll_DSO_SUBDIRS"]=""
S["MCA_ompi_fcoll_STATIC_SUBDIRS"]=" mca/fcoll/dynamic mca/fcoll/dynamic_gen2 mca/fcoll/individual mca/fcoll/vulcan"
S["MCA_ompi_fcoll_ALL_SUBDIRS"]=" mca/fcoll/dynamic mca/fcoll/dynamic_gen2 mca/fcoll/individual mca/fcoll/vulcan"
S["MCA_ompi_fcoll_STATIC_LTLIBS"]="mca/fcoll/vulcan/libmca_fcoll_vulcan.la mca/fcoll/individual/libmca_fcoll_individual.la mca/fcoll/dynamic_gen2/libmca_fcoll_dynamic_gen2.la mca/fcol"\
"l/dynamic/libmca_fcoll_dynamic.la "
S["MCA_ompi_fcoll_DSO_COMPONENTS"]=""
S["MCA_ompi_fcoll_STATIC_COMPONENTS"]=" dynamic dynamic_gen2 individual vulcan"
S["MCA_ompi_fcoll_ALL_COMPONENTS"]=" dynamic dynamic_gen2 individual vulcan"
S["MCA_BUILD_ompi_fcoll_vulcan_DSO_FALSE"]=""
S["MCA_BUILD_ompi_fcoll_vulcan_DSO_TRUE"]="#"
S["MCA_BUILD_ompi_fcoll_individual_DSO_FALSE"]=""
S["MCA_BUILD_ompi_fcoll_individual_DSO_TRUE"]="#"
S["MCA_BUILD_ompi_fcoll_dynamic_gen2_DSO_FALSE"]=""
S["MCA_BUILD_ompi_fcoll_dynamic_gen2_DSO_TRUE"]="#"
S["MCA_BUILD_ompi_fcoll_dynamic_DSO_FALSE"]=""
S["MCA_BUILD_ompi_fcoll_dynamic_DSO_TRUE"]="#"
S["MCA_ompi_fbtl_DSO_SUBDIRS"]=""
S["MCA_ompi_fbtl_STATIC_SUBDIRS"]=" mca/fbtl/posix"
S["MCA_ompi_fbtl_ALL_SUBDIRS"]=" mca/fbtl/ime mca/fbtl/posix mca/fbtl/pvfs2"
S["MCA_ompi_fbtl_STATIC_LTLIBS"]="mca/fbtl/posix/libmca_fbtl_posix.la "
S["MCA_ompi_fbtl_DSO_COMPONENTS"]=""
S["MCA_ompi_fbtl_STATIC_COMPONENTS"]=" posix"
S["MCA_ompi_fbtl_ALL_COMPONENTS"]=" ime posix pvfs2"
S["MCA_BUILD_ompi_fbtl_pvfs2_DSO_FALSE"]=""
S["MCA_BUILD_ompi_fbtl_pvfs2_DSO_TRUE"]="#"
S["fbtl_pvfs2_LIBS"]=""
S["fbtl_pvfs2_LDFLAGS"]=""
S["fbtl_pvfs2_CPPFLAGS"]=""
S["MCA_BUILD_ompi_fbtl_posix_DSO_FALSE"]=""
S["MCA_BUILD_ompi_fbtl_posix_DSO_TRUE"]="#"
S["MCA_BUILD_ompi_fbtl_ime_DSO_FALSE"]=""
S["MCA_BUILD_ompi_fbtl_ime_DSO_TRUE"]="#"
S["fbtl_ime_LIBS"]=""
S["fbtl_ime_LDFLAGS"]=""
S["fbtl_ime_CPPFLAGS"]=""
S["MCA_ompi_coll_DSO_SUBDIRS"]=""
S["MCA_ompi_coll_STATIC_SUBDIRS"]=" mca/coll/adapt mca/coll/basic mca/coll/han mca/coll/inter mca/coll/libnbc mca/coll/self mca/coll/sync mca/coll/tuned mca/coll/ftagree mca/coll/moni"\
"toring mca/coll/sm"
S["MCA_ompi_coll_ALL_SUBDIRS"]=" mca/coll/adapt mca/coll/basic mca/coll/han mca/coll/inter mca/coll/libnbc mca/coll/self mca/coll/sync mca/coll/tuned mca/coll/cuda mca/coll/ftagree"\
" mca/coll/hcoll mca/coll/monitoring mca/coll/portals4 mca/coll/sm mca/coll/ucc"
S["MCA_ompi_coll_STATIC_LTLIBS"]="mca/coll/sm/libmca_coll_sm.la mca/coll/monitoring/libmca_coll_monitoring.la mca/coll/ftagree/libmca_coll_ftagree.la mca/coll/tuned/libmca_coll_tuned"\
".la mca/coll/sync/libmca_coll_sync.la mca/coll/self/libmca_coll_self.la mca/coll/libnbc/libmca_coll_libnbc.la mca/coll/inter/libmca_coll_inter.la mc"\
"a/coll/han/libmca_coll_han.la mca/coll/basic/libmca_coll_basic.la mca/coll/adapt/libmca_coll_adapt.la "
S["MCA_ompi_coll_DSO_COMPONENTS"]=""
S["MCA_ompi_coll_STATIC_COMPONENTS"]=" adapt basic han inter libnbc self sync tuned ftagree monitoring sm"
S["MCA_ompi_coll_ALL_COMPONENTS"]=" adapt basic han inter libnbc self sync tuned cuda ftagree hcoll monitoring portals4 sm ucc"
S["MCA_BUILD_ompi_coll_ucc_DSO_FALSE"]=""
S["MCA_BUILD_ompi_coll_ucc_DSO_TRUE"]="#"
S["coll_ucc_LIBS"]=""
S["coll_ucc_LDFLAGS"]=""
S["coll_ucc_CPPFLAGS"]=""
S["MCA_BUILD_ompi_coll_sm_DSO_FALSE"]=""
S["MCA_BUILD_ompi_coll_sm_DSO_TRUE"]="#"
S["MCA_BUILD_ompi_coll_portals4_DSO_FALSE"]=""
S["MCA_BUILD_ompi_coll_portals4_DSO_TRUE"]="#"
S["coll_portals4_LIBS"]=""
S["coll_portals4_LDFLAGS"]=""
S["coll_portals4_CPPFLAGS"]=""
S["MCA_BUILD_ompi_coll_monitoring_DSO_FALSE"]=""
S["MCA_BUILD_ompi_coll_monitoring_DSO_TRUE"]="#"
S["MCA_BUILD_ompi_coll_hcoll_DSO_FALSE"]=""
S["MCA_BUILD_ompi_coll_hcoll_DSO_TRUE"]="#"
S["coll_hcoll_LIBS"]=""
S["coll_hcoll_LDFLAGS"]=""
S["coll_hcoll_CPPFLAGS"]=""
S["MCA_BUILD_ompi_coll_ftagree_DSO_FALSE"]=""
S["MCA_BUILD_ompi_coll_ftagree_DSO_TRUE"]="#"
S["MCA_BUILD_ompi_coll_cuda_DSO_FALSE"]=""
S["MCA_BUILD_ompi_coll_cuda_DSO_TRUE"]="#"
S["MCA_BUILD_ompi_coll_tuned_DSO_FALSE"]=""
S["MCA_BUILD_ompi_coll_tuned_DSO_TRUE"]="#"
S["MCA_BUILD_ompi_coll_sync_DSO_FALSE"]=""
S["MCA_BUILD_ompi_coll_sync_DSO_TRUE"]="#"
S["MCA_BUILD_ompi_coll_self_DSO_FALSE"]=""
S["MCA_BUILD_ompi_coll_self_DSO_TRUE"]="#"
S["MCA_BUILD_ompi_coll_libnbc_DSO_FALSE"]=""
S["MCA_BUILD_ompi_coll_libnbc_DSO_TRUE"]="#"
S["MCA_BUILD_ompi_coll_inter_DSO_FALSE"]=""
S["MCA_BUILD_ompi_coll_inter_DSO_TRUE"]="#"
S["MCA_BUILD_ompi_coll_han_DSO_FALSE"]=""
S["MCA_BUILD_ompi_coll_han_DSO_TRUE"]="#"
S["MCA_BUILD_ompi_coll_basic_DSO_FALSE"]=""
S["MCA_BUILD_ompi_coll_basic_DSO_TRUE"]="#"
S["MCA_BUILD_ompi_coll_adapt_DSO_FALSE"]=""
S["MCA_BUILD_ompi_coll_adapt_DSO_TRUE"]="#"
S["MCA_ompi_bml_DSO_SUBDIRS"]=""
S["MCA_ompi_bml_STATIC_SUBDIRS"]=" mca/bml/r2"
S["MCA_ompi_bml_ALL_SUBDIRS"]=" mca/bml/r2"
S["MCA_ompi_bml_STATIC_LTLIBS"]="mca/bml/r2/libmca_bml_r2.la "
S["MCA_ompi_bml_DSO_COMPONENTS"]=""
S["MCA_ompi_bml_STATIC_COMPONENTS"]=" r2"
S["MCA_ompi_bml_ALL_COMPONENTS"]=" r2"
S["MCA_BUILD_ompi_bml_r2_DSO_FALSE"]=""
S["MCA_BUILD_ompi_bml_r2_DSO_TRUE"]="#"
S["MCA_ompi_common_DSO_SUBDIRS"]=""
S["MCA_ompi_common_STATIC_SUBDIRS"]=" mca/common/monitoring mca/common/ompio"
S["MCA_ompi_common_ALL_SUBDIRS"]=" mca/common/monitoring mca/common/ompio"
S["MCA_ompi_common_STATIC_LTLIBS"]="mca/common/ompio/libmca_common_ompio.la mca/common/monitoring/libmca_common_monitoring.la "
S["MCA_ompi_common_DSO_COMPONENTS"]=""
S["MCA_ompi_common_STATIC_COMPONENTS"]=" monitoring ompio"
S["MCA_ompi_common_ALL_COMPONENTS"]=" monitoring ompio"
S["MCA_BUILD_ompi_common_ompio_DSO_FALSE"]=""
S["MCA_BUILD_ompi_common_ompio_DSO_TRUE"]="#"
S["MCA_BUILD_ompi_common_monitoring_DSO_FALSE"]=""
S["MCA_BUILD_ompi_common_monitoring_DSO_TRUE"]="#"
S["MCA_opal_FRAMEWORK_CORE_LIBS"]=" mca/backtrace/libmca_backtrace.la $(MCA_opal_backtrace_STATIC_LTLIBS) mca/dl/libmca_dl.la $(MCA_opal_dl_STATIC_LTLIBS) mca/installdirs/libmca_insta"\
"lldirs.la $(MCA_opal_installdirs_STATIC_LTLIBS) mca/threads/libmca_threads.la $(MCA_opal_threads_STATIC_LTLIBS) mca/timer/libmca_timer.la $(MCA_opal"\
"_timer_STATIC_LTLIBS)"
S["MCA_opal_FRAMEWORK_LIBS"]="  $(MCA_opal_common_STATIC_LTLIBS) mca/accelerator/libmca_accelerator.la $(MCA_opal_accelerator_STATIC_LTLIBS) mca/allocator/libmca_allocator.la $(M"\
"CA_opal_allocator_STATIC_LTLIBS) mca/btl/libmca_btl.la $(MCA_opal_btl_STATIC_LTLIBS) mca/hwloc/libmca_hwloc.la $(MCA_opal_hwloc_STATIC_LTLIBS) mca/i"\
"f/libmca_if.la $(MCA_opal_if_STATIC_LTLIBS) mca/memchecker/libmca_memchecker.la $(MCA_opal_memchecker_STATIC_LTLIBS) mca/memcpy/libmca_memcpy.la $(M"\
"CA_opal_memcpy_STATIC_LTLIBS) mca/memory/libmca_memory.la $(MCA_opal_memory_STATIC_LTLIBS) mca/mpool/libmca_mpool.la $(MCA_opal_mpool_STATIC_LTLIBS)"\
" mca/patcher/libmca_patcher.la $(MCA_opal_patcher_STATIC_LTLIBS) mca/pmix/libmca_pmix.la $(MCA_opal_pmix_STATIC_LTLIBS) mca/rcache/libmca_rcache.la "\
"$(MCA_opal_rcache_STATIC_LTLIBS) mca/reachable/libmca_reachable.la $(MCA_opal_reachable_STATIC_LTLIBS) mca/shmem/libmca_shmem.la $(MCA_opal_shmem_ST"\
"ATIC_LTLIBS) mca/smsc/libmca_smsc.la $(MCA_opal_smsc_STATIC_LTLIBS)"
S["MCA_opal_FRAMEWORK_COMPONENT_STATIC_SUBDIRS"]="$(MCA_opal_common_STATIC_SUBDIRS)  $(MCA_opal_accelerator_STATIC_SUBDIRS) $(MCA_opal_allocator_STATIC_SUBDIRS) $(MCA_opal_backtrace_STATIC_SUBDIRS) "\
"$(MCA_opal_btl_STATIC_SUBDIRS) $(MCA_opal_dl_STATIC_SUBDIRS) $(MCA_opal_hwloc_STATIC_SUBDIRS) $(MCA_opal_if_STATIC_SUBDIRS) $(MCA_opal_installdirs_S"\
"TATIC_SUBDIRS) $(MCA_opal_memchecker_STATIC_SUBDIRS) $(MCA_opal_memcpy_STATIC_SUBDIRS) $(MCA_opal_memory_STATIC_SUBDIRS) $(MCA_opal_mpool_STATIC_SUB"\
"DIRS) $(MCA_opal_patcher_STATIC_SUBDIRS) $(MCA_opal_pmix_STATIC_SUBDIRS) $(MCA_opal_rcache_STATIC_SUBDIRS) $(MCA_opal_reachable_STATIC_SUBDIRS) $(MC"\
"A_opal_shmem_STATIC_SUBDIRS) $(MCA_opal_smsc_STATIC_SUBDIRS) $(MCA_opal_threads_STATIC_SUBDIRS) $(MCA_opal_timer_STATIC_SUBDIRS)"
S["MCA_opal_FRAMEWORK_COMPONENT_DSO_SUBDIRS"]="$(MCA_opal_common_DSO_SUBDIRS)  $(MCA_opal_accelerator_DSO_SUBDIRS) $(MCA_opal_allocator_DSO_SUBDIRS) $(MCA_opal_backtrace_DSO_SUBDIRS) $(MCA_opal_b"\
"tl_DSO_SUBDIRS) $(MCA_opal_dl_DSO_SUBDIRS) $(MCA_opal_hwloc_DSO_SUBDIRS) $(MCA_opal_if_DSO_SUBDIRS) $(MCA_opal_installdirs_DSO_SUBDIRS) $(MCA_opal_m"\
"emchecker_DSO_SUBDIRS) $(MCA_opal_memcpy_DSO_SUBDIRS) $(MCA_opal_memory_DSO_SUBDIRS) $(MCA_opal_mpool_DSO_SUBDIRS) $(MCA_opal_patcher_DSO_SUBDIRS) $"\
"(MCA_opal_pmix_DSO_SUBDIRS) $(MCA_opal_rcache_DSO_SUBDIRS) $(MCA_opal_reachable_DSO_SUBDIRS) $(MCA_opal_shmem_DSO_SUBDIRS) $(MCA_opal_smsc_DSO_SUBDI"\
"RS) $(MCA_opal_threads_DSO_SUBDIRS) $(MCA_opal_timer_DSO_SUBDIRS)"
S["MCA_opal_FRAMEWORK_COMPONENT_ALL_SUBDIRS"]="$(MCA_opal_common_ALL_SUBDIRS)  $(MCA_opal_accelerator_ALL_SUBDIRS) $(MCA_opal_allocator_ALL_SUBDIRS) $(MCA_opal_backtrace_ALL_SUBDIRS) $(MCA_opal_b"\
"tl_ALL_SUBDIRS) $(MCA_opal_dl_ALL_SUBDIRS) $(MCA_opal_hwloc_ALL_SUBDIRS) $(MCA_opal_if_ALL_SUBDIRS) $(MCA_opal_installdirs_ALL_SUBDIRS) $(MCA_opal_m"\
"emchecker_ALL_SUBDIRS) $(MCA_opal_memcpy_ALL_SUBDIRS) $(MCA_opal_memory_ALL_SUBDIRS) $(MCA_opal_mpool_ALL_SUBDIRS) $(MCA_opal_patcher_ALL_SUBDIRS) $"\
"(MCA_opal_pmix_ALL_SUBDIRS) $(MCA_opal_rcache_ALL_SUBDIRS) $(MCA_opal_reachable_ALL_SUBDIRS) $(MCA_opal_shmem_ALL_SUBDIRS) $(MCA_opal_smsc_ALL_SUBDI"\
"RS) $(MCA_opal_threads_ALL_SUBDIRS) $(MCA_opal_timer_ALL_SUBDIRS)"
S["MCA_opal_FRAMEWORKS_SUBDIRS"]="mca/common  mca/accelerator mca/allocator mca/backtrace mca/btl mca/dl mca/hwloc mca/if mca/installdirs mca/memchecker mca/memcpy mca/memory mca/mpo"\
"ol mca/patcher mca/pmix mca/rcache mca/reachable mca/shmem mca/smsc mca/threads mca/timer"
S["MCA_opal_FRAMEWORKS"]="common  accelerator allocator backtrace btl dl hwloc if installdirs memchecker memcpy memory mpool patcher pmix rcache reachable shmem smsc threads "\
"timer"
S["MCA_opal_timer_DSO_SUBDIRS"]=""
S["MCA_opal_timer_STATIC_SUBDIRS"]=" mca/timer/linux"
S["MCA_opal_timer_ALL_SUBDIRS"]=" mca/timer/altix mca/timer/darwin mca/timer/linux mca/timer/solaris"
S["MCA_opal_timer_STATIC_LTLIBS"]="mca/timer/linux/libmca_timer_linux.la "
S["MCA_opal_timer_DSO_COMPONENTS"]=""
S["MCA_opal_timer_STATIC_COMPONENTS"]=" linux"
S["MCA_opal_timer_ALL_COMPONENTS"]=" altix darwin linux solaris"
S["MCA_BUILD_opal_timer_solaris_DSO_FALSE"]=""
S["MCA_BUILD_opal_timer_solaris_DSO_TRUE"]="#"
S["MCA_BUILD_opal_timer_linux_DSO_FALSE"]=""
S["MCA_BUILD_opal_timer_linux_DSO_TRUE"]="#"
S["MCA_BUILD_opal_timer_darwin_DSO_FALSE"]=""
S["MCA_BUILD_opal_timer_darwin_DSO_TRUE"]="#"
S["MCA_BUILD_opal_timer_altix_DSO_FALSE"]=""
S["MCA_BUILD_opal_timer_altix_DSO_TRUE"]="#"
S["THREAD_LIBS"]=""
S["THREAD_LDFLAGS"]=""
S["THREAD_CPPFLAGS"]=""
S["THREAD_CXXFLAGS"]="-pthread"
S["THREAD_FCFLAGS"]="-pthread"
S["THREAD_CFLAGS"]="-pthread"
S["MCA_opal_threads_DSO_SUBDIRS"]=""
S["MCA_opal_threads_STATIC_SUBDIRS"]=" mca/threads/pthreads"
S["MCA_opal_threads_ALL_SUBDIRS"]=" mca/threads/argobots mca/threads/pthreads mca/threads/qthreads"
S["MCA_opal_threads_STATIC_LTLIBS"]="mca/threads/pthreads/libmca_threads_pthreads.la "
S["MCA_opal_threads_DSO_COMPONENTS"]=""
S["MCA_opal_threads_STATIC_COMPONENTS"]=" pthreads"
S["MCA_opal_threads_ALL_COMPONENTS"]=" argobots pthreads qthreads"
S["MCA_BUILD_opal_threads_qthreads_DSO_FALSE"]=""
S["MCA_BUILD_opal_threads_qthreads_DSO_TRUE"]="#"
S["opal_qthreads_LIBS"]=""
S["opal_qthreads_LDFLAGS"]=""
S["opal_qthreads_CPPFLAGS"]=""
S["MCA_BUILD_opal_threads_pthreads_DSO_FALSE"]=""
S["MCA_BUILD_opal_threads_pthreads_DSO_TRUE"]="#"
S["MCA_BUILD_opal_threads_argobots_DSO_FALSE"]=""
S["MCA_BUILD_opal_threads_argobots_DSO_TRUE"]="#"
S["opal_argo_LIBS"]=""
S["opal_argo_LDFLAGS"]=""
S["opal_argo_CPPFLAGS"]=""
S["MCA_opal_smsc_DIRECT_CALL_HEADER"]=""
S["MCA_opal_smsc_DSO_SUBDIRS"]=""
S["MCA_opal_smsc_STATIC_SUBDIRS"]=" mca/smsc/cma"
S["MCA_opal_smsc_ALL_SUBDIRS"]=" mca/smsc/cma mca/smsc/knem mca/smsc/xpmem"
S["MCA_opal_smsc_STATIC_LTLIBS"]="mca/smsc/cma/libmca_smsc_cma.la "
S["MCA_opal_smsc_DSO_COMPONENTS"]=""
S["MCA_opal_smsc_STATIC_COMPONENTS"]=" cma"
S["MCA_opal_smsc_ALL_COMPONENTS"]=" cma knem xpmem"
S["MCA_BUILD_opal_smsc_xpmem_DSO_FALSE"]=""
S["MCA_BUILD_opal_smsc_xpmem_DSO_TRUE"]="#"
S["smsc_xpmem_LIBS"]=""
S["smsc_xpmem_LDFLAGS"]=""
S["smsc_xpmem_CPPFLAGS"]=""
S["CRAY_XPMEM_STATIC_LIBS"]=""
S["CRAY_XPMEM_LIBS"]=""
S["CRAY_XPMEM_CFLAGS"]=""
S["MCA_BUILD_opal_smsc_knem_DSO_FALSE"]=""
S["MCA_BUILD_opal_smsc_knem_DSO_TRUE"]="#"
S["smsc_knem_LIBS"]=""
S["smsc_knem_LDFLAGS"]=""
S["smsc_knem_CPPFLAGS"]=""
S["MCA_BUILD_opal_smsc_cma_DSO_FALSE"]=""
S["MCA_BUILD_opal_smsc_cma_DSO_TRUE"]="#"
S["smsc_cma_LIBS"]=""
S["smsc_cma_LDFLAGS"]=""
S["smsc_cma_CPPFLAGS"]=""
S["MCA_opal_shmem_DSO_SUBDIRS"]=""
S["MCA_opal_shmem_STATIC_SUBDIRS"]=" mca/shmem/mmap mca/shmem/posix mca/shmem/sysv"
S["MCA_opal_shmem_ALL_SUBDIRS"]=" mca/shmem/mmap mca/shmem/posix mca/shmem/sysv"
S["MCA_opal_shmem_STATIC_LTLIBS"]="mca/shmem/sysv/libmca_shmem_sysv.la mca/shmem/posix/libmca_shmem_posix.la mca/shmem/mmap/libmca_shmem_mmap.la "
S["MCA_opal_shmem_DSO_COMPONENTS"]=""
S["MCA_opal_shmem_STATIC_COMPONENTS"]=" mmap posix sysv"
S["MCA_opal_shmem_ALL_COMPONENTS"]=" mmap posix sysv"
S["MCA_BUILD_opal_shmem_sysv_DSO_FALSE"]=""
S["MCA_BUILD_opal_shmem_sysv_DSO_TRUE"]="#"
S["MCA_BUILD_opal_shmem_posix_DSO_FALSE"]=""
S["MCA_BUILD_opal_shmem_posix_DSO_TRUE"]="#"
S["MCA_BUILD_opal_shmem_mmap_DSO_FALSE"]=""
S["MCA_BUILD_opal_shmem_mmap_DSO_TRUE"]="#"
S["MCA_opal_reachable_DSO_SUBDIRS"]=""
S["MCA_opal_reachable_STATIC_SUBDIRS"]=" mca/reachable/weighted"
S["MCA_opal_reachable_ALL_SUBDIRS"]=" mca/reachable/weighted mca/reachable/netlink"
S["MCA_opal_reachable_STATIC_LTLIBS"]="mca/reachable/weighted/libmca_reachable_weighted.la "
S["MCA_opal_reachable_DSO_COMPONENTS"]=""
S["MCA_opal_reachable_STATIC_COMPONENTS"]=" weighted"
S["MCA_opal_reachable_ALL_COMPONENTS"]=" weighted netlink"
S["MCA_BUILD_opal_reachable_netlink_DSO_FALSE"]=""
S["MCA_BUILD_opal_reachable_netlink_DSO_TRUE"]="#"
S["reachable_netlink_LIBS"]=""
S["reachable_netlink_LDFLAGS"]=""
S["reachable_netlink_CPPFLAGS"]=""
S["MCA_BUILD_opal_reachable_weighted_DSO_FALSE"]=""
S["MCA_BUILD_opal_reachable_weighted_DSO_TRUE"]="#"
S["MCA_opal_rcache_DSO_SUBDIRS"]=""
S["MCA_opal_rcache_STATIC_SUBDIRS"]=" mca/rcache/grdma"
S["MCA_opal_rcache_ALL_SUBDIRS"]=" mca/rcache/grdma mca/rcache/gpusm mca/rcache/rgpusm mca/rcache/udreg"
S["MCA_opal_rcache_STATIC_LTLIBS"]="mca/rcache/grdma/libmca_rcache_grdma.la "
S["MCA_opal_rcache_DSO_COMPONENTS"]=""
S["MCA_opal_rcache_STATIC_COMPONENTS"]=" grdma"
S["MCA_opal_rcache_ALL_COMPONENTS"]=" grdma gpusm rgpusm udreg"
S["MCA_BUILD_opal_rcache_udreg_DSO_FALSE"]=""
S["MCA_BUILD_opal_rcache_udreg_DSO_TRUE"]="#"
S["rcache_udreg_LIBS"]=""
S["rcache_udreg_LDFLAGS"]=""
S["rcache_udreg_CPPFLAGS"]=""
S["CRAY_UDREG_LIBS"]=""
S["CRAY_UDREG_CFLAGS"]=""
S["MCA_BUILD_opal_rcache_rgpusm_DSO_FALSE"]="#"
S["MCA_BUILD_opal_rcache_rgpusm_DSO_TRUE"]=""
S["rcache_rgpusm_LIBS"]=""
S["rcache_rgpusm_LDFLAGS"]=""
S["rcache_rgpusm_CPPFLAGS"]=""
S["MCA_BUILD_opal_rcache_gpusm_DSO_FALSE"]="#"
S["MCA_BUILD_opal_rcache_gpusm_DSO_TRUE"]=""
S["rcache_gpusm_LIBS"]=""
S["rcache_gpusm_LDFLAGS"]=""
S["rcache_gpusm_CPPFLAGS"]=""
S["MCA_BUILD_opal_rcache_grdma_DSO_FALSE"]=""
S["MCA_BUILD_opal_rcache_grdma_DSO_TRUE"]="#"
S["MCA_opal_patcher_DSO_SUBDIRS"]=""
S["MCA_opal_patcher_STATIC_SUBDIRS"]=" mca/patcher/overwrite"
S["MCA_opal_patcher_ALL_SUBDIRS"]=" mca/patcher/overwrite"
S["MCA_opal_patcher_STATIC_LTLIBS"]="mca/patcher/overwrite/libmca_patcher_overwrite.la "
S["MCA_opal_patcher_DSO_COMPONENTS"]=""
S["MCA_opal_patcher_STATIC_COMPONENTS"]=" overwrite"
S["MCA_opal_patcher_ALL_COMPONENTS"]=" overwrite"
S["MCA_BUILD_opal_patcher_overwrite_DSO_FALSE"]=""
S["MCA_BUILD_opal_patcher_overwrite_DSO_TRUE"]="#"
S["MCA_opal_mpool_DSO_SUBDIRS"]=""
S["MCA_opal_mpool_STATIC_SUBDIRS"]=" mca/mpool/hugepage"
S["MCA_opal_mpool_ALL_SUBDIRS"]=" mca/mpool/hugepage mca/mpool/memkind"
S["MCA_opal_mpool_STATIC_LTLIBS"]="mca/mpool/hugepage/libmca_mpool_hugepage.la "
S["MCA_opal_mpool_DSO_COMPONENTS"]=""
S["MCA_opal_mpool_STATIC_COMPONENTS"]=" hugepage"
S["MCA_opal_mpool_ALL_COMPONENTS"]=" hugepage memkind"
S["MCA_BUILD_opal_mpool_memkind_DSO_FALSE"]=""
S["MCA_BUILD_opal_mpool_memkind_DSO_TRUE"]="#"
S["mpool_memkind_LIBS"]=""
S["mpool_memkind_LDFLAGS"]=""
S["mpool_memkind_CPPFLAGS"]=""
S["MCA_BUILD_opal_mpool_hugepage_DSO_FALSE"]=""
S["MCA_BUILD_opal_mpool_hugepage_DSO_TRUE"]="#"
S["MCA_opal_memory_DSO_SUBDIRS"]=""
S["MCA_opal_memory_STATIC_SUBDIRS"]=" mca/memory/patcher"
S["MCA_opal_memory_ALL_SUBDIRS"]=" mca/memory/patcher mca/memory/malloc_solaris"
S["MCA_opal_memory_STATIC_LTLIBS"]="mca/memory/patcher/libmca_memory_patcher.la "
S["MCA_opal_memory_DSO_COMPONENTS"]=""
S["MCA_opal_memory_STATIC_COMPONENTS"]=" patcher"
S["MCA_opal_memory_ALL_COMPONENTS"]=" patcher malloc_solaris"
S["MCA_BUILD_opal_memory_malloc_solaris_DSO_FALSE"]=""
S["MCA_BUILD_opal_memory_malloc_solaris_DSO_TRUE"]="#"
S["memory_malloc_solaris_LIBS"]=""
S["MCA_BUILD_opal_memory_patcher_DSO_FALSE"]=""
S["MCA_BUILD_opal_memory_patcher_DSO_TRUE"]="#"
S["MCA_opal_memcpy_DSO_SUBDIRS"]=""
S["MCA_opal_memcpy_STATIC_SUBDIRS"]=""
S["MCA_opal_memcpy_ALL_SUBDIRS"]=""
S["MCA_opal_memcpy_STATIC_LTLIBS"]=""
S["MCA_opal_memcpy_DSO_COMPONENTS"]=""
S["MCA_opal_memcpy_STATIC_COMPONENTS"]=""
S["MCA_opal_memcpy_ALL_COMPONENTS"]=""
S["MCA_opal_memchecker_DSO_SUBDIRS"]=""
S["MCA_opal_memchecker_STATIC_SUBDIRS"]=""
S["MCA_opal_memchecker_ALL_SUBDIRS"]=" mca/memchecker/valgrind"
S["MCA_opal_memchecker_STATIC_LTLIBS"]=""
S["MCA_opal_memchecker_DSO_COMPONENTS"]=""
S["MCA_opal_memchecker_STATIC_COMPONENTS"]=""
S["MCA_opal_memchecker_ALL_COMPONENTS"]=" valgrind"
S["MCA_BUILD_opal_memchecker_valgrind_DSO_FALSE"]=""
S["MCA_BUILD_opal_memchecker_valgrind_DSO_TRUE"]="#"
S["opal_memchecker_valgrind_CPPFLAGS"]=""
S["OPAL_WANT_MEMCHECKER_FALSE"]=""
S["OPAL_WANT_MEMCHECKER_TRUE"]="#"
S["MCA_opal_installdirs_DSO_SUBDIRS"]=""
S["MCA_opal_installdirs_STATIC_SUBDIRS"]=" mca/installdirs/env mca/installdirs/config"
S["MCA_opal_installdirs_ALL_SUBDIRS"]=" mca/installdirs/env mca/installdirs/config"
S["MCA_opal_installdirs_STATIC_LTLIBS"]="mca/installdirs/config/libmca_installdirs_config.la mca/installdirs/env/libmca_installdirs_env.la "
S["MCA_opal_installdirs_DSO_COMPONENTS"]=""
S["MCA_opal_installdirs_STATIC_COMPONENTS"]=" env config"
S["MCA_opal_installdirs_ALL_COMPONENTS"]=" env config"
S["MCA_BUILD_opal_installdirs_config_DSO_FALSE"]=""
S["MCA_BUILD_opal_installdirs_config_DSO_TRUE"]="#"
S["MCA_BUILD_opal_installdirs_env_DSO_FALSE"]=""
S["MCA_BUILD_opal_installdirs_env_DSO_TRUE"]="#"
S["MCA_opal_if_DSO_SUBDIRS"]=""
S["MCA_opal_if_STATIC_SUBDIRS"]=" mca/if/linux_ipv6 mca/if/posix_ipv4"
S["MCA_opal_if_ALL_SUBDIRS"]=" mca/if/bsdx_ipv4 mca/if/bsdx_ipv6 mca/if/linux_ipv6 mca/if/posix_ipv4 mca/if/solaris_ipv6"
S["MCA_opal_if_STATIC_LTLIBS"]="mca/if/posix_ipv4/libmca_if_posix_ipv4.la mca/if/linux_ipv6/libmca_if_linux_ipv6.la "
S["MCA_opal_if_DSO_COMPONENTS"]=""
S["MCA_opal_if_STATIC_COMPONENTS"]=" linux_ipv6 posix_ipv4"
S["MCA_opal_if_ALL_COMPONENTS"]=" bsdx_ipv4 bsdx_ipv6 linux_ipv6 posix_ipv4 solaris_ipv6"
S["MCA_BUILD_opal_if_solaris_ipv6_DSO_FALSE"]=""
S["MCA_BUILD_opal_if_solaris_ipv6_DSO_TRUE"]="#"
S["MCA_BUILD_opal_if_posix_ipv4_DSO_FALSE"]=""
S["MCA_BUILD_opal_if_posix_ipv4_DSO_TRUE"]="#"
S["MCA_BUILD_opal_if_linux_ipv6_DSO_FALSE"]=""
S["MCA_BUILD_opal_if_linux_ipv6_DSO_TRUE"]="#"
S["MCA_BUILD_opal_if_bsdx_ipv6_DSO_FALSE"]=""
S["MCA_BUILD_opal_if_bsdx_ipv6_DSO_TRUE"]="#"
S["MCA_BUILD_opal_if_bsdx_ipv4_DSO_FALSE"]=""
S["MCA_BUILD_opal_if_bsdx_ipv4_DSO_TRUE"]="#"
S["MCA_opal_dl_DSO_SUBDIRS"]=""
S["MCA_opal_dl_STATIC_SUBDIRS"]=" mca/dl/dlopen"
S["MCA_opal_dl_ALL_SUBDIRS"]=" mca/dl/dlopen mca/dl/libltdl"
S["MCA_opal_dl_STATIC_LTLIBS"]="mca/dl/dlopen/libmca_dl_dlopen.la "
S["MCA_opal_dl_DSO_COMPONENTS"]=""
S["MCA_opal_dl_STATIC_COMPONENTS"]=" dlopen"
S["MCA_opal_dl_ALL_COMPONENTS"]=" dlopen libltdl"
S["MCA_BUILD_opal_dl_libltdl_DSO_FALSE"]=""
S["MCA_BUILD_opal_dl_libltdl_DSO_TRUE"]="#"
S["dl_libltdl_LIBS"]=""
S["dl_libltdl_LDFLAGS"]=""
S["dl_libltdl_CPPFLAGS"]=""
S["MCA_BUILD_opal_dl_dlopen_DSO_FALSE"]=""
S["MCA_BUILD_opal_dl_dlopen_DSO_TRUE"]="#"
S["opal_dl_dlopen_LIBS"]="-ldl"
S["MCA_opal_btl_DSO_SUBDIRS"]=""
S["MCA_opal_btl_STATIC_SUBDIRS"]=" mca/btl/self mca/btl/sm mca/btl/tcp"
S["MCA_opal_btl_ALL_SUBDIRS"]=" mca/btl/self mca/btl/ofi mca/btl/portals4 mca/btl/sm mca/btl/smcuda mca/btl/tcp mca/btl/uct mca/btl/ugni mca/btl/usnic"
S["MCA_opal_btl_STATIC_LTLIBS"]="mca/btl/tcp/libmca_btl_tcp.la mca/btl/sm/libmca_btl_sm.la mca/btl/self/libmca_btl_self.la "
S["MCA_opal_btl_DSO_COMPONENTS"]=""
S["MCA_opal_btl_STATIC_COMPONENTS"]=" self sm tcp"
S["MCA_opal_btl_ALL_COMPONENTS"]=" self ofi portals4 sm smcuda tcp uct ugni usnic"
S["MCA_BUILD_opal_btl_usnic_DSO_FALSE"]=""
S["MCA_BUILD_opal_btl_usnic_DSO_TRUE"]="#"
S["OPAL_BTL_USNIC_BUILD_UNIT_TESTS_FALSE"]=""
S["OPAL_BTL_USNIC_BUILD_UNIT_TESTS_TRUE"]="#"
S["btl_usnic_LIBS"]=""
S["btl_usnic_LDFLAGS"]=""
S["btl_usnic_CPPFLAGS"]=""
S["MCA_BUILD_opal_btl_ugni_DSO_FALSE"]=""
S["MCA_BUILD_opal_btl_ugni_DSO_TRUE"]="#"
S["btl_ugni_LIBS"]=""
S["btl_ugni_LDFLAGS"]=""
S["btl_ugni_CPPFLAGS"]=""
S["CRAY_UGNI_LIBS"]=""
S["CRAY_UGNI_CFLAGS"]=""
S["PKG_CONFIG_LIBDIR"]=""
S["PKG_CONFIG_PATH"]=":/usr/lib64/pkgconfig:/usr/share/pkgconfig"
S["MCA_BUILD_opal_btl_uct_DSO_FALSE"]=""
S["MCA_BUILD_opal_btl_uct_DSO_TRUE"]="#"
S["btl_uct_LIBS"]=""
S["btl_uct_LDFLAGS"]=""
S["btl_uct_CPPFLAGS"]=""
S["MCA_BUILD_opal_btl_tcp_DSO_FALSE"]=""
S["MCA_BUILD_opal_btl_tcp_DSO_TRUE"]="#"
S["MCA_BUILD_opal_btl_smcuda_DSO_FALSE"]="#"
S["MCA_BUILD_opal_btl_smcuda_DSO_TRUE"]=""
S["btl_smcuda_LIBS"]=""
S["btl_smcuda_LDFLAGS"]=""
S["btl_smcuda_CPPFLAGS"]=""
S["MCA_BUILD_opal_btl_sm_DSO_FALSE"]=""
S["MCA_BUILD_opal_btl_sm_DSO_TRUE"]="#"
S["MCA_BUILD_opal_btl_portals4_DSO_FALSE"]=""
S["MCA_BUILD_opal_btl_portals4_DSO_TRUE"]="#"
S["btl_portals4_LIBS"]=""
S["btl_portals4_LDFLAGS"]=""
S["btl_portals4_CPPFLAGS"]=""
S["OPAL_BTL_PORTALS4_FLOW_CONTROL_FALSE"]="#"
S["OPAL_BTL_PORTALS4_FLOW_CONTROL_TRUE"]=""
S["MCA_BUILD_opal_btl_ofi_DSO_FALSE"]=""
S["MCA_BUILD_opal_btl_ofi_DSO_TRUE"]="#"
S["btl_ofi_LIBS"]=""
S["btl_ofi_LDFLAGS"]=""
S["btl_ofi_CPPFLAGS"]=""
S["MCA_BUILD_opal_btl_self_DSO_FALSE"]=""
S["MCA_BUILD_opal_btl_self_DSO_TRUE"]="#"
S["MCA_opal_backtrace_DSO_SUBDIRS"]=""
S["MCA_opal_backtrace_STATIC_SUBDIRS"]=" mca/backtrace/execinfo"
S["MCA_opal_backtrace_ALL_SUBDIRS"]=" mca/backtrace/execinfo mca/backtrace/printstack mca/backtrace/none"
S["MCA_opal_backtrace_STATIC_LTLIBS"]="mca/backtrace/execinfo/libmca_backtrace_execinfo.la "
S["MCA_opal_backtrace_DSO_COMPONENTS"]=""
S["MCA_opal_backtrace_STATIC_COMPONENTS"]=" execinfo"
S["MCA_opal_backtrace_ALL_COMPONENTS"]=" execinfo printstack none"
S["MCA_BUILD_opal_backtrace_none_DSO_FALSE"]=""
S["MCA_BUILD_opal_backtrace_none_DSO_TRUE"]="#"
S["MCA_BUILD_opal_backtrace_printstack_DSO_FALSE"]=""
S["MCA_BUILD_opal_backtrace_printstack_DSO_TRUE"]="#"
S["MCA_BUILD_opal_backtrace_execinfo_DSO_FALSE"]=""
S["MCA_BUILD_opal_backtrace_execinfo_DSO_TRUE"]="#"
S["MCA_opal_allocator_DSO_SUBDIRS"]=""
S["MCA_opal_allocator_STATIC_SUBDIRS"]=" mca/allocator/basic mca/allocator/bucket"
S["MCA_opal_allocator_ALL_SUBDIRS"]=" mca/allocator/basic mca/allocator/bucket"
S["MCA_opal_allocator_STATIC_LTLIBS"]="mca/allocator/bucket/libmca_allocator_bucket.la mca/allocator/basic/libmca_allocator_basic.la "
S["MCA_opal_allocator_DSO_COMPONENTS"]=""
S["MCA_opal_allocator_STATIC_COMPONENTS"]=" basic bucket"
S["MCA_opal_allocator_ALL_COMPONENTS"]=" basic bucket"
S["MCA_BUILD_opal_allocator_bucket_DSO_FALSE"]=""
S["MCA_BUILD_opal_allocator_bucket_DSO_TRUE"]="#"
S["MCA_BUILD_opal_allocator_basic_DSO_FALSE"]=""
S["MCA_BUILD_opal_allocator_basic_DSO_TRUE"]="#"
S["MCA_opal_accelerator_DSO_SUBDIRS"]=""
S["MCA_opal_accelerator_STATIC_SUBDIRS"]=" mca/accelerator/null"
S["MCA_opal_accelerator_ALL_SUBDIRS"]=" mca/accelerator/null mca/accelerator/cuda mca/accelerator/rocm"
S["MCA_opal_accelerator_STATIC_LTLIBS"]="mca/accelerator/null/libmca_accelerator_null.la "
S["MCA_opal_accelerator_DSO_COMPONENTS"]=""
S["MCA_opal_accelerator_STATIC_COMPONENTS"]=" null"
S["MCA_opal_accelerator_ALL_COMPONENTS"]=" null cuda rocm"
S["MCA_BUILD_opal_accelerator_rocm_DSO_FALSE"]="#"
S["MCA_BUILD_opal_accelerator_rocm_DSO_TRUE"]=""
S["opal_rocm_CPPFLAGS"]=""
S["opal_rocm_LIBS"]=""
S["opal_rocm_LDFLAGS"]=""
S["OPAL_rocm_support_FALSE"]=""
S["OPAL_rocm_support_TRUE"]="#"
S["MCA_BUILD_opal_accelerator_cuda_DSO_FALSE"]="#"
S["MCA_BUILD_opal_accelerator_cuda_DSO_TRUE"]=""
S["accelerator_cuda_LIBS"]=""
S["accelerator_cuda_LDFLAGS"]=""
S["accelerator_cuda_CPPFLAGS"]=""
S["OPAL_cuda_gdr_support_FALSE"]=""
S["OPAL_cuda_gdr_support_TRUE"]="#"
S["OPAL_cuda_get_attributes_FALSE"]=""
S["OPAL_cuda_get_attributes_TRUE"]="#"
S["OPAL_cuda_sync_memops_FALSE"]=""
S["OPAL_cuda_sync_memops_TRUE"]="#"
S["OPAL_cuda_support_FALSE"]=""
S["OPAL_cuda_support_TRUE"]="#"
S["common_cuda_CPPFLAGS"]=""
S["MCA_BUILD_opal_accelerator_null_DSO_FALSE"]=""
S["MCA_BUILD_opal_accelerator_null_DSO_TRUE"]="#"
S["MCA_opal_common_DSO_SUBDIRS"]=""
S["MCA_opal_common_STATIC_SUBDIRS"]=" mca/common/sm"
S["MCA_opal_common_ALL_SUBDIRS"]=" mca/common/ofi mca/common/sm mca/common/ucx"
S["MCA_opal_common_STATIC_LTLIBS"]="mca/common/sm/libopen-palmca_common_sm.la "
S["MCA_opal_common_DSO_COMPONENTS"]=""
S["MCA_opal_common_STATIC_COMPONENTS"]=" sm"
S["MCA_opal_common_ALL_COMPONENTS"]=" ofi sm ucx"
S["MCA_BUILD_opal_common_ucx_DSO_FALSE"]=""
S["MCA_BUILD_opal_common_ucx_DSO_TRUE"]="#"
S["common_ucx_LIBS"]=""
S["common_ucx_LDFLAGS"]=""
S["common_ucx_CPPFLAGS"]=""
S["MCA_BUILD_opal_common_sm_DSO_FALSE"]=""
S["MCA_BUILD_opal_common_sm_DSO_TRUE"]="#"
S["MCA_BUILD_opal_common_ofi_DSO_FALSE"]=""
S["MCA_BUILD_opal_common_ofi_DSO_TRUE"]="#"
S["common_ofi_LIBS"]=""
S["common_ofi_LDFLAGS"]=""
S["common_ofi_CPPFLAGS"]=""
S["WANT_FT_MPI_FALSE"]="#"
S["WANT_FT_MPI_TRUE"]=""
S["WANT_FT_FALSE"]="#"
S["WANT_FT_TRUE"]=""
S["OPAL_3RDPARTY_DISTCLEAN_DIRS"]="libevent-2.1.12-stable-ompi hwloc-2.7.1"
S["OPAL_3RDPARTY_EXTRA_DIST"]="libevent-2.1.12-stable-ompi.tar.gz hwloc-2.7.1.tar.gz"
S["OPAL_3RDPARTY_DIST_SUBDIRS"]=" prrte romio341 treematch"
S["OPAL_3RDPARTY_SUBDIRS"]=" prrte romio341 treematch"
S["OMPI_HAVE_PRRTE_RST_FALSE"]=""
S["OMPI_HAVE_PRRTE_RST_TRUE"]="#"
S["OMPI_SCHIZO_OMPI_RST_CONTENT_DIR"]=""
S["OMPI_PRRTE_RST_CONTENT_DIR"]=""
S["OMPI_WANT_PRRTE_FALSE"]="#"
S["OMPI_WANT_PRRTE_TRUE"]=""
S["BZIP2_BIN"]="/usr/bin/bzip2"
S["GZIP_BIN"]="/usr/bin/gzip"
S["PKG_CONFIG"]="/usr/bin/pkg-config"
S["CASE_SENSITIVE_FS_AND_HAVE_CXX_COMPILER_FALSE"]="#"
S["CASE_SENSITIVE_FS_AND_HAVE_CXX_COMPILER_TRUE"]=""
S["CASE_SENSITIVE_FS_FALSE"]="#"
S["CASE_SENSITIVE_FS_TRUE"]=""
S["OPAL_INSTALL_DOCS_FALSE"]="#"
S["OPAL_INSTALL_DOCS_TRUE"]=""
S["OPAL_BUILD_DOCS_FALSE"]=""
S["OPAL_BUILD_DOCS_TRUE"]="#"
S["SPHINX_BUILD"]=""
S["LEXLIB"]=""
S["LEX_OUTPUT_ROOT"]="lex.yy"
S["LEX"]="flex"
S["OMPI_MPI_OFFSET_KIND"]="8"
S["OMPI_MPI_COUNT_KIND"]="8"
S["OMPI_MPI_ADDRESS_KIND"]="8"
S["OMPI_MPI_INTEGER_KIND"]="4"
S["EGREP"]="/usr/bin/grep -E"
S["CPP"]="gcc -E"
S["WRAPPER_CC"]="gcc"
S["OSHMEM_BUILD_FORTRAN_BINDINGS_FALSE"]=""
S["OSHMEM_BUILD_FORTRAN_BINDINGS_TRUE"]="#"
S["MAN_PAGE_BUILD_USEMPIF08_BINDINGS_FALSE"]="#"
S["MAN_PAGE_BUILD_USEMPIF08_BINDINGS_TRUE"]=""
S["MAN_PAGE_BUILD_MPIFH_BINDINGS_FALSE"]="#"
S["MAN_PAGE_BUILD_MPIFH_BINDINGS_TRUE"]=""
S["OMPI_BUILD_ANY_FORTRAN_BINDINGS_FALSE"]="#"
S["OMPI_BUILD_ANY_FORTRAN_BINDINGS_TRUE"]=""
S["OMPI_BUILD_FORTRAN_USEMPIF08_BINDINGS_FALSE"]="#"
S["OMPI_BUILD_FORTRAN_USEMPIF08_BINDINGS_TRUE"]=""
S["OMPI_FORTRAN_HAVE_BIND_C"]="1"
S["OMPI_FORTRAN_HAVE_C_FUNLOC"]="1"
S["OMPI_FORTRAN_HAVE_USE_ONLY"]="1"
S["OMPI_FORTRAN_HAVE_PROCEDURE"]="1"
S["OMPI_FORTRAN_HAVE_ASYNCHRONOUS"]="1"
S["OMPI_FORTRAN_HAVE_ABSTRACT"]="1"
S["OMPI_FORTRAN_HAVE_ISO_C_BINDING"]="1"
S["OMPI_FORTRAN_NEED_WRAPPER_ROUTINES"]="1"
S["OMPI_F_SUFFIX"]="_f"
S["OMPI_F08_SUFFIX"]="_f08"
S["OMPI_MPI_BIND_PREFIX"]="mpi_"
S["OMPI_MPI_PREFIX"]="MPI_"
S["OMPI_FORTRAN_F08_TYPE"]="type(*), dimension(..)"
S["OMPI_FORTRAN_F08_PREDECL"]="!"
S["OMPI_FORTRAN_USEMPIF08_LIB"]="-lmpi_usempif08"
S["OMPI_FORTRAN_HAVE_PRIVATE"]="1"
S["OMPI_BUILD_FORTRAN_USEMPI_IGNORE_TKR_BINDINGS_FALSE"]="#"
S["OMPI_BUILD_FORTRAN_USEMPI_IGNORE_TKR_BINDINGS_TRUE"]=""
S["OMPI_BUILD_FORTRAN_USEMPI_TKR_BINDINGS_FALSE"]=""
S["OMPI_BUILD_FORTRAN_USEMPI_TKR_BINDINGS_TRUE"]="#"
S["OMPI_BUILD_FORTRAN_USEMPI_BINDINGS_FALSE"]="#"
S["OMPI_BUILD_FORTRAN_USEMPI_BINDINGS_TRUE"]=""
S["OMPI_FORTRAN_IGNORE_TKR_TYPE"]="type(*), dimension(*)"
S["OMPI_FORTRAN_IGNORE_TKR_PREDECL"]="!GCC$ ATTRIBUTES NO_ARG_CHECK ::"
S["OMPI_FORTRAN_USEMPI_LIB"]="-lmpi_usempi_ignore_tkr"
S["OMPI_FORTRAN_USEMPI_DIR"]="mpi/fortran/use-mpi-ignore-tkr"
S["OMPI_BUILD_FORTRAN_MPIFH_BINDINGS_FALSE"]="#"
S["OMPI_BUILD_FORTRAN_MPIFH_BINDINGS_TRUE"]=""
S["BUILD_PMPI_FORTRAN_MPIFH_BINDINGS_LAYER_FALSE"]="#"
S["BUILD_PMPI_FORTRAN_MPIFH_BINDINGS_LAYER_TRUE"]=""
S["BUILD_MPI_FORTRAN_MPIFH_BINDINGS_LAYER_FALSE"]=""
S["BUILD_MPI_FORTRAN_MPIFH_BINDINGS_LAYER_TRUE"]="#"
S["BUILD_FORTRAN_SIZEOF_FALSE"]="#"
S["BUILD_FORTRAN_SIZEOF_TRUE"]=""
S["OMPI_FORTRAN_MPIFH_LINK"]="-lmpi_mpifh"
S["OMPI_FC_ABSOLUTE"]="/usr/bin/gfortran"
S["OMPI_FC"]="gfortran"
S["OMPI_FORTRAN_ELEMENTAL_TYPE"]="ELEMENTAL"
S["OMPI_FORTRAN_HAVE_TYPE_MPI_STATUS_FALSE"]="#"
S["OMPI_FORTRAN_HAVE_TYPE_MPI_STATUS_TRUE"]=""
S["OMPI_FORTRAN_HAVE_TYPE_MPI_STATUS"]="1"
S["OMPI_FC_MODULE_FLAG"]="-I"
S["OMPI_FORTRAN_BUILD_SIZEOF"]="1"
S["OMPI_FORTRAN_HAVE_STORAGE_SIZE"]="1"
S["OMPI_FORTRAN_HAVE_ISO_FORTRAN_ENV_REAL16"]="0"
S["OMPI_FORTRAN_HAVE_ISO_FORTRAN_ENV"]="1"
S["OMPI_FORTRAN_HAVE_INTERFACE"]="1"
S["OMPI_FORTRAN_HAVE_ATTR_DEPRECATED"]="0"
S["OMPI_FORTRAN_CKINDS"]=""
S["OMPI_FORTRAN_RKINDS"]=""
S["OMPI_FORTRAN_IKINDS"]=""
S["OMPI_FORTRAN_STATUS_SIZE"]="6"
S["OMPI_FORTRAN_MAX_ARRAY_RANK"]="15"
S["OMPI_ALIGNMENT_FORTRAN_DOUBLE_COMPLEX"]="8"
S["OMPI_SIZEOF_FORTRAN_DOUBLE_COMPLEX"]="16"
S["OMPI_KIND_FORTRAN_DOUBLE_COMPLEX"]="C_DOUBLE_COMPLEX"
S["OMPI_HAVE_FORTRAN_DOUBLE_COMPLEX"]="1"
S["OMPI_ALIGNMENT_FORTRAN_COMPLEX32"]="16"
S["OMPI_SIZEOF_FORTRAN_COMPLEX32"]="32"
S["OMPI_KIND_FORTRAN_COMPLEX32"]="C_LONG_DOUBLE_COMPLEX"
S["OMPI_HAVE_FORTRAN_COMPLEX32"]="1"
S["OMPI_ALIGNMENT_FORTRAN_COMPLEX16"]="8"
S["OMPI_SIZEOF_FORTRAN_COMPLEX16"]="16"
S["OMPI_KIND_FORTRAN_COMPLEX16"]="C_DOUBLE_COMPLEX"
S["OMPI_HAVE_FORTRAN_COMPLEX16"]="1"
S["OMPI_ALIGNMENT_FORTRAN_COMPLEX8"]="4"
S["OMPI_SIZEOF_FORTRAN_COMPLEX8"]="8"
S["OMPI_KIND_FORTRAN_COMPLEX8"]="C_FLOAT_COMPLEX"
S["OMPI_HAVE_FORTRAN_COMPLEX8"]="1"
S["OMPI_ALIGNMENT_FORTRAN_COMPLEX4"]="0"
S["OMPI_SIZEOF_FORTRAN_COMPLEX4"]="0"
S["OMPI_KIND_FORTRAN_COMPLEX4"]="0"
S["OMPI_HAVE_FORTRAN_COMPLEX4"]="0"
S["OMPI_ALIGNMENT_FORTRAN_COMPLEX"]="4"
S["OMPI_SIZEOF_FORTRAN_COMPLEX"]="8"
S["OMPI_KIND_FORTRAN_COMPLEX"]="C_FLOAT_COMPLEX"
S["OMPI_HAVE_FORTRAN_COMPLEX"]="1"
S["OMPI_ALIGNMENT_FORTRAN_DOUBLE_PRECISION"]="8"
S["OMPI_SIZEOF_FORTRAN_DOUBLE_PRECISION"]="8"
S["OMPI_KIND_FORTRAN_DOUBLE_PRECISION"]="C_DOUBLE"
S["OMPI_HAVE_FORTRAN_DOUBLE_PRECISION"]="1"
S["OMPI_ALIGNMENT_FORTRAN_REAL16"]="16"
S["OMPI_SIZEOF_FORTRAN_REAL16"]="16"
S["OMPI_KIND_FORTRAN_REAL16"]="C_LONG_DOUBLE"
S["OMPI_HAVE_FORTRAN_REAL16"]="1"
S["OMPI_ALIGNMENT_FORTRAN_REAL8"]="8"
S["OMPI_SIZEOF_FORTRAN_REAL8"]="8"
S["OMPI_KIND_FORTRAN_REAL8"]="C_DOUBLE"
S["OMPI_HAVE_FORTRAN_REAL8"]="1"
S["OMPI_ALIGNMENT_FORTRAN_REAL4"]="4"
S["OMPI_SIZEOF_FORTRAN_REAL4"]="4"
S["OMPI_KIND_FORTRAN_REAL4"]="C_FLOAT"
S["OMPI_HAVE_FORTRAN_REAL4"]="1"
S["OMPI_ALIGNMENT_FORTRAN_REAL2"]="0"
S["OMPI_SIZEOF_FORTRAN_REAL2"]="0"
S["OMPI_KIND_FORTRAN_REAL2"]="0"
S["OMPI_HAVE_FORTRAN_REAL2"]="0"
S["OMPI_ALIGNMENT_FORTRAN_REAL"]="4"
S["OMPI_SIZEOF_FORTRAN_REAL"]="4"
S["OMPI_KIND_FORTRAN_REAL"]="C_FLOAT"
S["OMPI_HAVE_FORTRAN_REAL"]="1"
S["OMPI_ALIGNMENT_FORTRAN_INTEGER16"]="0"
S["OMPI_SIZEOF_FORTRAN_INTEGER16"]="16"
S["OMPI_KIND_FORTRAN_INTEGER16"]="0"
S["OMPI_HAVE_FORTRAN_INTEGER16"]="0"
S["OMPI_ALIGNMENT_FORTRAN_INTEGER8"]="8"
S["OMPI_SIZEOF_FORTRAN_INTEGER8"]="8"
S["OMPI_KIND_FORTRAN_INTEGER8"]="C_LONG_LONG"
S["OMPI_HAVE_FORTRAN_INTEGER8"]="1"
S["OMPI_ALIGNMENT_FORTRAN_INTEGER4"]="4"
S["OMPI_SIZEOF_FORTRAN_INTEGER4"]="4"
S["OMPI_KIND_FORTRAN_INTEGER4"]="C_INT"
S["OMPI_HAVE_FORTRAN_INTEGER4"]="1"
S["OMPI_ALIGNMENT_FORTRAN_INTEGER2"]="2"
S["OMPI_SIZEOF_FORTRAN_INTEGER2"]="2"
S["OMPI_KIND_FORTRAN_INTEGER2"]="C_SHORT"
S["OMPI_HAVE_FORTRAN_INTEGER2"]="1"
S["OMPI_ALIGNMENT_FORTRAN_INTEGER1"]="1"
S["OMPI_SIZEOF_FORTRAN_INTEGER1"]="1"
S["OMPI_KIND_FORTRAN_INTEGER1"]="C_SIGNED_CHAR"
S["OMPI_HAVE_FORTRAN_INTEGER1"]="1"
S["OMPI_ALIGNMENT_FORTRAN_INTEGER"]="4"
S["OMPI_SIZEOF_FORTRAN_INTEGER"]="4"
S["OMPI_KIND_FORTRAN_INTEGER"]="C_INT"
S["OMPI_HAVE_FORTRAN_INTEGER"]="1"
S["OMPI_ALIGNMENT_FORTRAN_LOGICAL8"]="8"
S["OMPI_SIZEOF_FORTRAN_LOGICAL8"]="8"
S["OMPI_KIND_FORTRAN_LOGICAL8"]="C_LONG_LONG"
S["OMPI_HAVE_FORTRAN_LOGICAL8"]="1"
S["OMPI_ALIGNMENT_FORTRAN_LOGICAL4"]="4"
S["OMPI_SIZEOF_FORTRAN_LOGICAL4"]="4"
S["OMPI_KIND_FORTRAN_LOGICAL4"]="C_INT"
S["OMPI_HAVE_FORTRAN_LOGICAL4"]="1"
S["OMPI_ALIGNMENT_FORTRAN_LOGICAL2"]="2"
S["OMPI_SIZEOF_FORTRAN_LOGICAL2"]="2"
S["OMPI_KIND_FORTRAN_LOGICAL2"]="C_SHORT"
S["OMPI_HAVE_FORTRAN_LOGICAL2"]="1"
S["OMPI_ALIGNMENT_FORTRAN_LOGICAL1"]="1"
S["OMPI_SIZEOF_FORTRAN_LOGICAL1"]="1"
S["OMPI_KIND_FORTRAN_LOGICAL1"]="C_SIGNED_CHAR"
S["OMPI_HAVE_FORTRAN_LOGICAL1"]="1"
S["OMPI_ALIGNMENT_FORTRAN_LOGICAL"]="4"
S["OMPI_SIZEOF_FORTRAN_LOGICAL"]="4"
S["OMPI_KIND_FORTRAN_LOGICAL"]="C_INT"
S["OMPI_HAVE_FORTRAN_LOGICAL"]="1"
S["OMPI_ALIGNMENT_FORTRAN_CHARACTER"]="1"
S["OMPI_SIZEOF_FORTRAN_CHARACTER"]="1"
S["OMPI_KIND_FORTRAN_CHARACTER"]="C_SIGNED_CHAR"
S["OMPI_HAVE_FORTRAN_CHARACTER"]="1"
S["OMPI_FORTRAN_PLAIN"]="0"
S["OMPI_FORTRAN_CAPS"]="0"
S["OMPI_FORTRAN_SINGLE_UNDERSCORE"]="1"
S["OMPI_FORTRAN_DOUBLE_UNDERSCORE"]="0"
S["OMPI_HAVE_FORTRAN_COMPILER_FALSE"]="#"
S["OMPI_HAVE_FORTRAN_COMPILER_TRUE"]=""
S["NM"]="/usr/bin/nm -B"
S["ac_ct_DUMPBIN"]=""
S["DUMPBIN"]=""
S["FCFLAGS_f90"]=""
S["FCFLAGS_f"]=""
S["OMPI_FORTRAN_EXTRA_SHARED_LIBRARY_FLAGS"]=""
S["ac_ct_FC"]="gfortran"
S["FCFLAGS"]=""
S["FC"]="gfortran"
S["LN_S"]="ln -s"
S["am__fastdepCCAS_FALSE"]="#"
S["am__fastdepCCAS_TRUE"]=""
S["CCASDEPMODE"]="depmode=gcc3"
S["CCASFLAGS"]="-O3 -DNDEBUG  -finline-functions"
S["CCAS"]="gcc"
S["OSHMEM_PROFILING_FALSE"]="#"
S["OSHMEM_PROFILING_TRUE"]=""
S["COMPILE_PROFILING_SEPARATELY_FALSE"]=""
S["COMPILE_PROFILING_SEPARATELY_TRUE"]="#"
S["BUILD_MPI_BINDINGS_LAYER_FALSE"]=""
S["BUILD_MPI_BINDINGS_LAYER_TRUE"]="#"
S["OMPI_WANT_JAVA_BINDINGS_FALSE"]=""
S["OMPI_WANT_JAVA_BINDINGS_TRUE"]="#"
S["OMPI_HAVE_JAVAH_SUPPORT_FALSE"]=""
S["OMPI_HAVE_JAVAH_SUPPORT_TRUE"]="#"
S["OMPI_JDK_CPPFLAGS"]=""
S["JAVAH"]=""
S["JAVADOC"]=""
S["JAR"]=""
S["JAVAC"]=""
S["OMPI_HAVE_CXX_COMPILER_FALSE"]="#"
S["OMPI_HAVE_CXX_COMPILER_TRUE"]=""
S["OMPI_CXX_ABSOLUTE"]="/usr/bin/g++"
S["CXXCPP"]="g++ -E"
S["am__fastdepCXX_FALSE"]="#"
S["am__fastdepCXX_TRUE"]=""
S["CXXDEPMODE"]="depmode=gcc3"
S["ac_ct_CXX"]="g++"
S["CXXFLAGS"]="-DNDEBUG "
S["CXX"]="g++"
S["GREP"]="/usr/bin/grep"
S["OPAL_CC_ABSOLUTE"]="/usr/bin/gcc"
S["am__fastdepCC_FALSE"]="#"
S["am__fastdepCC_TRUE"]=""
S["CCDEPMODE"]="depmode=gcc3"
S["am__nodep"]="_no"
S["AMDEPBACKSLASH"]="\\"
S["AMDEP_FALSE"]="#"
S["AMDEP_TRUE"]=""
S["am__include"]="include"
S["DEPDIR"]=".deps"
S["OBJEXT"]="o"
S["EXEEXT"]=""
S["ac_ct_CC"]="gcc"
S["CPPFLAGS"]="-iquote$(top_srcdir)  -I/opt/libevent/2.1.12/include -I/opt/hwloc/2.10.0/include -I/opt/pmix/4.2.9/include -I/opt/pmix/4.2.9/include/pmix -I/opt/lib"\
"event/release/include -I/opt/hwloc/2.10.0/include -pthread"
S["LDFLAGS"]="-L/opt/libevent/2.1.12/lib -L/opt/hwloc/2.10.0/lib -L/opt/pmix/4.2.9/lib -Wl,-rpath -Wl,/opt/pmix/4.2.9/lib -Wl,--enable-new-dtags"
S["CFLAGS"]="-O3 -DNDEBUG  -finline-functions -mcx16"
S["CC"]="gcc"
S["OSHMEM_LIBSHMEM_EXTRA_LDFLAGS"]=""
S["OSHMEM_LIBSHMEM_EXTRA_LIBS"]=""
S["OMPI_LIBMPI_NAME"]="mpi"
S["OPAL_LIB_NAME"]="open-pal"
S["SPC_ENABLE_FALSE"]=""
S["SPC_ENABLE_TRUE"]="#"
S["OMPI_OMPIO_SUPPORT_FALSE"]="#"
S["OMPI_OMPIO_SUPPORT_TRUE"]=""
S["OMPI_ENABLE_GREQUEST_EXTENSIONS_FALSE"]=""
S["OMPI_ENABLE_GREQUEST_EXTENSIONS_TRUE"]="#"
S["OMPI_ENABLE_GREQUEST_EXTENSIONS"]="0"
S["OMPI_ENABLE_MPI1_COMPAT_FALSE"]=""
S["OMPI_ENABLE_MPI1_COMPAT_TRUE"]="#"
S["OMPI_ENABLE_MPI1_COMPAT"]="0"
S["OMPI_FORTRAN_MODULEDIR"]="${exec_prefix}/lib"
S["WANT_PERUSE_FALSE"]=""
S["WANT_PERUSE_TRUE"]="#"
S["OPAL_MAX_STRINGTAG_LEN"]="1024"
S["OPAL_MAX_PSET_NAME_LEN"]="512"
S["OPAL_MAX_DATAREP_STRING"]="128"
S["OPAL_MAX_PORT_NAME"]="1024"
S["OPAL_MAX_INFO_VAL"]="256"
S["OPAL_MAX_INFO_KEY"]="36"
S["OPAL_MAX_OBJECT_NAME"]="64"
S["OPAL_MAX_ERROR_STRING"]="256"
S["OPAL_MAX_PROCESSOR_NAME"]="256"
S["OPAL_WANT_SCRIPT_WRAPPER_COMPILERS_FALSE"]=""
S["OPAL_WANT_SCRIPT_WRAPPER_COMPILERS_TRUE"]="#"
S["OPAL_INSTALL_BINARIES_FALSE"]="#"
S["OPAL_INSTALL_BINARIES_TRUE"]=""
S["WANT_INSTALL_HEADERS_FALSE"]=""
S["WANT_INSTALL_HEADERS_TRUE"]="#"
S["OPAL_INSTALL_TIMING_BINARIES_FALSE"]=""
S["OPAL_INSTALL_TIMING_BINARIES_TRUE"]="#"
S["OPAL_COMPILE_TIMING_FALSE"]=""
S["OPAL_COMPILE_TIMING_TRUE"]="#"
S["OSHMEM_TOP_BUILDDIR"]="/root/rpmbuild/BUILD/openmpi-5.0.5"
S["OSHMEM_TOP_SRCDIR"]="/root/rpmbuild/BUILD/openmpi-5.0.5"
S["OPAL_TOP_BUILDDIR"]="/root/rpmbuild/BUILD/openmpi-5.0.5"
S["OPAL_TOP_SRCDIR"]="/root/rpmbuild/BUILD/openmpi-5.0.5"
S["ac_prefix_program"]=""
S["CLEANFILES"]="*~ .\\#*"
S["OMPI_TOP_SRCDIR"]="/root/rpmbuild/BUILD/openmpi-5.0.5"
S["OMPI_TOP_BUILDDIR"]="/root/rpmbuild/BUILD/openmpi-5.0.5"
S["libmca_opal_common_ucx_so_version"]="80:1:0"
S["libmca_ompi_common_monitoring_so_version"]="80:0:0"
S["libmca_ompi_common_ompio_so_version"]="80:1:0"
S["libmca_opal_common_ugni_so_version"]="80:0:0"
S["libmca_opal_common_sm_so_version"]="80:1:0"
S["libmca_opal_common_cuda_so_version"]="80:0:0"
S["libmca_opal_common_ofi_so_version"]="80:3:0"
S["libopen_pal_so_version"]="80:4:0"
S["liboshmem_so_version"]="80:3:40"
S["libompitrace_so_version"]="80:0:40"
S["libmpi_java_so_version"]="80:0:40"
S["libmpi_usempif08_so_version"]="80:2:40"
S["libmpi_usempi_ignore_tkr_so_version"]="80:0:40"
S["libmpi_usempi_tkr_so_version"]="80:0:40"
S["libmpi_mpifh_so_version"]="80:0:40"
S["libmpi_so_version"]="80:5:40"
S["OPAL_RELEASE_DATE"]="Jul 22, 2024"
S["OPAL_VERSION"]="5.0.5"
S["OPAL_TARBALL_VERSION"]="5.0.5"
S["OPAL_REPO_REV"]="v5.0.5"
S["OPAL_GREEK_VERSION"]=""
S["OPAL_RELEASE_VERSION"]="5"
S["OPAL_MINOR_VERSION"]="0"
S["OPAL_MAJOR_VERSION"]="5"
S["OSHMEM_RELEASE_DATE"]="Jul 22, 2024"
S["OSHMEM_VERSION"]="5.0.5"
S["OSHMEM_TARBALL_VERSION"]="5.0.5"
S["OSHMEM_REPO_REV"]="v5.0.5"
S["OSHMEM_GREEK_VERSION"]=""
S["OSHMEM_RELEASE_VERSION"]="5"
S["OSHMEM_MINOR_VERSION"]="0"
S["OSHMEM_MAJOR_VERSION"]="5"
S["MPI_SUBVERSION"]="1"
S["MPI_VERSION"]="3"
S["OMPI_RELEASE_DATE"]="Jul 22, 2024"
S["OMPI_VERSION"]="5.0.5"
S["OMPI_TARBALL_VERSION"]="5.0.5"
S["OMPI_REPO_REV"]="v5.0.5"
S["OMPI_GREEK_VERSION"]=""
S["OMPI_RELEASE_VERSION"]="5"
S["OMPI_MINOR_VERSION"]="0"
S["OMPI_MAJOR_VERSION"]="5"
S["CONFIGURE_DEPENDENCIES"]="$(top_srcdir)/VERSION"
S["AM_BACKSLASH"]="\\"
S["AM_DEFAULT_VERBOSITY"]="0"
S["AM_DEFAULT_V"]="$(AM_DEFAULT_VERBOSITY)"
S["AM_V"]="$(V)"
S["CSCOPE"]="cscope"
S["ETAGS"]="etags"
S["CTAGS"]="ctags"
S["am__untar"]="tar -xf -"
S["am__tar"]="tar --format=posix -chf - \"$$tardir\""
S["AMTAR"]="$${TAR-tar}"
S["am__leading_dot"]="."
S["SET_MAKE"]=""
S["AWK"]="gawk"
S["mkdir_p"]="$(MKDIR_P)"
S["MKDIR_P"]="/usr/bin/mkdir -p"
S["INSTALL_STRIP_PROGRAM"]="$(install_sh) -c -s"
S["STRIP"]="strip"
S["install_sh"]="${SHELL} /root/rpmbuild/BUILD/openmpi-5.0.5/config/install-sh"
S["MAKEINFO"]="${SHELL} '/root/rpmbuild/BUILD/openmpi-5.0.5/config/missing' makeinfo"
S["AUTOHEADER"]="${SHELL} '/root/rpmbuild/BUILD/openmpi-5.0.5/config/missing' autoheader"
S["AUTOMAKE"]="${SHELL} '/root/rpmbuild/BUILD/openmpi-5.0.5/config/missing' automake-1.16"
S["AUTOCONF"]="${SHELL} '/root/rpmbuild/BUILD/openmpi-5.0.5/config/missing' autoconf"
S["ACLOCAL"]="${SHELL} '/root/rpmbuild/BUILD/openmpi-5.0.5/config/missing' aclocal-1.16"
S["VERSION"]="5.0.5"
S["PACKAGE"]="openmpi"
S["CYGPATH_W"]="echo"
S["am__isrc"]=""
S["INSTALL_DATA"]="${INSTALL} -m 644"
S["INSTALL_SCRIPT"]="${INSTALL}"
S["INSTALL_PROGRAM"]="${INSTALL}"
S["target_os"]="linux-gnu"
S["target_vendor"]="pc"
S["target_cpu"]="x86_64"
S["target"]="x86_64-pc-linux-gnu"
S["host_os"]="linux-gnu"
S["host_vendor"]="pc"
S["host_cpu"]="x86_64"
S["host"]="x86_64-pc-linux-gnu"
S["build_os"]="linux-gnu"
S["build_vendor"]="pc"
S["build_cpu"]="x86_64"
S["build"]="x86_64-pc-linux-gnu"
S["PERL"]="/usr/bin/perl"
S["SED"]="/usr/bin/sed"
S["OPAL_CONFIGURE_DATE"]="Sun Sep  1 13:45:22 UTC 2024"
S["OPAL_CONFIGURE_HOST"]="master01"
S["OPAL_CONFIGURE_USER"]="root"
S["OPAL_PARAM_FROM_PLATFORM"]=""
S["OPAL_DEFAULT_MCA_PARAM_CONF"]="openmpi-mca-params.conf"
S["OPAL_CONFIGURE_CLI"]=" \\'--prefix=/usr/openmpi-5.0.5\\' \\'--with-libevent=/opt/libevent/release\\' \\'--with-hwloc=/opt/hwloc/release\\' \\'--with-pmix=/opt/pmix/release\\' \\'-"\
"-with-slurm\\'"
S["target_alias"]=""
S["host_alias"]=""
S["build_alias"]=""
S["LIBS"]="-lpthread -lrt -lm -lutil -levent_core -levent_pthreads -lhwloc -lpmix"
S["ECHO_T"]=""
S["ECHO_N"]="-n"
S["ECHO_C"]=""
S["DEFS"]="-DHAVE_CONFIG_H"
S["mandir"]="${datarootdir}/man"
S["localedir"]="${datarootdir}/locale"
S["libdir"]="${exec_prefix}/lib"
S["psdir"]="${docdir}"
S["pdfdir"]="${docdir}"
S["dvidir"]="${docdir}"
S["htmldir"]="${docdir}"
S["infodir"]="${datarootdir}/info"
S["docdir"]="${datarootdir}/doc/${PACKAGE_TARNAME}"
S["oldincludedir"]="/usr/include"
S["includedir"]="${prefix}/include"
S["runstatedir"]="${localstatedir}/run"
S["localstatedir"]="${prefix}/var"
S["sharedstatedir"]="${prefix}/com"
S["sysconfdir"]="${prefix}/etc"
S["datadir"]="${datarootdir}"
S["datarootdir"]="${prefix}/share"
S["libexecdir"]="${exec_prefix}/libexec"
S["sbindir"]="${exec_prefix}/sbin"
S["bindir"]="${exec_prefix}/bin"
S["program_transform_name"]="s,x,x,"
S["prefix"]="/usr/openmpi-5.0.5"
S["exec_prefix"]="${prefix}"
S["PACKAGE_URL"]=""
S["PACKAGE_BUGREPORT"]="https://www.open-mpi.org/community/help/"
S["PACKAGE_STRING"]="Open MPI 5.0.5"
S["PACKAGE_VERSION"]="5.0.5"
S["PACKAGE_TARNAME"]="openmpi"
S["PACKAGE_NAME"]="Open MPI"
S["PATH_SEPARATOR"]=":"
S["SHELL"]="/bin/sh"
S["am__quote"]=""
_ACAWK
cat >>"$ac_tmp/subs1.awk" <<_ACAWK &&
  for (key in S) S_is_set[key] = 1
  FS = ""

}
{
  line = $ 0
  nfields = split(line, field, "@")
  substed = 0
  len = length(field[1])
  for (i = 2; i < nfields; i++) {
    key = field[i]
    keylen = length(key)
    if (S_is_set[key]) {
      value = S[key]
      line = substr(line, 1, len) "" value "" substr(line, len + keylen + 3)
      len += length(value) + length(field[++i])
      substed = 1
    } else
      len += 1 + keylen
  }

  print line
}

_ACAWK
if sed "s/$ac_cr//" < /dev/null > /dev/null 2>&1; then
  sed "s/$ac_cr\$//; s/$ac_cr/$ac_cs_awk_cr/g"
else
  cat
fi < "$ac_tmp/subs1.awk" > "$ac_tmp/subs.awk" \
  || as_fn_error $? "could not setup config files machinery" "$LINENO" 5
fi # test -n "$CONFIG_FILES"

# Set up the scripts for CONFIG_HEADERS section.
# No need to generate them if there are no CONFIG_HEADERS.
# This happens for instance with `./config.status Makefile'.
if test -n "$CONFIG_HEADERS"; then
cat >"$ac_tmp/defines.awk" <<\_ACAWK ||
BEGIN {
D["PACKAGE_NAME"]=" \"Open MPI\""
D["PACKAGE_TARNAME"]=" \"openmpi\""
D["PACKAGE_VERSION"]=" \"5.0.5\""
D["PACKAGE_STRING"]=" \"Open MPI 5.0.5\""
D["PACKAGE_BUGREPORT"]=" \"https://www.open-mpi.org/community/help/\""
D["PACKAGE_URL"]=" \"\""
D["OPAL_ARCH"]=" \"x86_64-pc-linux-gnu\""
D["OMPI_MAJOR_VERSION"]=" 5"
D["OMPI_MINOR_VERSION"]=" 0"
D["OMPI_RELEASE_VERSION"]=" 5"
D["OMPI_GREEK_VERSION"]=" \"\""
D["OMPI_REPO_REV"]=" \"v5.0.5\""
D["OMPI_TARBALL_VERSION"]=" \"5.0.5\""
D["OMPI_VERSION"]=" \"5.0.5\""
D["OMPI_RELEASE_DATE"]=" \"Jul 22, 2024\""
D["MPI_VERSION"]=" 3"
D["MPI_SUBVERSION"]=" 1"
D["OSHMEM_MAJOR_VERSION"]=" 5"
D["OSHMEM_MINOR_VERSION"]=" 0"
D["OSHMEM_RELEASE_VERSION"]=" 5"
D["OSHMEM_GREEK_VERSION"]=" \"\""
D["OSHMEM_REPO_REV"]=" \"v5.0.5\""
D["OSHMEM_TARBALL_VERSION"]=" \"5.0.5\""
D["OSHMEM_VERSION"]=" \"5.0.5\""
D["OSHMEM_RELEASE_DATE"]=" \"Jul 22, 2024\""
D["OPAL_MAJOR_VERSION"]=" 5"
D["OPAL_MINOR_VERSION"]=" 0"
D["OPAL_RELEASE_VERSION"]=" 5"
D["OPAL_GREEK_VERSION"]=" \"\""
D["OPAL_REPO_REV"]=" \"v5.0.5\""
D["OPAL_TARBALL_VERSION"]=" \"5.0.5\""
D["OPAL_VERSION"]=" \"5.0.5\""
D["OPAL_RELEASE_DATE"]=" \"Jul 22, 2024\""
D["OPAL_ENABLE_MEM_DEBUG"]=" 0"
D["OPAL_ENABLE_MEM_PROFILE"]=" 0"
D["OPAL_ENABLE_TIMING"]=" 0"
D["OPAL_ENABLE_DEBUG"]=" 0"
D["OPAL_WANT_PRETTY_PRINT_STACKTRACE"]=" 1"
D["OPAL_ENABLE_PTY_SUPPORT"]=" 1"
D["OPAL_SHOW_LOAD_ERRORS_DEFAULT"]=" \"all\""
D["OPAL_ENABLE_HETEROGENEOUS_SUPPORT"]=" 0"
D["OPAL_WANT_HOME_CONFIG_FILES"]=" 1"
D["OPAL_ENABLE_IPV6"]=" 0"
D["OPAL_PACKAGE_STRING"]=" \"Open MPI root@master01 Distribution\""
D["OPAL_IDENT_STRING"]=" \"5.0.5\""
D["OPAL_MAX_PROCESSOR_NAME"]=" 256"
D["OPAL_MAX_ERROR_STRING"]=" 256"
D["OPAL_MAX_OBJECT_NAME"]=" 64"
D["OPAL_MAX_INFO_KEY"]=" 36"
D["OPAL_MAX_INFO_VAL"]=" 256"
D["OPAL_MAX_PORT_NAME"]=" 1024"
D["OPAL_MAX_DATAREP_STRING"]=" 128"
D["OPAL_MAX_PSET_NAME_LEN"]=" 512"
D["OPAL_MAX_STRINGTAG_LEN"]=" 1024"
D["OPAL_ENABLE_GETPWUID"]=" 1"
D["OPAL_ENABLE_PROGRESS_THREADS"]=" 0"
D["OMPI_WANT_MPI_INTERFACE_WARNING"]=" 1"
D["OMPI_GROUP_SPARSE"]=" 0"
D["OMPI_WANT_PERUSE"]=" 0"
D["OMPI_ENABLE_MPI1_COMPAT"]=" 0"
D["OMPI_ENABLE_GREQUEST_EXTENSIONS"]=" 0"
D["MPI_PARAM_CHECK"]=" ompi_mpi_param_check"
D["OMPI_PARAM_CHECK"]=" 1"
D["SPC_ENABLE"]=" 0"
D["OSHMEM_SPEC_COMPAT"]=" 1"
D["OSHMEM_PARAM_CHECK"]=" 1"
D["HAVE_STDIO_H"]=" 1"
D["HAVE_STDLIB_H"]=" 1"
D["HAVE_STRING_H"]=" 1"
D["HAVE_INTTYPES_H"]=" 1"
D["HAVE_STDINT_H"]=" 1"
D["HAVE_STRINGS_H"]=" 1"
D["HAVE_SYS_STAT_H"]=" 1"
D["HAVE_SYS_TYPES_H"]=" 1"
D["HAVE_UNISTD_H"]=" 1"
D["HAVE_WCHAR_H"]=" 1"
D["STDC_HEADERS"]=" 1"
D["_ALL_SOURCE"]=" 1"
D["_DARWIN_C_SOURCE"]=" 1"
D["_GNU_SOURCE"]=" 1"
D["_HPUX_ALT_XOPEN_SOCKET_API"]=" 1"
D["_NETBSD_SOURCE"]=" 1"
D["_OPENBSD_SOURCE"]=" 1"
D["_POSIX_PTHREAD_SEMANTICS"]=" 1"
D["__STDC_WANT_IEC_60559_ATTRIBS_EXT__"]=" 1"
D["__STDC_WANT_IEC_60559_BFP_EXT__"]=" 1"
D["__STDC_WANT_IEC_60559_DFP_EXT__"]=" 1"
D["__STDC_WANT_IEC_60559_FUNCS_EXT__"]=" 1"
D["__STDC_WANT_IEC_60559_TYPES_EXT__"]=" 1"
D["__STDC_WANT_LIB_EXT2__"]=" 1"
D["__STDC_WANT_MATH_SPEC_FUNCS__"]=" 1"
D["_TANDEM_SOURCE"]=" 1"
D["__EXTENSIONS__"]=" 1"
D["OPAL_CC"]=" \"gcc\""
D["OPAL_C_HAVE__THREAD_LOCAL"]=" 1"
D["OPAL_C_HAVE_ATOMIC_CONV_VAR"]=" 1"
D["OPAL_C_HAVE__ATOMIC"]=" 1"
D["OPAL_C_HAVE__GENERIC"]=" 1"
D["OPAL_C_HAVE__STATIC_ASSERT"]=" 1"
D["OPAL_C_HAVE___THREAD"]=" 1"
D["_GNU_SOURCE"]=" 1"
D["OPAL_C_HAVE_ATOMIC_SUPPORT_FOR__ATOMIC"]=" 1"
D["OPAL_C_HAVE_BUILTIN_EXPECT"]=" 1"
D["OPAL_C_HAVE_BUILTIN_PREFETCH"]=" 1"
D["OPAL_C_HAVE_BUILTIN_CLZ"]=" 1"
D["HAVE_INT8_T"]=" 1"
D["HAVE_UINT8_T"]=" 1"
D["HAVE_INT16_T"]=" 1"
D["HAVE_UINT16_T"]=" 1"
D["HAVE_INT32_T"]=" 1"
D["HAVE_UINT32_T"]=" 1"
D["HAVE_INT64_T"]=" 1"
D["HAVE_UINT64_T"]=" 1"
D["HAVE___INT128"]=" 1"
D["HAVE_LONG_LONG"]=" 1"
D["HAVE___FLOAT128"]=" 1"
D["HAVE_LONG_DOUBLE"]=" 1"
D["HAVE_COMPLEX_H"]=" 1"
D["HAVE_FLOAT__COMPLEX"]=" 1"
D["HAVE_DOUBLE__COMPLEX"]=" 1"
D["HAVE_LONG_DOUBLE__COMPLEX"]=" 1"
D["HAVE_INTPTR_T"]=" 1"
D["HAVE_UINTPTR_T"]=" 1"
D["HAVE_MODE_T"]=" 1"
D["HAVE_SSIZE_T"]=" 1"
D["HAVE_PTRDIFF_T"]=" 1"
D["SIZEOF__BOOL"]=" 1"
D["SIZEOF_CHAR"]=" 1"
D["SIZEOF_SHORT"]=" 2"
D["SIZEOF_INT"]=" 4"
D["SIZEOF_UNSIGNED_INT"]=" 4"
D["SIZEOF_LONG"]=" 8"
D["SIZEOF_UNSIGNED_LONG"]=" 8"
D["SIZEOF_LONG_LONG"]=" 8"
D["SIZEOF_FLOAT"]=" 4"
D["SIZEOF_DOUBLE"]=" 8"
D["SIZEOF_LONG_DOUBLE"]=" 16"
D["SIZEOF___FLOAT128"]=" 16"
D["SIZEOF_FLOAT__COMPLEX"]=" 8"
D["SIZEOF_DOUBLE__COMPLEX"]=" 16"
D["SIZEOF_LONG_DOUBLE__COMPLEX"]=" 32"
D["SIZEOF_VOID_P"]=" 8"
D["SIZEOF_SIZE_T"]=" 8"
D["SIZEOF_SSIZE_T"]=" 8"
D["SIZEOF_PTRDIFF_T"]=" 8"
D["SIZEOF_WCHAR_T"]=" 4"
D["SIZEOF_PID_T"]=" 4"
D["SIZEOF_ATOMIC_SHORT"]=" 2"
D["SIZEOF_ATOMIC_INT"]=" 4"
D["SIZEOF_ATOMIC_LONG"]=" 8"
D["SIZEOF_ATOMIC_LLONG"]=" 8"
D["ALIGNOF_BOOL"]=" 1"
D["OPAL_ALIGNMENT_BOOL"]=" 1"
D["ALIGNOF_INT8_T"]=" 1"
D["OPAL_ALIGNMENT_INT8"]=" 1"
D["ALIGNOF_INT16_T"]=" 2"
D["OPAL_ALIGNMENT_INT16"]=" 2"
D["ALIGNOF_INT32_T"]=" 4"
D["OPAL_ALIGNMENT_INT32"]=" 4"
D["ALIGNOF_INT64_T"]=" 8"
D["OPAL_ALIGNMENT_INT64"]=" 8"
D["ALIGNOF_CHAR"]=" 1"
D["OPAL_ALIGNMENT_CHAR"]=" 1"
D["ALIGNOF_SHORT"]=" 2"
D["OPAL_ALIGNMENT_SHORT"]=" 2"
D["ALIGNOF_WCHAR_T"]=" 4"
D["OPAL_ALIGNMENT_WCHAR"]=" 4"
D["ALIGNOF_INT"]=" 4"
D["OPAL_ALIGNMENT_INT"]=" 4"
D["ALIGNOF_LONG"]=" 8"
D["OPAL_ALIGNMENT_LONG"]=" 8"
D["ALIGNOF_LONG_LONG"]=" 8"
D["OPAL_ALIGNMENT_LONG_LONG"]=" 8"
D["ALIGNOF_FLOAT"]=" 4"
D["OPAL_ALIGNMENT_FLOAT"]=" 4"
D["ALIGNOF_DOUBLE"]=" 8"
D["OPAL_ALIGNMENT_DOUBLE"]=" 8"
D["ALIGNOF_LONG_DOUBLE"]=" 16"
D["OPAL_ALIGNMENT_LONG_DOUBLE"]=" 16"
D["ALIGNOF___FLOAT128"]=" 16"
D["OPAL_ALIGNMENT___FLOAT128"]=" 16"
D["ALIGNOF_FLOAT__COMPLEX"]=" 4"
D["OPAL_ALIGNMENT_FLOAT_COMPLEX"]=" 4"
D["ALIGNOF_DOUBLE__COMPLEX"]=" 8"
D["OPAL_ALIGNMENT_DOUBLE_COMPLEX"]=" 8"
D["ALIGNOF_LONG_DOUBLE__COMPLEX"]=" 16"
D["OPAL_ALIGNMENT_LONG_DOUBLE_COMPLEX"]=" 16"
D["ALIGNOF_VOID_P"]=" 8"
D["OPAL_ALIGNMENT_VOID_P"]=" 8"
D["ALIGNOF_SIZE_T"]=" 8"
D["OPAL_ALIGNMENT_SIZE_T"]=" 8"
D["OPAL_ALIGN_WORD_SIZE_INTEGERS"]=" 0"
D["OMPI_CXX"]=" \"g++\""
D["OPAL_HAVE_ATTRIBUTE"]=" 1"
D["OPAL_HAVE_ATTRIBUTE_ALIGNED"]=" 1"
D["OPAL_HAVE_ATTRIBUTE_ALWAYS_INLINE"]=" 1"
D["OPAL_HAVE_ATTRIBUTE_COLD"]=" 1"
D["OPAL_HAVE_ATTRIBUTE_CONST"]=" 1"
D["OPAL_HAVE_ATTRIBUTE_DEPRECATED"]=" 1"
D["OPAL_HAVE_ATTRIBUTE_DEPRECATED_ARGUMENT"]=" 1"
D["OPAL_HAVE_ATTRIBUTE_FORMAT"]=" 1"
D["OPAL_HAVE_ATTRIBUTE_FORMAT_FUNCPTR"]=" 1"
D["OPAL_HAVE_ATTRIBUTE_HOT"]=" 1"
D["OPAL_HAVE_ATTRIBUTE_MALLOC"]=" 1"
D["OPAL_HAVE_ATTRIBUTE_MAY_ALIAS"]=" 1"
D["OPAL_HAVE_ATTRIBUTE_NO_INSTRUMENT_FUNCTION"]=" 1"
D["OPAL_HAVE_ATTRIBUTE_NOINLINE"]=" 1"
D["OPAL_HAVE_ATTRIBUTE_NONNULL"]=" 1"
D["OPAL_HAVE_ATTRIBUTE_NORETURN"]=" 1"
D["OPAL_HAVE_ATTRIBUTE_NORETURN_FUNCPTR"]=" 1"
D["OPAL_HAVE_ATTRIBUTE_PACKED"]=" 1"
D["OPAL_HAVE_ATTRIBUTE_PURE"]=" 1"
D["OPAL_HAVE_ATTRIBUTE_SENTINEL"]=" 1"
D["OPAL_HAVE_ATTRIBUTE_UNUSED"]=" 1"
D["OPAL_HAVE_ATTRIBUTE_VISIBILITY"]=" 1"
D["OPAL_HAVE_ATTRIBUTE_WARN_UNUSED_RESULT"]=" 1"
D["OPAL_HAVE_ATTRIBUTE_WEAK_ALIAS"]=" 1"
D["OPAL_HAVE_ATTRIBUTE_CONSTRUCTOR"]=" 1"
D["OPAL_HAVE_ATTRIBUTE_DESTRUCTOR"]=" 1"
D["OPAL_HAVE_ATTRIBUTE_OPTNONE"]=" 0"
D["OPAL_HAVE_ATTRIBUTE_EXTENSION"]=" 1"
D["OPAL_HAVE_ATTRIBUTE_ERROR"]=" 1"
D["OPAL_BUILD_PLATFORM_COMPILER_FAMILYID"]=" 1"
D["OPAL_BUILD_PLATFORM_COMPILER_VERSION"]=" 525568"
D["OMPI_WANT_JAVA_BINDINGS"]=" 0"
D["OPAL_HAVE_WEAK_SYMBOLS"]=" 1"
D["OPAL_C_GCC_INLINE_ASSEMBLY"]=" 1"
D["OPAL_HAVE_GCC_BUILTIN_CSWAP_INT128"]=" 0"
D["OPAL_HAVE_SYNC_BUILTIN_CSWAP_INT128"]=" 1"
D["OPAL_USE_C11_ATOMICS"]=" 0"
D["OPAL_USE_GCC_BUILTIN_ATOMICS"]=" 1"
D["OPAL_USE_ASM_ATOMICS"]=" 0"
D["OMPI_FORTRAN_MPIFH_BINDINGS"]=" 1"
D["OMPI_FORTRAN_USEMPI_BINDINGS"]=" 2"
D["OMPI_FORTRAN_USEMPIF08_BINDINGS"]=" 3"
D["OMPI_FORTRAN_DOUBLE_UNDERSCORE"]=" 0"
D["OMPI_FORTRAN_SINGLE_UNDERSCORE"]=" 1"
D["OMPI_FORTRAN_CAPS"]=" 0"
D["OMPI_FORTRAN_PLAIN"]=" 0"
D["ompi_fortran_bogus_type_t"]=" int"
D["OMPI_HAVE_FORTRAN_CHARACTER"]=" 1"
D["OMPI_SIZEOF_FORTRAN_CHARACTER"]=" 1"
D["OMPI_ALIGNMENT_FORTRAN_CHARACTER"]=" 1"
D["OMPI_KIND_FORTRAN_CHARACTER"]=" C_SIGNED_CHAR"
D["ompi_fortran_character_t"]=" char"
D["OMPI_HAVE_FORTRAN_LOGICAL"]=" 1"
D["OMPI_SIZEOF_FORTRAN_LOGICAL"]=" 4"
D["OMPI_ALIGNMENT_FORTRAN_LOGICAL"]=" 4"
D["OMPI_KIND_FORTRAN_LOGICAL"]=" C_INT"
D["ompi_fortran_logical_t"]=" int"
D["OMPI_HAVE_FORTRAN_LOGICAL1"]=" 1"
D["OMPI_SIZEOF_FORTRAN_LOGICAL1"]=" 1"
D["OMPI_ALIGNMENT_FORTRAN_LOGICAL1"]=" 1"
D["OMPI_KIND_FORTRAN_LOGICAL1"]=" C_SIGNED_CHAR"
D["ompi_fortran_logical1_t"]=" char"
D["OMPI_HAVE_FORTRAN_LOGICAL2"]=" 1"
D["OMPI_SIZEOF_FORTRAN_LOGICAL2"]=" 2"
D["OMPI_ALIGNMENT_FORTRAN_LOGICAL2"]=" 2"
D["OMPI_KIND_FORTRAN_LOGICAL2"]=" C_SHORT"
D["ompi_fortran_logical2_t"]=" short"
D["OMPI_HAVE_FORTRAN_LOGICAL4"]=" 1"
D["OMPI_SIZEOF_FORTRAN_LOGICAL4"]=" 4"
D["OMPI_ALIGNMENT_FORTRAN_LOGICAL4"]=" 4"
D["OMPI_KIND_FORTRAN_LOGICAL4"]=" C_INT"
D["ompi_fortran_logical4_t"]=" int"
D["OMPI_HAVE_FORTRAN_LOGICAL8"]=" 1"
D["OMPI_SIZEOF_FORTRAN_LOGICAL8"]=" 8"
D["OMPI_ALIGNMENT_FORTRAN_LOGICAL8"]=" 8"
D["OMPI_KIND_FORTRAN_LOGICAL8"]=" C_LONG_LONG"
D["ompi_fortran_logical8_t"]=" long long"
D["OMPI_HAVE_FORTRAN_INTEGER"]=" 1"
D["OMPI_SIZEOF_FORTRAN_INTEGER"]=" 4"
D["OMPI_ALIGNMENT_FORTRAN_INTEGER"]=" 4"
D["OMPI_KIND_FORTRAN_INTEGER"]=" C_INT"
D["ompi_fortran_integer_t"]=" int"
D["OMPI_HAVE_FORTRAN_INTEGER1"]=" 1"
D["OMPI_SIZEOF_FORTRAN_INTEGER1"]=" 1"
D["OMPI_ALIGNMENT_FORTRAN_INTEGER1"]=" 1"
D["OMPI_KIND_FORTRAN_INTEGER1"]=" C_SIGNED_CHAR"
D["ompi_fortran_integer1_t"]=" char"
D["OMPI_HAVE_FORTRAN_INTEGER2"]=" 1"
D["OMPI_SIZEOF_FORTRAN_INTEGER2"]=" 2"
D["OMPI_ALIGNMENT_FORTRAN_INTEGER2"]=" 2"
D["OMPI_KIND_FORTRAN_INTEGER2"]=" C_SHORT"
D["ompi_fortran_integer2_t"]=" short"
D["OMPI_HAVE_FORTRAN_INTEGER4"]=" 1"
D["OMPI_SIZEOF_FORTRAN_INTEGER4"]=" 4"
D["OMPI_ALIGNMENT_FORTRAN_INTEGER4"]=" 4"
D["OMPI_KIND_FORTRAN_INTEGER4"]=" C_INT"
D["ompi_fortran_integer4_t"]=" int"
D["OMPI_HAVE_FORTRAN_INTEGER8"]=" 1"
D["OMPI_SIZEOF_FORTRAN_INTEGER8"]=" 8"
D["OMPI_ALIGNMENT_FORTRAN_INTEGER8"]=" 8"
D["OMPI_KIND_FORTRAN_INTEGER8"]=" C_LONG_LONG"
D["ompi_fortran_integer8_t"]=" long long"
D["OMPI_HAVE_FORTRAN_INTEGER16"]=" 0"
D["OMPI_SIZEOF_FORTRAN_INTEGER16"]=" 16"
D["OMPI_ALIGNMENT_FORTRAN_INTEGER16"]=" 0"
D["OMPI_KIND_FORTRAN_INTEGER16"]=" 0"
D["ompi_fortran_integer16_t"]=" "
D["OMPI_HAVE_FORTRAN_REAL"]=" 1"
D["OMPI_SIZEOF_FORTRAN_REAL"]=" 4"
D["OMPI_ALIGNMENT_FORTRAN_REAL"]=" 4"
D["OMPI_KIND_FORTRAN_REAL"]=" C_FLOAT"
D["ompi_fortran_real_t"]=" float"
D["OMPI_HAVE_FORTRAN_REAL2"]=" 0"
D["OMPI_SIZEOF_FORTRAN_REAL2"]=" 0"
D["OMPI_ALIGNMENT_FORTRAN_REAL2"]=" 0"
D["OMPI_KIND_FORTRAN_REAL2"]=" 0"
D["ompi_fortran_real2_t"]=" ompi_fortran_bogus_type_t"
D["OMPI_HAVE_FORTRAN_REAL4"]=" 1"
D["OMPI_SIZEOF_FORTRAN_REAL4"]=" 4"
D["OMPI_ALIGNMENT_FORTRAN_REAL4"]=" 4"
D["OMPI_KIND_FORTRAN_REAL4"]=" C_FLOAT"
D["ompi_fortran_real4_t"]=" float"
D["OMPI_HAVE_FORTRAN_REAL8"]=" 1"
D["OMPI_SIZEOF_FORTRAN_REAL8"]=" 8"
D["OMPI_ALIGNMENT_FORTRAN_REAL8"]=" 8"
D["OMPI_KIND_FORTRAN_REAL8"]=" C_DOUBLE"
D["ompi_fortran_real8_t"]=" double"
D["OMPI_HAVE_FORTRAN_REAL16"]=" 1"
D["OMPI_SIZEOF_FORTRAN_REAL16"]=" 16"
D["OMPI_ALIGNMENT_FORTRAN_REAL16"]=" 16"
D["OMPI_KIND_FORTRAN_REAL16"]=" C_LONG_DOUBLE"
D["ompi_fortran_real16_t"]=" long double"
D["OMPI_REAL16_MATCHES_C"]=" 1"
D["OMPI_HAVE_FORTRAN_DOUBLE_PRECISION"]=" 1"
D["OMPI_SIZEOF_FORTRAN_DOUBLE_PRECISION"]=" 8"
D["OMPI_ALIGNMENT_FORTRAN_DOUBLE_PRECISION"]=" 8"
D["OMPI_KIND_FORTRAN_DOUBLE_PRECISION"]=" C_DOUBLE"
D["ompi_fortran_double_precision_t"]=" double"
D["OMPI_HAVE_FORTRAN_COMPLEX"]=" 1"
D["OMPI_SIZEOF_FORTRAN_COMPLEX"]=" 8"
D["OMPI_ALIGNMENT_FORTRAN_COMPLEX"]=" 4"
D["OMPI_KIND_FORTRAN_COMPLEX"]=" C_FLOAT_COMPLEX"
D["OMPI_HAVE_FORTRAN_COMPLEX4"]=" 0"
D["OMPI_SIZEOF_FORTRAN_COMPLEX4"]=" 0"
D["OMPI_ALIGNMENT_FORTRAN_COMPLEX4"]=" 0"
D["OMPI_KIND_FORTRAN_COMPLEX4"]=" 0"
D["OMPI_HAVE_FORTRAN_COMPLEX8"]=" 1"
D["OMPI_SIZEOF_FORTRAN_COMPLEX8"]=" 8"
D["OMPI_ALIGNMENT_FORTRAN_COMPLEX8"]=" 4"
D["OMPI_KIND_FORTRAN_COMPLEX8"]=" C_FLOAT_COMPLEX"
D["OMPI_HAVE_FORTRAN_COMPLEX16"]=" 1"
D["OMPI_SIZEOF_FORTRAN_COMPLEX16"]=" 16"
D["OMPI_ALIGNMENT_FORTRAN_COMPLEX16"]=" 8"
D["OMPI_KIND_FORTRAN_COMPLEX16"]=" C_DOUBLE_COMPLEX"
D["OMPI_HAVE_FORTRAN_COMPLEX32"]=" 1"
D["OMPI_SIZEOF_FORTRAN_COMPLEX32"]=" 32"
D["OMPI_ALIGNMENT_FORTRAN_COMPLEX32"]=" 16"
D["OMPI_KIND_FORTRAN_COMPLEX32"]=" C_LONG_DOUBLE_COMPLEX"
D["OMPI_HAVE_FORTRAN_DOUBLE_COMPLEX"]=" 1"
D["OMPI_SIZEOF_FORTRAN_DOUBLE_COMPLEX"]=" 16"
D["OMPI_ALIGNMENT_FORTRAN_DOUBLE_COMPLEX"]=" 8"
D["OMPI_KIND_FORTRAN_DOUBLE_COMPLEX"]=" C_DOUBLE_COMPLEX"
D["OMPI_FORTRAN_HANDLE_MAX"]=" 2147483647"
D["OMPI_FORTRAN_VALUE_TRUE"]=" 1"
D["OMPI_FORTRAN_MAX_ARRAY_RANK"]=" 15"
D["OMPI_FORTRAN_STATUS_SIZE"]=" 6"
D["OMPI_FORTRAN_HAVE_ATTR_DEPRECATED"]=" 0"
D["OMPI_FC"]=" \"gfortran\""
D["OMPI_FC_ABSOLUTE"]=" \"/usr/bin/gfortran\""
D["OMPI_FORTRAN_BUILD_SIZEOF"]=" 1"
D["OMPI_FORTRAN_HAVE_INTERFACE"]=" 1"
D["OMPI_FORTRAN_HAVE_ISO_FORTRAN_ENV"]=" 1"
D["OMPI_FORTRAN_HAVE_STORAGE_SIZE"]=" 1"
D["OMPI_FORTRAN_IGNORE_TKR_PREDECL"]=" \"!GCC$ ATTRIBUTES NO_ARG_CHECK ::\""
D["OMPI_FORTRAN_IGNORE_TKR_TYPE"]=" "
D["OMPI_FORTRAN_HAVE_IGNORE_TKR"]=" 1"
D["OMPI_FORTRAN_HAVE_BIND_C_TYPE"]=" 1"
D["OMPI_FORTRAN_HAVE_PRIVATE"]=" 1"
D["OMPI_FORTRAN_NEED_WRAPPER_ROUTINES"]=" 1"
D["OMPI_FORTRAN_F08_HANDLE_SIZE"]=" 4"
D["OMPI_FORTRAN_F08_HANDLE_ALIGNMENT"]=" 4"
D["OMPI_FORTRAN_HAVE_F08_ASSUMED_RANK"]=" 1"
D["OMPI_FORTRAN_HAVE_BIND_C"]=" 1"
D["OMPI_FORTRAN_HAVE_ISO_C_BINDING"]=" 1"
D["OMPI_FORTRAN_HAVE_BIND_C_SUB"]=" 1"
D["OMPI_FORTRAN_HAVE_BIND_C_TYPE_NAME"]=" 1"
D["OMPI_FORTRAN_HAVE_OPTIONAL_ARGS"]=" 1"
D["OMPI_FORTRAN_HAVE_ABSTRACT"]=" 1"
D["OMPI_FORTRAN_HAVE_ASYNCHRONOUS"]=" 1"
D["OMPI_FORTRAN_HAVE_PROCEDURE"]=" 1"
D["OMPI_FORTRAN_HAVE_USE_ONLY"]=" 1"
D["OMPI_FORTRAN_HAVE_C_FUNLOC"]=" 1"
D["OMPI_BUILD_FORTRAN_BINDINGS"]=" 3"
D["HAVE_ALLOCA_H"]=" 1"
D["HAVE_AIO_H"]=" 1"
D["HAVE_ARPA_INET_H"]=" 1"
D["HAVE_DIRENT_H"]=" 1"
D["HAVE_DLFCN_H"]=" 1"
D["HAVE_ENDIAN_H"]=" 1"
D["HAVE_EXECINFO_H"]=" 1"
D["HAVE_ERR_H"]=" 1"
D["HAVE_FCNTL_H"]=" 1"
D["HAVE_GRP_H"]=" 1"
D["HAVE_LIBGEN_H"]=" 1"
D["HAVE_MEMORY_H"]=" 1"
D["HAVE_NETDB_H"]=" 1"
D["HAVE_NETINET_IN_H"]=" 1"
D["HAVE_NETINET_TCP_H"]=" 1"
D["HAVE_POLL_H"]=" 1"
D["HAVE_PTHREAD_H"]=" 1"
D["HAVE_PTY_H"]=" 1"
D["HAVE_PWD_H"]=" 1"
D["HAVE_SCHED_H"]=" 1"
D["HAVE_STRINGS_H"]=" 1"
D["HAVE_LINUX_ETHTOOL_H"]=" 1"
D["HAVE_LINUX_SOCKIOS_H"]=" 1"
D["HAVE_SYS_FCNTL_H"]=" 1"
D["HAVE_SYS_IPC_H"]=" 1"
D["HAVE_SYS_SHM_H"]=" 1"
D["HAVE_SYS_IOCTL_H"]=" 1"
D["HAVE_SYS_MMAN_H"]=" 1"
D["HAVE_SYS_PARAM_H"]=" 1"
D["HAVE_SYS_QUEUE_H"]=" 1"
D["HAVE_SYS_RESOURCE_H"]=" 1"
D["HAVE_SYS_SELECT_H"]=" 1"
D["HAVE_SYS_SOCKET_H"]=" 1"
D["HAVE_SYS_STAT_H"]=" 1"
D["HAVE_SYS_STATFS_H"]=" 1"
D["HAVE_SYS_STATVFS_H"]=" 1"
D["HAVE_TIME_H"]=" 1"
D["HAVE_SYS_TIME_H"]=" 1"
D["HAVE_SYS_TYPES_H"]=" 1"
D["HAVE_SYS_UIO_H"]=" 1"
D["HAVE_SYS_UN_H"]=" 1"
D["HAVE_SYS_UTSNAME_H"]=" 1"
D["HAVE_SYS_VFS_H"]=" 1"
D["HAVE_SYS_WAIT_H"]=" 1"
D["HAVE_SYSLOG_H"]=" 1"
D["HAVE_TERMIOS_H"]=" 1"
D["HAVE_ULIMIT_H"]=" 1"
D["HAVE_UNISTD_H"]=" 1"
D["HAVE_UTMP_H"]=" 1"
D["HAVE_MALLOC_H"]=" 1"
D["HAVE_IFADDRS_H"]=" 1"
D["HAVE_REGEX_H"]=" 1"
D["HAVE_MNTENT_H"]=" 1"
D["HAVE_PATHS_H"]=" 1"
D["HAVE_IEEE754_H"]=" 1"
D["HAVE_SYS_MOUNT_H"]=" 1"
D["HAVE_SYS_SYSCTL_H"]=" 1"
D["HAVE_NET_IF_H"]=" 1"
D["HAVE_SOCKLEN_T"]=" 1"
D["HAVE_STRUCT_SOCKADDR_IN"]=" 1"
D["HAVE_STRUCT_SOCKADDR_IN6"]=" 1"
D["HAVE_STRUCT_SOCKADDR_STORAGE"]=" 1"
D["HAVE_STRUCT_IFREQ"]=" 1"
D["HAVE_STRUCT_ETHTOOL_CMD"]=" 1"
D["HAVE_DECL_ETHTOOL_CMD_SPEED"]=" 1"
D["HAVE_DECL_SIOCETHTOOL"]=" 1"
D["HAVE_STRUCT_ETHTOOL_CMD_SPEED_HI"]=" 1"
D["HAVE_STRUCT_ETHTOOL_CMD_SPEED_HI"]=" 1"
D["HAVE_STRUCT_ETHTOOL_CMD_SPEED_HI"]=" 1"
D["HAVE_STRUCT_ETHTOOL_CMD_SPEED_HI"]=" 1"
D["HAVE_DECL_AF_UNSPEC"]=" 1"
D["HAVE_DECL_PF_UNSPEC"]=" 1"
D["HAVE_DECL_AF_INET6"]=" 1"
D["HAVE_DECL_PF_INET6"]=" 1"
D["OPAL_HAVE_SA_RESTART"]=" 1"
D["HAVE_STRUCT_DIRENT_D_TYPE"]=" 1"
D["HAVE_SIGINFO_T_SI_FD"]=" 1"
D["HAVE_SIGINFO_T_SI_BAND"]=" 1"
D["HAVE_STRUCT_STATFS_F_TYPE"]=" 1"
D["HAVE_STRUCT_TIMESPEC_TV_NSEC"]=" 1"
D["OMPI_MPI_AINT_TYPE"]=" ptrdiff_t"
D["OMPI_MPI_COUNT_SIZE"]=" 8"
D["OMPI_MPI_COUNT_TYPE"]=" long long"
D["MPI_COUNT_MAX"]=" 0x7fffffffffffffffll"
D["OMPI_MPI_OFFSET_TYPE"]=" long long"
D["OMPI_MPI_OFFSET_SIZE"]=" 8"
D["OMPI_OFFSET_DATATYPE"]=" MPI_LONG_LONG"
D["OPAL_HAVE_OPENPTY"]=" 1"
D["OPAL_HAVE_GETHOSTBYNAME"]=" 1"
D["OPAL_HAVE_SOCKET"]=" 1"
D["OPAL_HAVE_SCHED_YIELD"]=" 1"
D["OPAL_HAVE_DIRNAME"]=" 1"
D["OPAL_HAVE_CEIL"]=" 1"
D["OPAL_HAVE_CLOCK_GETTIME"]=" 1"
D["HAVE_ASPRINTF"]=" 1"
D["HAVE_SNPRINTF"]=" 1"
D["HAVE_VASPRINTF"]=" 1"
D["HAVE_VSNPRINTF"]=" 1"
D["HAVE_OPENPTY"]=" 1"
D["HAVE_ISATTY"]=" 1"
D["HAVE_GETPWUID"]=" 1"
D["HAVE_FORK"]=" 1"
D["HAVE_WAITPID"]=" 1"
D["HAVE_EXECVE"]=" 1"
D["HAVE_PIPE"]=" 1"
D["HAVE_PTSNAME"]=" 1"
D["HAVE_SETSID"]=" 1"
D["HAVE_MMAP"]=" 1"
D["HAVE_TCGETPGRP"]=" 1"
D["HAVE_POSIX_MEMALIGN"]=" 1"
D["HAVE_STRSIGNAL"]=" 1"
D["HAVE_SYSCONF"]=" 1"
D["HAVE_SYSLOG"]=" 1"
D["HAVE_VSYSLOG"]=" 1"
D["HAVE_REGEXEC"]=" 1"
D["HAVE_REGFREE"]=" 1"
D["HAVE_SOCKETPAIR"]=" 1"
D["HAVE_USLEEP"]=" 1"
D["HAVE_MKFIFO"]=" 1"
D["HAVE_STATFS"]=" 1"
D["HAVE_STATVFS"]=" 1"
D["HAVE_SETPGID"]=" 1"
D["HAVE_SETENV"]=" 1"
D["HAVE___CLEAR_CACHE"]=" 1"
D["HAVE_ON_EXIT"]=" 1"
D["HAVE_UNIX_BYTESWAP"]=" 1"
D["OPAL_HAVE_VA_COPY"]=" 1"
D["OPAL_HAVE_UNDERSCORE_VA_COPY"]=" 1"
D["HAVE_DECL___FUNC__"]=" 1"
D["OPAL_HAVE_SOLARIS"]=" 0"
D["HAVE_NETDB_H"]=" 1"
D["HAVE_NETINET_IN_H"]=" 1"
D["HAVE_NETINET_TCP_H"]=" 1"
D["HAVE_STRUCT_SOCKADDR_IN"]=" 1"
D["OPAL_HAVE__SC_NPROCESSORS_ONLN"]=" 1"
D["OPAL_HAVE_BROKEN_QSORT"]=" 0"
D["YYTEXT_POINTER"]=" 1"
D["HAVE_DECL_RLIMIT_NPROC"]=" 1"
D["HAVE_DECL_RLIMIT_MEMLOCK"]=" 1"
D["HAVE_DECL_RLIMIT_NOFILE"]=" 1"
D["HAVE_DECL_RLIMIT_FSIZE"]=" 1"
D["HAVE_DECL_RLIMIT_CORE"]=" 1"
D["HAVE_DECL_RLIMIT_STACK"]=" 1"
D["HAVE_DECL_RLIMIT_AS"]=" 1"
D["HAVE_DECL_HWLOC_OBJ_OSDEV_COPROC"]=" 1"
D["HAVE_HWLOC_TOPOLOGY_DUP"]=" 1"
D["OPAL_USING_INTERNAL_PMIX"]=" 0"
D["OMPI_HAVE_PRRTE"]=" 1"
D["OMPI_USING_INTERNAL_PRRTE"]=" 1"
D["OPAL_ENABLE_FT"]=" 1"
D["OPAL_ENABLE_FT_MPI"]=" 1"
D["HAVE_DECL_OPEN_MEMSTREAM"]=" 1"
D["OPAL_CUDA_SUPPORT"]=" 0"
D["OPAL_CUDA_SYNC_MEMOPS"]=" "
D["OPAL_CUDA_GET_ATTRIBUTES"]=" "
D["OPAL_CUDA_GDR_SUPPORT"]=" 0"
D["OPAL_ROCM_SUPPORT"]=" 0"
D["HAVE_EXECINFO_H"]=" 1"
D["OPAL_HAVE_BACKTRACE_EXECINFO"]=" 1"
D["HAVE_UCONTEXT_H"]=" 1"
D["OPAL_PORTALS4_MAX_MD_SIZE"]=" 0"
D["OPAL_PORTALS4_MAX_VA_SIZE"]=" 0"
D["OPAL_BTL_PORTALS4_FLOW_CONTROL"]=" 1"
D["OPAL_CUDA_SUPPORT"]=" 0"
D["OPAL_CUDA_SYNC_MEMOPS"]=" "
D["OPAL_CUDA_GET_ATTRIBUTES"]=" "
D["OPAL_CUDA_GDR_SUPPORT"]=" 0"
D["HAVE_STRUCT_SOCKADDR_IN"]=" 1"
D["OPAL_BTL_USNIC_UNIT_TESTS"]=" 0"
D["SIZEOF_VOID_P"]=" 8"
D["OPAL_DL_LIBLTDL_HAVE_LT_DLADVISE"]=" 0"
D["OPAL_HAVE_DL_SUPPORT"]=" 1"
D["HAVE_STRUCT_IFREQ_IFR_HWADDR"]=" 1"
D["HAVE_STRUCT_IFREQ_IFR_MTU"]=" 1"
D["OPAL_WANT_MEMCHECKER"]=" 0"
D["HAVE_VALGRIND_VALGRIND_H"]=" 1"
D["MCA_memcpy_IMPLEMENTATION_HEADER"]=" \"opal/mca/memcpy/base/memcpy_base_default.h\""
D["HAVE___CURBRK"]=" 1"
D["HAVE_LINUX_MMAN_H"]=" 1"
D["HAVE_SYS_SYSCALL_H"]=" 1"
D["HAVE_DECL___SYSCALL"]=" 0"
D["OPAL_MEMORY_HAVE_COMPONENT"]=" 0"
D["MCA_memory_IMPLEMENTATION_HEADER"]=" \"opal/mca/memory/base/empty.h\""
D["OPAL_CUDA_SUPPORT"]=" 0"
D["OPAL_CUDA_SYNC_MEMOPS"]=" "
D["OPAL_CUDA_GET_ATTRIBUTES"]=" "
D["OPAL_CUDA_GDR_SUPPORT"]=" 0"
D["OPAL_CUDA_SUPPORT"]=" 0"
D["OPAL_CUDA_SYNC_MEMOPS"]=" "
D["OPAL_CUDA_GET_ATTRIBUTES"]=" "
D["OPAL_CUDA_GDR_SUPPORT"]=" 0"
D["OPAL_SHMEM_MMAP"]=" 1"
D["OPAL_HAVE_SHMEM_POSIX"]=" 1"
D["OPAL_SHMEM_POSIX"]=" 1"
D["OPAL_SHMEM_SYSV"]=" 1"
D["HAVE_SYS_PRCTL_H"]=" 1"
D["OPAL_CMA_NEED_SYSCALL_DEFS"]=" 0"
D["HAVE_LINUX_KCMP_H"]=" 1"
D["HAVE_SYS_SYSCALL_H"]=" 1"
D["OPAL_CMA_KCMP_AVAIL"]=" 1"
D["MCA_opal_smsc_DIRECT_CALL"]=" 0"
D["MCA_opal_smsc_DIRECT_CALL_COMPONENT"]=" "
D["MCA_opal_smsc_DIRECT_CALL_HEADER"]=" \"\""
D["HAVE_PTHREAD_MUTEXATTR_SETPSHARED"]=" 1"
D["HAVE_PTHREAD_CONDATTR_SETPSHARED"]=" 1"
D["OPAL_HAVE_PTHREAD_MUTEX_ERRORCHECK_NP"]=" 1"
D["OPAL_HAVE_PTHREAD_MUTEX_ERRORCHECK"]=" 1"
D["MCA_threads_base_include_HEADER"]=" \"opal/mca/threads/pthreads/threads_pthreads_threads.h\""
D["MCA_threads_mutex_base_include_HEADER"]=" \"opal/mca/threads/pthreads/threads_pthreads_mutex.h\""
D["MCA_threads_tsd_base_include_HEADER"]=" \"opal/mca/threads/pthreads/threads_pthreads_tsd.h\""
D["MCA_timer_IMPLEMENTATION_HEADER"]=" \"opal/mca/timer/linux/timer_linux.h\""
D["OMPI_PROC_ENDPOINT_TAG_BML"]=" 0"
D["OPAL_PORTALS4_MAX_MD_SIZE"]=" 0"
D["OPAL_PORTALS4_MAX_VA_SIZE"]=" 0"
D["OPAL_HAVE_FBTL_POSIX"]=" 1"
D["HAVE_PWRITEV"]=" 1"
D["HAVE_PREADV"]=" 1"
D["MCA_io_romio341_USER_CONFIGURE_FLAGS"]=" \"\""
D["MCA_io_romio341_COMPLETE_CONFIGURE_FLAGS"]=" \" FROM_OMPI=yes CC='gcc' CFLAGS='-O3 -DNDEBUG  -finline-functions -mcx16 -D__EXTENSIONS__' CPPFLAGS"\
"='' FFLAGS='' LDFLAGS='' --enable-shared --disable-static  --prefix=/usr/openmpi-5.0.5 --disable-aio --disable-weak-symbols --enable-strict --disabl"\
"e-f77 --disable-f90 ac_cv_lib_cuda_cuMemGetAddressRange=no\""
D["HAVE_STDATOMIC_H"]=" 1"
D["OPAL_PORTALS4_MAX_MD_SIZE"]=" 0"
D["OPAL_PORTALS4_MAX_VA_SIZE"]=" 0"
D["OMPI_MTL_PORTALS4_FLOW_CONTROL"]=" 1"
D["MCA_ompi_mtl_DIRECT_CALL"]=" 0"
D["MCA_ompi_mtl_DIRECT_CALL_COMPONENT"]=" "
D["MCA_ompi_mtl_DIRECT_CALL_HEADER"]=" \"\""
D["OMPI_MCA_OP_HAVE_AVX512"]=" 1"
D["OMPI_MCA_OP_HAVE_AVX2"]=" 1"
D["OMPI_MCA_OP_HAVE_AVX"]=" 1"
D["OMPI_MCA_OP_HAVE_SSE41"]=" 1"
D["OMPI_MCA_OP_HAVE_SSE3"]=" 1"
D["OPAL_PORTALS4_MAX_MD_SIZE"]=" 0"
D["OPAL_PORTALS4_MAX_VA_SIZE"]=" 0"
D["MCA_ompi_part_DIRECT_CALL"]=" 0"
D["MCA_ompi_part_DIRECT_CALL_COMPONENT"]=" "
D["MCA_ompi_part_DIRECT_CALL_HEADER"]=" \"\""
D["MCA_PML_OB1_CUSTOM_MATCHING"]=" MCA_PML_OB1_CUSTOM_MATCHING_NONE"
D["MCA_ompi_pml_DIRECT_CALL"]=" 0"
D["MCA_ompi_pml_DIRECT_CALL_COMPONENT"]=" "
D["MCA_ompi_pml_DIRECT_CALL_HEADER"]=" \"\""
D["HAVE_SEM_OPEN"]=" 1"
D["OPAL_HAVE_SHAREDFP_SM"]=" 1"
D["HAVE_SEM_INIT"]=" 1"
D["OPAL_HAVE_SHAREDFP_SM"]=" 1"
D["MCA_oshmem_memheap_DIRECT_CALL"]=" 0"
D["MCA_oshmem_memheap_DIRECT_CALL_COMPONENT"]=" "
D["MCA_oshmem_memheap_DIRECT_CALL_HEADER"]=" \"\""
D["MCA_oshmem_spml_DIRECT_CALL"]=" 0"
D["MCA_oshmem_spml_DIRECT_CALL_COMPONENT"]=" "
D["MCA_oshmem_spml_DIRECT_CALL_HEADER"]=" \"\""
D["OSHMEM_SSHMEM_MMAP"]=" 1"
D["OSHMEM_SSHMEM_SYSV"]=" 1"
D["OMPI_PROC_ENDPOINT_TAG_MAX"]=" 1"
D["MPIX_CUDA_AWARE_SUPPORT"]=" 0"
D["MPIX_ROCM_AWARE_SUPPORT"]=" 0"
D["OMPI_MPIEXT_COMPONENTS"]=" \"affinity, cuda, ftmpi, rocm\""
D["OPAL_C_HAVE_VISIBILITY"]=" 1"
D["HAVE_DLFCN_H"]=" 1"
D["LT_OBJDIR"]=" \".libs/\""
D["WRAPPER_RPATH_SUPPORT"]=" \"runpath\""
D["OMPI_WRAPPER_CFLAGS"]=" \"-pthread \""
D["OMPI_WRAPPER_CXXFLAGS"]=" \"-pthread \""
D["OMPI_WRAPPER_FCFLAGS"]=" \"\""
D["OMPI_WRAPPER_LDFLAGS"]=" \"-L${libdir}  -Wl,-rpath -Wl,${libdir} -Wl,--enable-new-dtags\""
D["OMPI_WRAPPER_LIBS"]=" \"-lmpi\""
D["OSHMEM_WRAPPER_CFLAGS"]=" \"-pthread \""
D["OSHMEM_WRAPPER_CXXFLAGS"]=" \"-pthread \""
D["OSHMEM_WRAPPER_FCFLAGS"]=" \"\""
D["OSHMEM_WRAPPER_LDFLAGS"]=" \"-L${libdir}  -Wl,-rpath -Wl,${libdir} -Wl,--enable-new-dtags\""
D["OSHMEM_WRAPPER_LIBS"]=" \"-loshmem -lmpi\""
D["OPAL_STDC_HEADERS"]=" 1"
D["OPAL_HAVE_SYS_TIME_H"]=" 1"
D["OPAL_HAVE_LONG_LONG"]=" 1"
D["OPAL_MCA_PREFIX"]=" \"OMPI_MCA_\""
D["OPAL_MCA_CMD_LINE_ID"]=" \"mca\""
  for (key in D) D_is_set[key] = 1
  FS = ""
}
/^[\t ]*#[\t ]*(define|undef)[\t ]+[_abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ][_abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789]*([\t (]|$)/ {
  line = $ 0
  split(line, arg, " ")
  if (arg[1] == "#") {
    defundef = arg[2]
    mac1 = arg[3]
  } else {
    defundef = substr(arg[1], 2)
    mac1 = arg[2]
  }
  split(mac1, mac2, "(") #)
  macro = mac2[1]
  prefix = substr(line, 1, index(line, defundef) - 1)
  if (D_is_set[macro]) {
    # Preserve the white space surrounding the "#".
    print prefix "define", macro P[macro] D[macro]
    next
  } else {
    # Replace #undef with comments.  This is necessary, for example,
    # in the case of _POSIX_SOURCE, which is predefined and required
    # on some systems where configure will not decide to define it.
    if (defundef == "undef") {
      print "/*", prefix defundef, macro, "*/"
      next
    }
  }
}
{ print }
_ACAWK
  as_fn_error $? "could not setup config headers machinery" "$LINENO" 5
fi # test -n "$CONFIG_HEADERS"


eval set X "  :F $CONFIG_FILES  :H $CONFIG_HEADERS  :L $CONFIG_LINKS  :C $CONFIG_COMMANDS"
shift
for ac_tag
do
  case $ac_tag in
  :[FHLC]) ac_mode=$ac_tag; continue;;
  esac
  case $ac_mode$ac_tag in
  :[FHL]*:*);;
  :L* | :C*:*) as_fn_error $? "invalid tag \`$ac_tag'" "$LINENO" 5;;
  :[FH]-) ac_tag=-:-;;
  :[FH]*) ac_tag=$ac_tag:$ac_tag.in;;
  esac
  ac_save_IFS=$IFS
  IFS=:
  set x $ac_tag
  IFS=$ac_save_IFS
  shift
  ac_file=$1
  shift

  case $ac_mode in
  :L) ac_source=$1;;
  :[FH])
    ac_file_inputs=
    for ac_f
    do
      case $ac_f in
      -) ac_f="$ac_tmp/stdin";;
      *) # Look for the file first in the build tree, then in the source tree
	 # (if the path is not absolute).  The absolute path cannot be DOS-style,
	 # because $ac_f cannot contain `:'.
	 test -f "$ac_f" ||
	   case $ac_f in
	   [\\/$]*) false;;
	   *) test -f "$srcdir/$ac_f" && ac_f="$srcdir/$ac_f";;
	   esac ||
	   as_fn_error 1 "cannot find input file: \`$ac_f'" "$LINENO" 5;;
      esac
      case $ac_f in *\'*) ac_f=`printf "%s\n" "$ac_f" | sed "s/'/'\\\\\\\\''/g"`;; esac
      as_fn_append ac_file_inputs " '$ac_f'"
    done

    # Let's still pretend it is `configure' which instantiates (i.e., don't
    # use $as_me), people would be surprised to read:
    #    /* config.h.  Generated by config.status.  */
    configure_input='Generated from '`
	  printf "%s\n" "$*" | sed 's|^[^:]*/||;s|:[^:]*/|, |g'
	`' by configure.'
    if test x"$ac_file" != x-; then
      configure_input="$ac_file.  $configure_input"
      { printf "%s\n" "$as_me:${as_lineno-$LINENO}: creating $ac_file" >&5
printf "%s\n" "$as_me: creating $ac_file" >&6;}
    fi
    # Neutralize special characters interpreted by sed in replacement strings.
    case $configure_input in #(
    *\&* | *\|* | *\\* )
       ac_sed_conf_input=`printf "%s\n" "$configure_input" |
       sed 's/[\\\\&|]/\\\\&/g'`;; #(
    *) ac_sed_conf_input=$configure_input;;
    esac

    case $ac_tag in
    *:-:* | *:-) cat >"$ac_tmp/stdin" \
      || as_fn_error $? "could not create $ac_file" "$LINENO" 5 ;;
    esac
    ;;
  esac

  ac_dir=`$as_dirname -- "$ac_file" ||
$as_expr X"$ac_file" : 'X\(.*[^/]\)//*[^/][^/]*/*$' \| \
	 X"$ac_file" : 'X\(//\)[^/]' \| \
	 X"$ac_file" : 'X\(//\)$' \| \
	 X"$ac_file" : 'X\(/\)' \| . 2>/dev/null ||
printf "%s\n" X"$ac_file" |
    sed '/^X\(.*[^/]\)\/\/*[^/][^/]*\/*$/{
	    s//\1/
	    q
	  }
	  /^X\(\/\/\)[^/].*/{
	    s//\1/
	    q
	  }
	  /^X\(\/\/\)$/{
	    s//\1/
	    q
	  }
	  /^X\(\/\).*/{
	    s//\1/
	    q
	  }
	  s/.*/./; q'`
  as_dir="$ac_dir"; as_fn_mkdir_p
  ac_builddir=.

case "$ac_dir" in
.) ac_dir_suffix= ac_top_builddir_sub=. ac_top_build_prefix= ;;
*)
  ac_dir_suffix=/`printf "%s\n" "$ac_dir" | sed 's|^\.[\\/]||'`
  # A ".." for each directory in $ac_dir_suffix.
  ac_top_builddir_sub=`printf "%s\n" "$ac_dir_suffix" | sed 's|/[^\\/]*|/..|g;s|/||'`
  case $ac_top_builddir_sub in
  "") ac_top_builddir_sub=. ac_top_build_prefix= ;;
  *)  ac_top_build_prefix=$ac_top_builddir_sub/ ;;
  esac ;;
esac
ac_abs_top_builddir=$ac_pwd
ac_abs_builddir=$ac_pwd$ac_dir_suffix
# for backward compatibility:
ac_top_builddir=$ac_top_build_prefix

case $srcdir in
  .)  # We are building in place.
    ac_srcdir=.
    ac_top_srcdir=$ac_top_builddir_sub
    ac_abs_top_srcdir=$ac_pwd ;;
  [\\/]* | ?:[\\/]* )  # Absolute name.
    ac_srcdir=$srcdir$ac_dir_suffix;
    ac_top_srcdir=$srcdir
    ac_abs_top_srcdir=$srcdir ;;
  *) # Relative name.
    ac_srcdir=$ac_top_build_prefix$srcdir$ac_dir_suffix
    ac_top_srcdir=$ac_top_build_prefix$srcdir
    ac_abs_top_srcdir=$ac_pwd/$srcdir ;;
esac
ac_abs_srcdir=$ac_abs_top_srcdir$ac_dir_suffix


  case $ac_mode in
  :F)
  #
  # CONFIG_FILE
  #

  case $INSTALL in
  [\\/$]* | ?:[\\/]* ) ac_INSTALL=$INSTALL ;;
  *) ac_INSTALL=$ac_top_build_prefix$INSTALL ;;
  esac
  ac_MKDIR_P=$MKDIR_P
  case $MKDIR_P in
  [\\/$]* | ?:[\\/]* ) ;;
  */*) ac_MKDIR_P=$ac_top_build_prefix$MKDIR_P ;;
  esac
# If the template does not know about datarootdir, expand it.
# FIXME: This hack should be removed a few years after 2.60.
ac_datarootdir_hack=; ac_datarootdir_seen=
ac_sed_dataroot='
/datarootdir/ {
  p
  q
}
/@datadir@/p
/@docdir@/p
/@infodir@/p
/@localedir@/p
/@mandir@/p'
case `eval "sed -n \"\$ac_sed_dataroot\" $ac_file_inputs"` in
*datarootdir*) ac_datarootdir_seen=yes;;
*@datadir@*|*@docdir@*|*@infodir@*|*@localedir@*|*@mandir@*)
  { printf "%s\n" "$as_me:${as_lineno-$LINENO}: WARNING: $ac_file_inputs seems to ignore the --datarootdir setting" >&5
printf "%s\n" "$as_me: WARNING: $ac_file_inputs seems to ignore the --datarootdir setting" >&2;}
  ac_datarootdir_hack='
  s&@datadir@&${datarootdir}&g
  s&@docdir@&${datarootdir}/doc/${PACKAGE_TARNAME}&g
  s&@infodir@&${datarootdir}/info&g
  s&@localedir@&${datarootdir}/locale&g
  s&@mandir@&${datarootdir}/man&g
  s&\${datarootdir}&${prefix}/share&g' ;;
esac
ac_sed_extra="/^[	 ]*VPATH[	 ]*=[	 ]*/{
h
s///
s/^/:/
s/[	 ]*$/:/
s/:\$(srcdir):/:/g
s/:\${srcdir}:/:/g
s/:@srcdir@:/:/g
s/^:*//
s/:*$//
x
s/\(=[	 ]*\).*/\1/
G
s/\n//
s/^[^=]*=[	 ]*$//
}

:t
/@[a-zA-Z_][a-zA-Z_0-9]*@/!b
s|@configure_input@|$ac_sed_conf_input|;t t
s&@top_builddir@&$ac_top_builddir_sub&;t t
s&@top_build_prefix@&$ac_top_build_prefix&;t t
s&@srcdir@&$ac_srcdir&;t t
s&@abs_srcdir@&$ac_abs_srcdir&;t t
s&@top_srcdir@&$ac_top_srcdir&;t t
s&@abs_top_srcdir@&$ac_abs_top_srcdir&;t t
s&@builddir@&$ac_builddir&;t t
s&@abs_builddir@&$ac_abs_builddir&;t t
s&@abs_top_builddir@&$ac_abs_top_builddir&;t t
s&@INSTALL@&$ac_INSTALL&;t t
s&@MKDIR_P@&$ac_MKDIR_P&;t t
$ac_datarootdir_hack
"
eval sed \"\$ac_sed_extra\" "$ac_file_inputs" | $AWK -f "$ac_tmp/subs.awk" \
  >$ac_tmp/out || as_fn_error $? "could not create $ac_file" "$LINENO" 5

test -z "$ac_datarootdir_hack$ac_datarootdir_seen" &&
  { ac_out=`sed -n '/\${datarootdir}/p' "$ac_tmp/out"`; test -n "$ac_out"; } &&
  { ac_out=`sed -n '/^[	 ]*datarootdir[	 ]*:*=/p' \
      "$ac_tmp/out"`; test -z "$ac_out"; } &&
  { printf "%s\n" "$as_me:${as_lineno-$LINENO}: WARNING: $ac_file contains a reference to the variable \`datarootdir'
which seems to be undefined.  Please make sure it is defined" >&5
printf "%s\n" "$as_me: WARNING: $ac_file contains a reference to the variable \`datarootdir'
which seems to be undefined.  Please make sure it is defined" >&2;}

  rm -f "$ac_tmp/stdin"
  case $ac_file in
  -) cat "$ac_tmp/out" && rm -f "$ac_tmp/out";;
  *) rm -f "$ac_file" && mv "$ac_tmp/out" "$ac_file";;
  esac \
  || as_fn_error $? "could not create $ac_file" "$LINENO" 5
 ;;
  :H)
  #
  # CONFIG_HEADER
  #
  if test x"$ac_file" != x-; then
    {
      printf "%s\n" "/* $configure_input  */" >&1 \
      && eval '$AWK -f "$ac_tmp/defines.awk"' "$ac_file_inputs"
    } >"$ac_tmp/config.h" \
      || as_fn_error $? "could not create $ac_file" "$LINENO" 5
    if diff "$ac_file" "$ac_tmp/config.h" >/dev/null 2>&1; then
      { printf "%s\n" "$as_me:${as_lineno-$LINENO}: $ac_file is unchanged" >&5
printf "%s\n" "$as_me: $ac_file is unchanged" >&6;}
    else
      rm -f "$ac_file"
      mv "$ac_tmp/config.h" "$ac_file" \
	|| as_fn_error $? "could not create $ac_file" "$LINENO" 5
    fi
  else
    printf "%s\n" "/* $configure_input  */" >&1 \
      && eval '$AWK -f "$ac_tmp/defines.awk"' "$ac_file_inputs" \
      || as_fn_error $? "could not create -" "$LINENO" 5
  fi
# Compute "$ac_file"'s index in $config_headers.
_am_arg="$ac_file"
_am_stamp_count=1
for _am_header in $config_headers :; do
  case $_am_header in
    $_am_arg | $_am_arg:* )
      break ;;
    * )
      _am_stamp_count=`expr $_am_stamp_count + 1` ;;
  esac
done
echo "timestamp for $_am_arg" >`$as_dirname -- "$_am_arg" ||
$as_expr X"$_am_arg" : 'X\(.*[^/]\)//*[^/][^/]*/*$' \| \
	 X"$_am_arg" : 'X\(//\)[^/]' \| \
	 X"$_am_arg" : 'X\(//\)$' \| \
	 X"$_am_arg" : 'X\(/\)' \| . 2>/dev/null ||
printf "%s\n" X"$_am_arg" |
    sed '/^X\(.*[^/]\)\/\/*[^/][^/]*\/*$/{
	    s//\1/
	    q
	  }
	  /^X\(\/\/\)[^/].*/{
	    s//\1/
	    q
	  }
	  /^X\(\/\/\)$/{
	    s//\1/
	    q
	  }
	  /^X\(\/\).*/{
	    s//\1/
	    q
	  }
	  s/.*/./; q'`/stamp-h$_am_stamp_count
 ;;
  :L)
  #
  # CONFIG_LINK
  #

  if test "$ac_source" = "$ac_file" && test "$srcdir" = '.'; then
    :
  else
    # Prefer the file from the source tree if names are identical.
    if test "$ac_source" = "$ac_file" || test ! -r "$ac_source"; then
      ac_source=$srcdir/$ac_source
    fi

    { printf "%s\n" "$as_me:${as_lineno-$LINENO}: linking $ac_source to $ac_file" >&5
printf "%s\n" "$as_me: linking $ac_source to $ac_file" >&6;}

    if test ! -r "$ac_source"; then
      as_fn_error $? "$ac_source: file not found" "$LINENO" 5
    fi
    rm -f "$ac_file"

    # Try a relative symlink, then a hard link, then a copy.
    case $ac_source in
    [\\/$]* | ?:[\\/]* ) ac_rel_source=$ac_source ;;
	*) ac_rel_source=$ac_top_build_prefix$ac_source ;;
    esac
    ln -s "$ac_rel_source" "$ac_file" 2>/dev/null ||
      ln "$ac_source" "$ac_file" 2>/dev/null ||
      cp -p "$ac_source" "$ac_file" ||
      as_fn_error $? "cannot link or copy $ac_source to $ac_file" "$LINENO" 5
  fi
 ;;
  :C)  { printf "%s\n" "$as_me:${as_lineno-$LINENO}: executing $ac_file commands" >&5
printf "%s\n" "$as_me: executing $ac_file commands" >&6;}
 ;;
  esac


  case $ac_file$ac_mode in
    "depfiles":C) test x"$AMDEP_TRUE" != x"" || {
  # Older Autoconf quotes --file arguments for eval, but not when files
  # are listed without --file.  Let's play safe and only enable the eval
  # if we detect the quoting.
  # TODO: see whether this extra hack can be removed once we start
  # requiring Autoconf 2.70 or later.
  case $CONFIG_FILES in #(
  *\'*) :
    eval set x "$CONFIG_FILES" ;; #(
  *) :
    set x $CONFIG_FILES ;; #(
  *) :
     ;;
esac
  shift
  # Used to flag and report bootstrapping failures.
  am_rc=0
  for am_mf
  do
    # Strip MF so we end up with the name of the file.
    am_mf=`printf "%s\n" "$am_mf" | sed -e 's/:.*$//'`
    # Check whether this is an Automake generated Makefile which includes
    # dependency-tracking related rules and includes.
    # Grep'ing the whole file directly is not great: AIX grep has a line
    # limit of 2048, but all sed's we know have understand at least 4000.
    sed -n 's,^am--depfiles:.*,X,p' "$am_mf" | grep X >/dev/null 2>&1 \
      || continue
    am_dirpart=`$as_dirname -- "$am_mf" ||
$as_expr X"$am_mf" : 'X\(.*[^/]\)//*[^/][^/]*/*$' \| \
	 X"$am_mf" : 'X\(//\)[^/]' \| \
	 X"$am_mf" : 'X\(//\)$' \| \
	 X"$am_mf" : 'X\(/\)' \| . 2>/dev/null ||
printf "%s\n" X"$am_mf" |
    sed '/^X\(.*[^/]\)\/\/*[^/][^/]*\/*$/{
	    s//\1/
	    q
	  }
	  /^X\(\/\/\)[^/].*/{
	    s//\1/
	    q
	  }
	  /^X\(\/\/\)$/{
	    s//\1/
	    q
	  }
	  /^X\(\/\).*/{
	    s//\1/
	    q
	  }
	  s/.*/./; q'`
    am_filepart=`$as_basename -- "$am_mf" ||
$as_expr X/"$am_mf" : '.*/\([^/][^/]*\)/*$' \| \
	 X"$am_mf" : 'X\(//\)$' \| \
	 X"$am_mf" : 'X\(/\)' \| . 2>/dev/null ||
printf "%s\n" X/"$am_mf" |
    sed '/^.*\/\([^/][^/]*\)\/*$/{
	    s//\1/
	    q
	  }
	  /^X\/\(\/\/\)$/{
	    s//\1/
	    q
	  }
	  /^X\/\(\/\).*/{
	    s//\1/
	    q
	  }
	  s/.*/./; q'`
    { echo "$as_me:$LINENO: cd "$am_dirpart" \
      && sed -e '/# am--include-marker/d' "$am_filepart" \
        | $MAKE -f - am--depfiles" >&5
   (cd "$am_dirpart" \
      && sed -e '/# am--include-marker/d' "$am_filepart" \
        | $MAKE -f - am--depfiles) >&5 2>&5
   ac_status=$?
   echo "$as_me:$LINENO: \$? = $ac_status" >&5
   (exit $ac_status); } || am_rc=$?
  done
  if test $am_rc -ne 0; then
    { { printf "%s\n" "$as_me:${as_lineno-$LINENO}: error: in \`$ac_pwd':" >&5
printf "%s\n" "$as_me: error: in \`$ac_pwd':" >&2;}
as_fn_error $? "Something went wrong bootstrapping makefile fragments
    for automatic dependency tracking.  If GNU make was not used, consider
    re-running the configure script with MAKE=\"gmake\" (or whatever is
    necessary).  You can also try re-running configure with the
    '--disable-dependency-tracking' option to at least be able to build
    the package (albeit without support for automatic dependency tracking).
See \`config.log' for more details" "$LINENO" 5; }
  fi
  { am_dirpart=; unset am_dirpart;}
  { am_filepart=; unset am_filepart;}
  { am_mf=; unset am_mf;}
  { am_rc=; unset am_rc;}
  rm -f conftest-deps.mk
}
 ;;
    "ompi/mca/osc/monitoring/osc_monitoring_template_gen.h":C) filename="ompi/mca/osc/monitoring/osc_monitoring_template_gen.h"
               components=`echo "monitoring, portals4, rdma, ucx, sm" | sed -e 's/,/ /g' -e 's/monitoring//'`
               cat <<EOF >$filename
/* $filename
 *
 * This file was generated from ompi/mca/osc/monitoring/configure.m4
 *
 * DO NOT EDIT THIS FILE.
 *
 */
/*
 * Copyright (c) 2017-2018 Inria.  All rights reserved.
 * \$COPYRIGHT$
 *
 * Additional copyrights may follow
 *
 * \$HEADER$
 */

#ifndef MCA_OSC_MONITORING_GEN_TEMPLATE_H
#define MCA_OSC_MONITORING_GEN_TEMPLATE_H

#include "ompi_config.h"
#include "ompi/mca/osc/osc.h"
#include "ompi/mca/osc/monitoring/osc_monitoring_template.h"

/************************************************************/
/* Include template generating macros and inlined functions */

EOF
               # Generate each case in order to register the proper template functions
               for comp in $components
               do
                   echo "OSC_MONITORING_MODULE_TEMPLATE_GENERATE(${comp})" >>$filename
               done
               cat <<EOF >>$filename

/************************************************************/

typedef struct {
    const char * name;
    ompi_osc_base_module_t * (*fct) (ompi_osc_base_module_t *);
} osc_monitoring_components_list_t;

static const osc_monitoring_components_list_t osc_monitoring_components_list[] = {
EOF
               for comp in $components
               do
                   echo "    { .name = \"${comp}\", .fct = OSC_MONITORING_SET_TEMPLATE_FCT_NAME(${comp}) }," >>$filename
               done
               cat <<EOF >>$filename
    { .name = NULL, .fct = NULL }
};

#endif /* MCA_OSC_MONITORING_GEN_TEMPLATE_H */
EOF
               unset filename components
               ;;
    "libtool":C)

    # See if we are running on zsh, and set the options that allow our
    # commands through without removal of \ escapes.
    if test -n "${ZSH_VERSION+set}"; then
      setopt NO_GLOB_SUBST
    fi

    cfgfile=${ofile}T
    trap "$RM \"$cfgfile\"; exit 1" 1 2 15
    $RM "$cfgfile"

    cat <<_LT_EOF >> "$cfgfile"
#! $SHELL
# Generated automatically by $as_me ($PACKAGE) $VERSION
# Libtool was configured on host `(hostname || uname -n) 2>/dev/null | sed 1q`:
# NOTE: Changes made to this file will be lost: look at ltmain.sh.

# Provide generalized library-building support services.
# Written by Gordon Matzigkeit, 1996

# Copyright (C) 2014 Free Software Foundation, Inc.
# This is free software; see the source for copying conditions.  There is NO
# warranty; not even for MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.

# GNU Libtool is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation; either version 2 of of the License, or
# (at your option) any later version.
#
# As a special exception to the GNU General Public License, if you
# distribute this file as part of a program or library that is built
# using GNU Libtool, you may include this file under the  same
# distribution terms that you use for the rest of that program.
#
# GNU Libtool is distributed in the hope that it will be useful, but
# WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program.  If not, see <http://www.gnu.org/licenses/>.


# The names of the tagged configurations supported by this script.
available_tags='CXX FC '

# Configured defaults for sys_lib_dlsearch_path munging.
: \${LT_SYS_LIBRARY_PATH="$configure_time_lt_sys_library_path"}

# ### BEGIN LIBTOOL CONFIG

# Whether or not to build shared libraries.
build_libtool_libs=$enable_shared

# Whether or not to build static libraries.
build_old_libs=$enable_static

# A BSD- or MS-compatible name lister.
NM=$lt_NM

# Which release of libtool.m4 was used?
macro_version=$macro_version
macro_revision=$macro_revision

# What type of objects to build.
pic_mode=$pic_mode

# Whether or not to optimize for fast installation.
fast_install=$enable_fast_install

# Shared archive member basename,for filename based shared library versioning on AIX.
shared_archive_member_spec=$shared_archive_member_spec

# Shell to use when invoking shell scripts.
SHELL=$lt_SHELL

# An echo program that protects backslashes.
ECHO=$lt_ECHO

# The PATH separator for the build system.
PATH_SEPARATOR=$lt_PATH_SEPARATOR

# The host system.
host_alias=$host_alias
host=$host
host_os=$host_os

# The build system.
build_alias=$build_alias
build=$build
build_os=$build_os

# A sed program that does not truncate output.
SED=$lt_SED

# Sed that helps us avoid accidentally triggering echo(1) options like -n.
Xsed="\$SED -e 1s/^X//"

# A grep program that handles long lines.
GREP=$lt_GREP

# An ERE matcher.
EGREP=$lt_EGREP

# A literal string matcher.
FGREP=$lt_FGREP

# Whether we need soft or hard links.
LN_S=$lt_LN_S

# What is the maximum length of a command?
max_cmd_len=$max_cmd_len

# Object file suffix (normally "o").
objext=$ac_objext

# Executable file suffix (normally "").
exeext=$exeext

# whether the shell understands "unset".
lt_unset=$lt_unset

# turn spaces into newlines.
SP2NL=$lt_lt_SP2NL

# turn newlines into spaces.
NL2SP=$lt_lt_NL2SP

# convert \$build file names to \$host format.
to_host_file_cmd=$lt_cv_to_host_file_cmd

# convert \$build files to toolchain format.
to_tool_file_cmd=$lt_cv_to_tool_file_cmd

# An object symbol dumper.
OBJDUMP=$lt_OBJDUMP

# Method to check whether dependent libraries are shared objects.
deplibs_check_method=$lt_deplibs_check_method

# Command to use when deplibs_check_method = "file_magic".
file_magic_cmd=$lt_file_magic_cmd

# How to find potential files when deplibs_check_method = "file_magic".
file_magic_glob=$lt_file_magic_glob

# Find potential files using nocaseglob when deplibs_check_method = "file_magic".
want_nocaseglob=$lt_want_nocaseglob

# DLL creation program.
DLLTOOL=$lt_DLLTOOL

# Command to associate shared and link libraries.
sharedlib_from_linklib_cmd=$lt_sharedlib_from_linklib_cmd

# The archiver.
AR=$lt_AR

# Flags to create an archive.
AR_FLAGS=$lt_AR_FLAGS

# How to feed a file listing to the archiver.
archiver_list_spec=$lt_archiver_list_spec

# A symbol stripping program.
STRIP=$lt_STRIP

# Commands used to install an old-style archive.
RANLIB=$lt_RANLIB
old_postinstall_cmds=$lt_old_postinstall_cmds
old_postuninstall_cmds=$lt_old_postuninstall_cmds

# Whether to use a lock for old archive extraction.
lock_old_archive_extraction=$lock_old_archive_extraction

# A C compiler.
LTCC=$lt_CC

# LTCC compiler flags.
LTCFLAGS=$lt_CFLAGS

# Take the output of nm and produce a listing of raw symbols and C names.
global_symbol_pipe=$lt_lt_cv_sys_global_symbol_pipe

# Transform the output of nm in a proper C declaration.
global_symbol_to_cdecl=$lt_lt_cv_sys_global_symbol_to_cdecl

# Transform the output of nm into a list of symbols to manually relocate.
global_symbol_to_import=$lt_lt_cv_sys_global_symbol_to_import

# Transform the output of nm in a C name address pair.
global_symbol_to_c_name_address=$lt_lt_cv_sys_global_symbol_to_c_name_address

# Transform the output of nm in a C name address pair when lib prefix is needed.
global_symbol_to_c_name_address_lib_prefix=$lt_lt_cv_sys_global_symbol_to_c_name_address_lib_prefix

# The name lister interface.
nm_interface=$lt_lt_cv_nm_interface

# Specify filename containing input files for \$NM.
nm_file_list_spec=$lt_nm_file_list_spec

# The root where to search for dependent libraries,and where our libraries should be installed.
lt_sysroot=$lt_sysroot

# Command to truncate a binary pipe.
lt_truncate_bin=$lt_lt_cv_truncate_bin

# The name of the directory that contains temporary libtool files.
objdir=$objdir

# Used to examine libraries when file_magic_cmd begins with "file".
MAGIC_CMD=$MAGIC_CMD

# Must we lock files when doing compilation?
need_locks=$lt_need_locks

# Manifest tool.
MANIFEST_TOOL=$lt_MANIFEST_TOOL

# Tool to manipulate archived DWARF debug symbol files on Mac OS X.
DSYMUTIL=$lt_DSYMUTIL

# Tool to change global to local symbols on Mac OS X.
NMEDIT=$lt_NMEDIT

# Tool to manipulate fat objects and archives on Mac OS X.
LIPO=$lt_LIPO

# ldd/readelf like tool for Mach-O binaries on Mac OS X.
OTOOL=$lt_OTOOL

# ldd/readelf like tool for 64 bit Mach-O binaries on Mac OS X 10.4.
OTOOL64=$lt_OTOOL64

# Old archive suffix (normally "a").
libext=$libext

# Shared library suffix (normally ".so").
shrext_cmds=$lt_shrext_cmds

# The commands to extract the exported symbol list from a shared archive.
extract_expsyms_cmds=$lt_extract_expsyms_cmds

# Variables whose values should be saved in libtool wrapper scripts and
# restored at link time.
variables_saved_for_relink=$lt_variables_saved_for_relink

# Do we need the "lib" prefix for modules?
need_lib_prefix=$need_lib_prefix

# Do we need a version for libraries?
need_version=$need_version

# Library versioning type.
version_type=$version_type

# Shared library runtime path variable.
runpath_var=$runpath_var

# Shared library path variable.
shlibpath_var=$shlibpath_var

# Is shlibpath searched before the hard-coded library search path?
shlibpath_overrides_runpath=$shlibpath_overrides_runpath

# Format of library name prefix.
libname_spec=$lt_libname_spec

# List of archive names.  First name is the real one, the rest are links.
# The last name is the one that the linker finds with -lNAME
library_names_spec=$lt_library_names_spec

# The coded name of the library, if different from the real name.
soname_spec=$lt_soname_spec

# Permission mode override for installation of shared libraries.
install_override_mode=$lt_install_override_mode

# Command to use after installation of a shared archive.
postinstall_cmds=$lt_postinstall_cmds

# Command to use after uninstallation of a shared archive.
postuninstall_cmds=$lt_postuninstall_cmds

# Commands used to finish a libtool library installation in a directory.
finish_cmds=$lt_finish_cmds

# As "finish_cmds", except a single script fragment to be evaled but
# not shown.
finish_eval=$lt_finish_eval

# Whether we should hardcode library paths into libraries.
hardcode_into_libs=$hardcode_into_libs

# Compile-time system search path for libraries.
sys_lib_search_path_spec=$lt_sys_lib_search_path_spec

# Detected run-time system search path for libraries.
sys_lib_dlsearch_path_spec=$lt_configure_time_dlsearch_path

# Explicit LT_SYS_LIBRARY_PATH set during ./configure time.
configure_time_lt_sys_library_path=$lt_configure_time_lt_sys_library_path

# Whether dlopen is supported.
dlopen_support=$enable_dlopen

# Whether dlopen of programs is supported.
dlopen_self=$enable_dlopen_self

# Whether dlopen of statically linked programs is supported.
dlopen_self_static=$enable_dlopen_self_static

# Commands to strip libraries.
old_striplib=$lt_old_striplib
striplib=$lt_striplib


# The linker used to build libraries.
LD=$lt_LD

# How to create reloadable object files.
reload_flag=$lt_reload_flag
reload_cmds=$lt_reload_cmds

# Commands used to build an old-style archive.
old_archive_cmds=$lt_old_archive_cmds

# A language specific compiler.
CC=$lt_compiler

# Is the compiler the GNU compiler?
with_gcc=$GCC

# Compiler flag to turn off builtin functions.
no_builtin_flag=$lt_lt_prog_compiler_no_builtin_flag

# Additional compiler flags for building library objects.
pic_flag=$lt_lt_prog_compiler_pic

# How to pass a linker flag through the compiler.
wl=$lt_lt_prog_compiler_wl

# Compiler flag to prevent dynamic linking.
link_static_flag=$lt_lt_prog_compiler_static

# Does compiler simultaneously support -c and -o options?
compiler_c_o=$lt_lt_cv_prog_compiler_c_o

# Whether or not to add -lc for building shared libraries.
build_libtool_need_lc=$archive_cmds_need_lc

# Whether or not to disallow shared libs when runtime libs are static.
allow_libtool_libs_with_static_runtimes=$enable_shared_with_static_runtimes

# Compiler flag to allow reflexive dlopens.
export_dynamic_flag_spec=$lt_export_dynamic_flag_spec

# Compiler flag to generate shared objects directly from archives.
whole_archive_flag_spec=$lt_whole_archive_flag_spec

# Whether the compiler copes with passing no objects directly.
compiler_needs_object=$lt_compiler_needs_object

# Create an old-style archive from a shared archive.
old_archive_from_new_cmds=$lt_old_archive_from_new_cmds

# Create a temporary old-style archive to link instead of a shared archive.
old_archive_from_expsyms_cmds=$lt_old_archive_from_expsyms_cmds

# Commands used to build a shared archive.
archive_cmds=$lt_archive_cmds
archive_expsym_cmds=$lt_archive_expsym_cmds

# Commands used to build a loadable module if different from building
# a shared archive.
module_cmds=$lt_module_cmds
module_expsym_cmds=$lt_module_expsym_cmds

# Whether we are building with GNU ld or not.
with_gnu_ld=$lt_with_gnu_ld

# Flag that allows shared libraries with undefined symbols to be built.
allow_undefined_flag=$lt_allow_undefined_flag

# Flag that enforces no undefined symbols.
no_undefined_flag=$lt_no_undefined_flag

# Flag to hardcode \$libdir into a binary during linking.
# This must work even if \$libdir does not exist
hardcode_libdir_flag_spec=$lt_hardcode_libdir_flag_spec

# Whether we need a single "-rpath" flag with a separated argument.
hardcode_libdir_separator=$lt_hardcode_libdir_separator

# Set to "yes" if using DIR/libNAME\$shared_ext during linking hardcodes
# DIR into the resulting binary.
hardcode_direct=$hardcode_direct

# Set to "yes" if using DIR/libNAME\$shared_ext during linking hardcodes
# DIR into the resulting binary and the resulting library dependency is
# "absolute",i.e impossible to change by setting \$shlibpath_var if the
# library is relocated.
hardcode_direct_absolute=$hardcode_direct_absolute

# Set to "yes" if using the -LDIR flag during linking hardcodes DIR
# into the resulting binary.
hardcode_minus_L=$hardcode_minus_L

# Set to "yes" if using SHLIBPATH_VAR=DIR during linking hardcodes DIR
# into the resulting binary.
hardcode_shlibpath_var=$hardcode_shlibpath_var

# Set to "yes" if building a shared library automatically hardcodes DIR
# into the library and all subsequent libraries and executables linked
# against it.
hardcode_automatic=$hardcode_automatic

# Set to yes if linker adds runtime paths of dependent libraries
# to runtime path list.
inherit_rpath=$inherit_rpath

# Whether libtool must link a program against all its dependency libraries.
link_all_deplibs=$link_all_deplibs

# Set to "yes" if exported symbols are required.
always_export_symbols=$always_export_symbols

# The commands to list exported symbols.
export_symbols_cmds=$lt_export_symbols_cmds

# Symbols that should not be listed in the preloaded symbols.
exclude_expsyms=$lt_exclude_expsyms

# Symbols that must always be exported.
include_expsyms=$lt_include_expsyms

# Commands necessary for linking programs (against libraries) with templates.
prelink_cmds=$lt_prelink_cmds

# Commands necessary for finishing linking programs.
postlink_cmds=$lt_postlink_cmds

# Specify filename containing input files.
file_list_spec=$lt_file_list_spec

# How to hardcode a shared library path into an executable.
hardcode_action=$hardcode_action

# The directories searched by this compiler when creating a shared library.
compiler_lib_search_dirs=$lt_compiler_lib_search_dirs

# Dependencies to place before and after the objects being linked to
# create a shared library.
predep_objects=$lt_predep_objects
postdep_objects=$lt_postdep_objects
predeps=$lt_predeps
postdeps=$lt_postdeps

# The library search path used internally by the compiler when linking
# a shared library.
compiler_lib_search_path=$lt_compiler_lib_search_path

# ### END LIBTOOL CONFIG

_LT_EOF

    cat <<'_LT_EOF' >> "$cfgfile"

# ### BEGIN FUNCTIONS SHARED WITH CONFIGURE

# func_munge_path_list VARIABLE PATH
# -----------------------------------
# VARIABLE is name of variable containing _space_ separated list of
# directories to be munged by the contents of PATH, which is string
# having a format:
# "DIR[:DIR]:"
#       string "DIR[ DIR]" will be prepended to VARIABLE
# ":DIR[:DIR]"
#       string "DIR[ DIR]" will be appended to VARIABLE
# "DIRP[:DIRP]::[DIRA:]DIRA"
#       string "DIRP[ DIRP]" will be prepended to VARIABLE and string
#       "DIRA[ DIRA]" will be appended to VARIABLE
# "DIR[:DIR]"
#       VARIABLE will be replaced by "DIR[ DIR]"
func_munge_path_list ()
{
    case x$2 in
    x)
        ;;
    *:)
        eval $1=\"`$ECHO $2 | $SED 's/:/ /g'` \$$1\"
        ;;
    x:*)
        eval $1=\"\$$1 `$ECHO $2 | $SED 's/:/ /g'`\"
        ;;
    *::*)
        eval $1=\"\$$1\ `$ECHO $2 | $SED -e 's/.*:://' -e 's/:/ /g'`\"
        eval $1=\"`$ECHO $2 | $SED -e 's/::.*//' -e 's/:/ /g'`\ \$$1\"
        ;;
    *)
        eval $1=\"`$ECHO $2 | $SED 's/:/ /g'`\"
        ;;
    esac
}


# Calculate cc_basename.  Skip known compiler wrappers and cross-prefix.
func_cc_basename ()
{
    for cc_temp in $*""; do
      case $cc_temp in
        compile | *[\\/]compile | ccache | *[\\/]ccache ) ;;
        distcc | *[\\/]distcc | purify | *[\\/]purify ) ;;
        \-*) ;;
        *) break;;
      esac
    done
    func_cc_basename_result=`$ECHO "$cc_temp" | $SED "s%.*/%%; s%^$host_alias-%%"`
}


# ### END FUNCTIONS SHARED WITH CONFIGURE

_LT_EOF

  case $host_os in
  aix3*)
    cat <<\_LT_EOF >> "$cfgfile"
# AIX sometimes has problems with the GCC collect2 program.  For some
# reason, if we set the COLLECT_NAMES environment variable, the problems
# vanish in a puff of smoke.
if test set != "${COLLECT_NAMES+set}"; then
  COLLECT_NAMES=
  export COLLECT_NAMES
fi
_LT_EOF
    ;;
  esac



ltmain=$ac_aux_dir/ltmain.sh


  # We use sed instead of cat because bash on DJGPP gets confused if
  # if finds mixed CR/LF and LF-only lines.  Since sed operates in
  # text mode, it properly converts lines to CR/LF.  This bash problem
  # is reportedly fixed, but why not run on old versions too?
  sed '$q' "$ltmain" >> "$cfgfile" \
     || (rm -f "$cfgfile"; exit 1)

   mv -f "$cfgfile" "$ofile" ||
    (rm -f "$ofile" && cp "$cfgfile" "$ofile" && rm -f "$cfgfile")
  chmod +x "$ofile"


    cat <<_LT_EOF >> "$ofile"

# ### BEGIN LIBTOOL TAG CONFIG: CXX

# The linker used to build libraries.
LD=$lt_LD_CXX

# How to create reloadable object files.
reload_flag=$lt_reload_flag_CXX
reload_cmds=$lt_reload_cmds_CXX

# Commands used to build an old-style archive.
old_archive_cmds=$lt_old_archive_cmds_CXX

# A language specific compiler.
CC=$lt_compiler_CXX

# Is the compiler the GNU compiler?
with_gcc=$GCC_CXX

# Compiler flag to turn off builtin functions.
no_builtin_flag=$lt_lt_prog_compiler_no_builtin_flag_CXX

# Additional compiler flags for building library objects.
pic_flag=$lt_lt_prog_compiler_pic_CXX

# How to pass a linker flag through the compiler.
wl=$lt_lt_prog_compiler_wl_CXX

# Compiler flag to prevent dynamic linking.
link_static_flag=$lt_lt_prog_compiler_static_CXX

# Does compiler simultaneously support -c and -o options?
compiler_c_o=$lt_lt_cv_prog_compiler_c_o_CXX

# Whether or not to add -lc for building shared libraries.
build_libtool_need_lc=$archive_cmds_need_lc_CXX

# Whether or not to disallow shared libs when runtime libs are static.
allow_libtool_libs_with_static_runtimes=$enable_shared_with_static_runtimes_CXX

# Compiler flag to allow reflexive dlopens.
export_dynamic_flag_spec=$lt_export_dynamic_flag_spec_CXX

# Compiler flag to generate shared objects directly from archives.
whole_archive_flag_spec=$lt_whole_archive_flag_spec_CXX

# Whether the compiler copes with passing no objects directly.
compiler_needs_object=$lt_compiler_needs_object_CXX

# Create an old-style archive from a shared archive.
old_archive_from_new_cmds=$lt_old_archive_from_new_cmds_CXX

# Create a temporary old-style archive to link instead of a shared archive.
old_archive_from_expsyms_cmds=$lt_old_archive_from_expsyms_cmds_CXX

# Commands used to build a shared archive.
archive_cmds=$lt_archive_cmds_CXX
archive_expsym_cmds=$lt_archive_expsym_cmds_CXX

# Commands used to build a loadable module if different from building
# a shared archive.
module_cmds=$lt_module_cmds_CXX
module_expsym_cmds=$lt_module_expsym_cmds_CXX

# Whether we are building with GNU ld or not.
with_gnu_ld=$lt_with_gnu_ld_CXX

# Flag that allows shared libraries with undefined symbols to be built.
allow_undefined_flag=$lt_allow_undefined_flag_CXX

# Flag that enforces no undefined symbols.
no_undefined_flag=$lt_no_undefined_flag_CXX

# Flag to hardcode \$libdir into a binary during linking.
# This must work even if \$libdir does not exist
hardcode_libdir_flag_spec=$lt_hardcode_libdir_flag_spec_CXX

# Whether we need a single "-rpath" flag with a separated argument.
hardcode_libdir_separator=$lt_hardcode_libdir_separator_CXX

# Set to "yes" if using DIR/libNAME\$shared_ext during linking hardcodes
# DIR into the resulting binary.
hardcode_direct=$hardcode_direct_CXX

# Set to "yes" if using DIR/libNAME\$shared_ext during linking hardcodes
# DIR into the resulting binary and the resulting library dependency is
# "absolute",i.e impossible to change by setting \$shlibpath_var if the
# library is relocated.
hardcode_direct_absolute=$hardcode_direct_absolute_CXX

# Set to "yes" if using the -LDIR flag during linking hardcodes DIR
# into the resulting binary.
hardcode_minus_L=$hardcode_minus_L_CXX

# Set to "yes" if using SHLIBPATH_VAR=DIR during linking hardcodes DIR
# into the resulting binary.
hardcode_shlibpath_var=$hardcode_shlibpath_var_CXX

# Set to "yes" if building a shared library automatically hardcodes DIR
# into the library and all subsequent libraries and executables linked
# against it.
hardcode_automatic=$hardcode_automatic_CXX

# Set to yes if linker adds runtime paths of dependent libraries
# to runtime path list.
inherit_rpath=$inherit_rpath_CXX

# Whether libtool must link a program against all its dependency libraries.
link_all_deplibs=$link_all_deplibs_CXX

# Set to "yes" if exported symbols are required.
always_export_symbols=$always_export_symbols_CXX

# The commands to list exported symbols.
export_symbols_cmds=$lt_export_symbols_cmds_CXX

# Symbols that should not be listed in the preloaded symbols.
exclude_expsyms=$lt_exclude_expsyms_CXX

# Symbols that must always be exported.
include_expsyms=$lt_include_expsyms_CXX

# Commands necessary for linking programs (against libraries) with templates.
prelink_cmds=$lt_prelink_cmds_CXX

# Commands necessary for finishing linking programs.
postlink_cmds=$lt_postlink_cmds_CXX

# Specify filename containing input files.
file_list_spec=$lt_file_list_spec_CXX

# How to hardcode a shared library path into an executable.
hardcode_action=$hardcode_action_CXX

# The directories searched by this compiler when creating a shared library.
compiler_lib_search_dirs=$lt_compiler_lib_search_dirs_CXX

# Dependencies to place before and after the objects being linked to
# create a shared library.
predep_objects=$lt_predep_objects_CXX
postdep_objects=$lt_postdep_objects_CXX
predeps=$lt_predeps_CXX
postdeps=$lt_postdeps_CXX

# The library search path used internally by the compiler when linking
# a shared library.
compiler_lib_search_path=$lt_compiler_lib_search_path_CXX

# ### END LIBTOOL TAG CONFIG: CXX
_LT_EOF


    cat <<_LT_EOF >> "$ofile"

# ### BEGIN LIBTOOL TAG CONFIG: FC

# The linker used to build libraries.
LD=$lt_LD_FC

# How to create reloadable object files.
reload_flag=$lt_reload_flag_FC
reload_cmds=$lt_reload_cmds_FC

# Commands used to build an old-style archive.
old_archive_cmds=$lt_old_archive_cmds_FC

# A language specific compiler.
CC=$lt_compiler_FC

# Is the compiler the GNU compiler?
with_gcc=$GCC_FC

# Compiler flag to turn off builtin functions.
no_builtin_flag=$lt_lt_prog_compiler_no_builtin_flag_FC

# Additional compiler flags for building library objects.
pic_flag=$lt_lt_prog_compiler_pic_FC

# How to pass a linker flag through the compiler.
wl=$lt_lt_prog_compiler_wl_FC

# Compiler flag to prevent dynamic linking.
link_static_flag=$lt_lt_prog_compiler_static_FC

# Does compiler simultaneously support -c and -o options?
compiler_c_o=$lt_lt_cv_prog_compiler_c_o_FC

# Whether or not to add -lc for building shared libraries.
build_libtool_need_lc=$archive_cmds_need_lc_FC

# Whether or not to disallow shared libs when runtime libs are static.
allow_libtool_libs_with_static_runtimes=$enable_shared_with_static_runtimes_FC

# Compiler flag to allow reflexive dlopens.
export_dynamic_flag_spec=$lt_export_dynamic_flag_spec_FC

# Compiler flag to generate shared objects directly from archives.
whole_archive_flag_spec=$lt_whole_archive_flag_spec_FC

# Whether the compiler copes with passing no objects directly.
compiler_needs_object=$lt_compiler_needs_object_FC

# Create an old-style archive from a shared archive.
old_archive_from_new_cmds=$lt_old_archive_from_new_cmds_FC

# Create a temporary old-style archive to link instead of a shared archive.
old_archive_from_expsyms_cmds=$lt_old_archive_from_expsyms_cmds_FC

# Commands used to build a shared archive.
archive_cmds=$lt_archive_cmds_FC
archive_expsym_cmds=$lt_archive_expsym_cmds_FC

# Commands used to build a loadable module if different from building
# a shared archive.
module_cmds=$lt_module_cmds_FC
module_expsym_cmds=$lt_module_expsym_cmds_FC

# Whether we are building with GNU ld or not.
with_gnu_ld=$lt_with_gnu_ld_FC

# Flag that allows shared libraries with undefined symbols to be built.
allow_undefined_flag=$lt_allow_undefined_flag_FC

# Flag that enforces no undefined symbols.
no_undefined_flag=$lt_no_undefined_flag_FC

# Flag to hardcode \$libdir into a binary during linking.
# This must work even if \$libdir does not exist
hardcode_libdir_flag_spec=$lt_hardcode_libdir_flag_spec_FC

# Whether we need a single "-rpath" flag with a separated argument.
hardcode_libdir_separator=$lt_hardcode_libdir_separator_FC

# Set to "yes" if using DIR/libNAME\$shared_ext during linking hardcodes
# DIR into the resulting binary.
hardcode_direct=$hardcode_direct_FC

# Set to "yes" if using DIR/libNAME\$shared_ext during linking hardcodes
# DIR into the resulting binary and the resulting library dependency is
# "absolute",i.e impossible to change by setting \$shlibpath_var if the
# library is relocated.
hardcode_direct_absolute=$hardcode_direct_absolute_FC

# Set to "yes" if using the -LDIR flag during linking hardcodes DIR
# into the resulting binary.
hardcode_minus_L=$hardcode_minus_L_FC

# Set to "yes" if using SHLIBPATH_VAR=DIR during linking hardcodes DIR
# into the resulting binary.
hardcode_shlibpath_var=$hardcode_shlibpath_var_FC

# Set to "yes" if building a shared library automatically hardcodes DIR
# into the library and all subsequent libraries and executables linked
# against it.
hardcode_automatic=$hardcode_automatic_FC

# Set to yes if linker adds runtime paths of dependent libraries
# to runtime path list.
inherit_rpath=$inherit_rpath_FC

# Whether libtool must link a program against all its dependency libraries.
link_all_deplibs=$link_all_deplibs_FC

# Set to "yes" if exported symbols are required.
always_export_symbols=$always_export_symbols_FC

# The commands to list exported symbols.
export_symbols_cmds=$lt_export_symbols_cmds_FC

# Symbols that should not be listed in the preloaded symbols.
exclude_expsyms=$lt_exclude_expsyms_FC

# Symbols that must always be exported.
include_expsyms=$lt_include_expsyms_FC

# Commands necessary for linking programs (against libraries) with templates.
prelink_cmds=$lt_prelink_cmds_FC

# Commands necessary for finishing linking programs.
postlink_cmds=$lt_postlink_cmds_FC

# Specify filename containing input files.
file_list_spec=$lt_file_list_spec_FC

# How to hardcode a shared library path into an executable.
hardcode_action=$hardcode_action_FC

# The directories searched by this compiler when creating a shared library.
compiler_lib_search_dirs=$lt_compiler_lib_search_dirs_FC

# Dependencies to place before and after the objects being linked to
# create a shared library.
predep_objects=$lt_predep_objects_FC
postdep_objects=$lt_postdep_objects_FC
predeps=$lt_predeps_FC
postdeps=$lt_postdeps_FC

# The library search path used internally by the compiler when linking
# a shared library.
compiler_lib_search_path=$lt_compiler_lib_search_path_FC

# ### END LIBTOOL TAG CONFIG: FC
_LT_EOF

 ;;
    "ompi/tools/wrappers/ompi_wrapper_script":F) chmod +x ompi/tools/wrappers/ompi_wrapper_script ;;
    "contrib/dist/mofed/debian/rules":F) chmod +x contrib/dist/mofed/debian/rules ;;
    "contrib/dist/mofed/compile_debian_mlnx_example":F) chmod +x contrib/dist/mofed/compile_debian_mlnx_example ;;

  esac
done # for ac_tag


as_fn_exit 0
